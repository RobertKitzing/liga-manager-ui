var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,1.382,1,2.819]],["body/interfaces/AddMatchData.html",[0,1.933,1,4.47,2,0.166,3,0.166,4,0.149,5,3.178,6,0.482,7,1.046,8,4.79,9,4.79,10,3.104,11,0.717,12,0.015,13,1.874,14,0.3,15,3.039,16,2.527,17,1.32,18,0.271,19,1.422,20,0.773,21,0.166,22,5.459,23,2.823,24,1.593,25,4.301,26,4.301,27,1.05,28,2.375,29,2.129,30,4.876,31,2.377,32,2.377,33,2.377,34,2.958,35,2.245,36,2.958,37,1.614,38,1.614,39,0.201,40,1.05,41,0.974,42,3.531,43,1.05,44,3.531,45,0.099,46,0.938,47,0.938,48,3.531,49,3.531,50,1.727,51,2.023,52,3.178,53,3.531,54,3.944,55,3.531,56,0.579,57,1.186,58,2.129,59,1.439,60,1.27,61,2.527,62,1.548,63,3.178,64,3.178,65,2.703,66,3.178,67,1.133,68,1.091,69,4.876,70,1.27,71,2.914,72,3.178,73,1.269,74,3.531,75,3.531,76,3.531,77,3.531,78,3.531,79,3.531,80,4.78,81,3.217,82,4.78,83,4.78,84,4.301,85,3.531,86,3.658,87,3.531,88,2.377,89,3.531,90,3.531,91,2.023,92,3.531,93,3.531,94,4.78,95,3.531,96,4.78,97,3.531,98,3.531,99,3.531,100,2.914,101,2.703,102,1.373,103,3.531,104,3.944,105,3.531,106,0.01,107,0.01]],["title/components/AddteamComponent.html",[18,0.194,108,0.942]],["body/components/AddteamComponent.html",[2,0.166,3,0.166,4,0.149,6,0.483,7,1.048,11,0.813,12,0.015,13,1.675,14,0.224,18,0.344,19,1.052,21,0.166,28,2.949,29,2.132,39,0.149,40,2.114,41,1.96,43,1.423,45,0.1,46,0.939,56,0.785,57,1.187,72,4.306,106,0.01,107,0.01,108,1.602,109,1.135,110,1.135,111,1.135,112,3.537,113,1.135,114,1.535,115,5.512,116,5.512,117,1.007,118,4.785,119,3.537,120,1.053,121,4.075,122,1.007,123,1.082,124,0.967,125,4.306,126,4.075,127,3.183,128,0.606,129,0.939,130,4.075,131,4.075,132,3.424,133,5.512,134,1.86,135,0.774,136,1.535,137,1.535,138,1.535,139,1.864,140,1.135,141,1.135,142,1.135,143,0.939,144,1.135,145,0.975,146,1.135,147,0.975,148,1.135,149,0.975,150,1.135,151,0.975,152,1.093,153,1.135,154,0.939,155,1.135,156,0.975,157,1.135,158,0.975,159,1.135,160,0.975,161,1.135,162,0.975,163,1.135,164,1.013,165,1.135,166,0.975,167,1.135,168,0.975,169,1.135,170,0.975,171,1.135,172,0.939,173,1.135,174,0.939,175,1.135,176,0.975,177,1.135,178,0.975,179,1.135,180,0.904,181,1.135,182,0.939,183,1.135,184,0.939,185,1.135,186,0.975,187,1.135,188,0.939,189,1.013,190,1.135]],["title/components/AddtournamentroundComponent.html",[18,0.194,46,0.907]],["body/components/AddtournamentroundComponent.html",[0,0.889,1,4.376,2,0.103,3,0.103,4,0.093,5,1.978,6,0.3,7,0.742,8,3.412,9,1.813,10,1.259,11,0.938,12,0.015,13,1.707,14,0.259,15,3.372,16,1.573,17,0.822,18,0.285,19,1.23,20,0.742,21,0.103,22,5.269,23,2.974,24,1.548,25,3.049,26,3.049,27,0.654,28,2.708,29,1.325,30,4.973,31,1.479,32,1.479,33,1.479,34,3.017,35,1.398,36,3.017,37,1.005,38,1.005,39,0.143,40,2.022,41,1.875,42,3.388,43,1.008,44,3.388,45,0.062,46,1.234,47,0.9,48,4.647,49,4.647,50,1.493,51,1.941,52,4.182,53,4.647,54,4.376,55,4.647,56,0.556,57,1.282,58,3.026,59,1.098,60,1.487,61,1.573,62,2.325,63,1.978,64,1.978,65,1.682,66,1.978,67,1.327,68,1.435,69,3.721,70,0.791,71,1.813,72,4.182,73,0.9,74,2.198,75,2.198,76,2.198,77,2.198,78,2.198,79,2.198,80,3.388,81,2.281,82,3.388,83,3.388,84,3.049,85,3.388,86,2.593,87,2.198,88,1.479,89,3.388,90,4.647,91,1.259,92,2.198,93,2.198,94,3.388,95,2.198,96,3.388,97,2.198,98,2.198,99,2.198,100,1.813,101,1.682,102,0.854,103,3.388,104,2.796,105,3.388,106,0.007,107,0.007,108,0.606,109,0.705,110,0.705,111,0.705,113,0.705,117,0.713,120,1.25,122,0.978,123,0.988,124,0.939,128,0.908,129,1.333,132,3.326,134,2.401,135,0.481,136,1.087,137,1.087,138,1.087,139,1.491,140,0.705,141,0.705,142,0.705,143,0.584,144,0.705,145,0.606,146,0.705,147,0.606,148,0.705,149,0.606,150,0.705,151,0.606,152,0.679,153,0.705,154,0.584,155,0.705,156,0.606,157,0.705,158,0.606,159,0.705,160,0.606,161,0.705,162,0.606,163,0.705,164,0.63,165,0.705,166,0.606,167,0.705,168,0.606,169,0.705,170,0.606,171,0.705,172,0.584,173,0.705,174,0.584,175,0.705,176,0.606,177,0.705,178,0.606,179,0.705,180,0.562,181,0.705,182,0.584,183,0.705,184,0.584,185,0.705,186,0.606,187,0.705,188,0.584,189,0.63,190,0.705,191,3.904,192,3.904,193,3.904,194,2.198,195,3.904,196,2.532,197,2.532,198,2.532,199,2.532,200,2.532,201,2.425,202,2.532,203,1.573,204,2.532,205,2.532,206,2.532,207,2.532,208,2.532,209,2.532,210,1.145,211,1.005,212,2.532,213,2.532,214,3.904,215,3.904,216,3.904,217,3.904,218,3.904,219,4.647,220,3.904,221,3.904]],["title/components/AdminComponent.html",[18,0.194,143,0.907]],["body/components/AdminComponent.html",[2,0.178,3,0.178,4,0.159,6,0.517,12,0.015,14,0.235,18,0.352,19,1.669,21,0.178,28,1.66,29,2.282,39,0.159,40,2.124,41,1.969,43,1.489,45,0.107,46,1.005,47,1.329,56,0.92,68,1.844,106,0.01,107,0.01,108,1.044,109,1.214,110,1.214,111,1.214,113,1.214,114,1.606,117,1.054,120,0.972,123,0.933,128,0.648,129,1.005,135,0.829,136,1.606,137,1.606,138,1.606,139,1.915,140,1.214,141,1.214,142,1.214,143,1.585,144,1.214,145,1.044,146,1.214,147,1.044,148,1.214,149,1.044,150,1.214,151,1.044,152,1.169,153,1.214,154,1.005,155,1.214,156,1.044,157,1.214,158,1.044,159,1.214,160,1.044,161,1.214,162,1.044,163,1.214,164,1.084,165,1.214,166,1.044,167,1.214,168,1.044,169,1.214,170,1.044,171,1.214,172,1.005,173,1.214,174,1.005,175,1.214,176,1.044,177,1.214,178,1.044,179,1.214,180,0.968,181,1.214,182,1.005,183,1.214,184,1.005,185,1.214,186,1.044,187,1.214,188,1.005,189,1.084,190,1.214,222,3.785,223,4.131,224,5.768,225,5.768,226,4.361,227,4.361]],["title/guards/AdminGuard.html",[228,2.615,229,3.075]],["body/guards/AdminGuard.html",[2,0.219,3,0.219,4,0.197,6,0.639,11,0.701,12,0.015,14,0.291,20,1.254,21,0.219,39,0.197,45,0.132,47,1.242,56,0.939,59,1.242,106,0.012,107,0.012,117,1.206,120,1.202,122,0.984,123,0.871,124,0.945,128,1.105,228,3.579,229,5.155,230,5.388,231,6.065,232,6.065,233,3.579,234,3.079,235,5.388,236,3.643,237,5.388,238,5.388,239,2.137,240,2.819,241,2.33,242,2.23,243,6.6]],["title/modules/AdminModule.html",[244,0.56,245,2.819]],["body/modules/AdminModule.html",[2,0.191,3,0.191,4,0.171,12,0.015,14,0.323,21,0.191,39,0.221,45,0.114,46,1.781,106,0.011,107,0.011,108,1.794,135,0.89,143,1.727,164,1.863,166,1.794,168,1.794,223,3.353,244,0.86,245,5.86,246,2.118,247,3.026,248,2.218,249,2.118,250,4.064,251,4.064,252,4.064,253,4.979,254,3.551,255,3.005,256,2.328,257,2.328,258,4.682,259,4.72,260,2.039,261,4.064,262,2.584,263,2.735,264,4.682,265,4.682,266,4.682,267,4.682,268,4.682]],["title/modules/AdminRoutingModule.html",[244,0.56,253,2.615]],["body/modules/AdminRoutingModule.html",[2,0.236,3,0.236,4,0.212,12,0.015,14,0.31,18,0.285,21,0.236,39,0.212,45,0.142,73,1.336,106,0.012,107,0.012,143,1.59,239,2.299,244,0.825,253,4.582,260,2.327,261,5.03,269,5.794,270,3.198,271,3.489,272,3.198,273,3.198,274,3.385]],["title/components/AppComponent.html",[18,0.194,145,0.942]],["body/components/AppComponent.html",[2,0.171,3,0.113,4,0.102,6,0.33,7,0.797,11,0.856,12,0.015,13,1.353,14,0.296,17,0.902,18,0.297,19,1.303,21,0.113,34,3.443,35,1.535,36,3.117,37,1.103,38,1.103,39,0.102,40,2.043,41,1.894,43,1.082,45,0.068,46,0.641,47,0.966,56,0.597,57,1.423,59,1.163,62,1.595,65,1.847,67,1.405,68,1.507,70,0.868,73,0.966,106,0.008,107,0.008,108,0.666,109,0.774,110,0.774,111,0.774,113,0.774,114,1.167,117,0.766,120,1.208,122,0.766,123,0.909,124,0.736,128,0.896,129,1.295,134,2.138,135,0.528,136,1.167,137,1.167,138,1.167,139,1.565,140,0.774,141,0.774,142,0.774,143,0.641,144,0.774,145,1.345,146,0.774,147,1.004,148,0.774,149,0.666,150,0.774,151,0.666,152,0.746,153,0.774,154,0.641,155,0.774,156,0.666,157,0.774,158,0.666,159,0.774,160,0.666,161,0.774,162,1.004,163,0.774,164,0.691,165,0.774,166,0.666,167,0.774,168,0.666,169,0.774,170,0.666,171,0.774,172,0.641,173,0.774,174,0.641,175,0.774,176,0.666,177,0.774,178,0.666,179,0.774,180,0.93,181,0.774,182,0.641,183,0.774,184,0.641,185,0.774,186,0.666,187,0.774,188,0.641,189,0.691,190,0.774,234,2.623,236,3.498,240,1.455,242,1.735,275,2.413,276,4.192,277,4.192,278,3.958,279,3.498,280,4.246,281,5.619,282,4.192,283,5.619,284,5.619,285,1.991,286,2.975,287,3.937,288,3.942,289,4.389,290,2.78,291,2.78,292,2.78,293,4.192,294,2.78,295,2.78,296,2.78,297,2.78,298,2.78,299,2.78,300,2.78,301,2.78,302,2.78,303,1.847,304,2.413,305,2.413,306,1.847,307,2.413,308,2.172,309,1.624,310,2.172,311,2.78,312,2.413,313,2.413,314,2.172,315,1.727,316,1.383,317,2.78,318,2.78,319,2.78,320,2.78,321,2.78,322,1.727,323,2.604,324,2.78,325,2.78,326,4.192,327,2.78,328,2.78,329,2.78,330,2.78,331,2.78,332,2.78,333,2.78,334,2.78,335,2.78,336,2.78,337,2.78,338,2.78,339,2.78,340,4.192,341,4.192,342,4.192,343,4.192,344,4.192,345,4.192,346,3.639,347,4.192,348,4.192,349,3.639,350,4.192,351,4.192,352,4.192,353,4.192,354,4.192]],["title/modules/AppCoreModule.html",[244,0.56,355,2.445]],["body/modules/AppCoreModule.html",[2,0.234,3,0.234,4,0.21,12,0.015,14,0.316,21,0.234,31,3.356,32,3.356,33,3.356,37,2.279,38,2.279,39,0.21,45,0.14,106,0.012,107,0.012,244,0.817,249,3.103,260,2.315,355,4.262,356,4.986,357,5.743,358,5.955,359,4.913,360,5.743,361,4.486,362,5.743,363,4.986]],["title/modules/AppModule.html",[244,0.56,364,2.819]],["body/modules/AppModule.html",[2,0.136,3,0.136,4,0.122,12,0.015,14,0.328,17,1.086,21,0.136,27,0.864,28,2.14,29,1.752,34,2.664,35,1.848,37,1.328,38,1.328,39,0.255,41,1.151,45,0.082,106,0.009,107,0.009,128,0.967,135,0.636,145,1.806,147,1.709,162,1.709,180,1.248,244,0.684,246,1.514,247,2.543,248,2.664,249,3.378,255,2.39,256,1.665,257,1.665,259,3.754,260,1.622,262,1.848,278,3.103,280,3.285,303,2.224,304,2.906,305,2.906,306,2.224,308,2.615,310,2.615,355,2.08,361,2.615,363,2.906,364,5.592,365,2.906,366,2.906,367,2.906,368,2.906,369,2.906,370,4.5,371,4.208,372,4.851,373,2.615,374,4.806,375,4.172,376,2.615,377,5.291,378,4.806,379,3.348,380,3.348,381,4.806,382,2.906,383,2.906,384,2.906,385,4.806,386,4.806,387,2.224,388,3.348,389,4.172,390,4.172,391,1.752,392,2.942,393,2.615,394,3.348,395,1.848,396,3.348,397,3.348,398,4.806,399,2.986,400,3.348,401,2.906,402,3.348,403,4.661,404,2.906,405,3.348,406,2.906,407,3.348,408,2.906,409,3.348,410,2.906,411,4.806,412,2.906,413,3.348,414,6.507,415,2.615,416,6.507,417,6.774,418,4.208,419,2.615,420,2.615,421,2.615,422,4.806,423,2.906,424,3.348,425,3.348,426,2.615]],["title/modules/AppRoutingModule.html",[244,0.56,370,2.615]],["body/modules/AppRoutingModule.html",[2,0.206,3,0.206,4,0.185,12,0.015,14,0.305,21,0.206,39,0.253,45,0.124,73,1.165,106,0.011,107,0.011,152,1.355,189,1.256,223,3.619,229,5.416,231,5.416,232,5.416,239,2.005,244,0.719,260,2.14,270,2.789,271,3.006,272,3.501,273,4.33,356,4.387,370,4.214,427,5.054,428,5.851,429,5.054,430,5.054,431,5.054,432,4.955,433,5.054,434,4.387,435,3.619,436,7.757,437,5.054,438,5.054,439,5.054,440,2.789,441,5.054,442,5.054,443,5.054,444,3.947,445,5.054,446,5.054]],["title/interceptors/AuthInterceptor.html",[372,2.819,447,3.417]],["body/interceptors/AuthInterceptor.html",[2,0.208,3,0.208,4,0.187,6,0.606,11,0.832,12,0.015,14,0.297,20,1.214,21,0.208,39,0.187,45,0.125,47,1.178,56,0.728,57,1.325,106,0.012,107,0.012,117,1.167,120,1.077,122,1.167,123,1.033,124,1.121,128,1.085,233,3.397,234,3.023,236,3.527,240,2.675,312,5.547,372,4.576,387,3.397,447,4.438,448,5.113,449,6.39,450,5.113,451,6.39,452,7.302,453,4.631,454,7.302,455,5.113,456,5.113,457,4.33,458,6.39,459,5.113,460,2.675,461,3.176,462,5.113,463,6.39,464,5.113,465,3.397,466,5.113,467,5.113]],["title/injectables/AuthenticationService.html",[20,0.748,234,1.63]],["body/injectables/AuthenticationService.html",[0,1.027,2,0.119,3,0.119,4,0.107,6,0.347,7,0.828,11,0.841,12,0.015,13,1.991,14,0.251,20,1.096,21,0.119,24,1.667,27,0.756,39,0.159,45,0.106,50,1.668,56,0.62,57,1.359,59,1.329,60,1.36,62,1.114,67,1.991,70,0.914,73,1.42,88,1.71,91,1.456,102,0.988,106,0.008,107,0.008,117,0.796,120,1.238,122,1.126,123,0.997,124,1.174,128,1.114,129,1.004,211,1.161,234,1.804,239,1.161,241,1.266,242,1.212,387,1.945,399,1.818,440,3.182,457,1.818,465,4.668,468,2.096,469,4.751,470,3.782,471,4.357,472,4.503,473,4.357,474,4.503,475,4.357,476,2.545,477,4.065,478,4.065,479,4.065,480,4.065,481,1.615,482,5.227,483,5.227,484,4.065,485,2.927,486,1.818,487,3.403,488,2.927,489,3.12,490,3.494,491,3.403,492,2.927,493,2.279,494,2.927,495,3.403,496,3.83,497,2.927,498,2.286,499,2.927,500,3.403,501,4.094,502,2.927,503,2.927,504,2.927,505,2.927,506,2.927,507,2.927,508,2.927,509,2.927,510,2.927,511,2.927,512,4.065,513,1.945,514,2.894,515,3.12,516,2.096,517,3.12,518,1.818,519,2.096,520,3.727,521,2.286,522,1.71,523,3.403,524,2.286,525,2.286,526,1.971,527,1.266,528,5.227,529,2.286,530,2.286,531,2.723,532,4.503,533,2.286,534,2.286,535,3.403,536,3.403,537,2.286,538,2.286,539,3.727,540,2.706,541,2.286,542,1.945,543,2.286,544,1.945,545,2.286,546,2.286,547,2.286,548,2.286,549,2.286,550,3.457,551,2.894,552,3.403,553,1.71,554,2.286,555,2.286,556,2.286,557,1.71,558,2.286,559,2.286,560,3.403,561,2.286,562,2.706,563,2.286,564,2.286,565,2.286,566,2.286,567,2.286,568,2.286,569,2.286,570,2.286,571,2.096,572,2.286,573,2.286]],["title/interfaces/CacheTeamsInSeason.html",[0,1.382,574,2.819]],["body/interfaces/CacheTeamsInSeason.html",[0,1.541,2,0.12,3,0.12,4,0.108,6,0.351,7,0.834,11,0.681,12,0.015,13,1.995,14,0.179,20,0.834,21,0.12,23,3.65,24,1.27,27,1.352,28,2.728,39,0.16,45,0.107,50,1.78,51,1.471,56,0.421,57,1.232,59,0.682,60,0.923,67,1.806,70,1.37,73,1.207,81,2.565,86,3.849,102,1.955,106,0.008,107,0.008,125,2.31,127,4.089,128,1.14,241,1.279,242,1.224,377,2.31,490,3.617,493,2.739,522,1.728,526,1.985,531,3.031,550,2.916,551,1.964,553,2.565,557,3.059,574,4.149,575,2.31,576,5.503,577,4.089,578,4.112,579,2.567,580,2.567,581,2.567,582,2.567,583,3.81,584,4.545,585,5.986,586,2.567,587,3.81,588,1.728,589,2.567,590,2.567,591,3.81,592,3.81,593,2.567,594,4.835,595,3.599,596,2.567,597,3.81,598,2.567,599,2.567,600,2.567,601,2.118,602,2.31,603,2.567,604,3.81,605,2.567,606,2.567,607,2.567,608,2.567,609,3.81,610,2.567,611,3.429,612,2.567,613,2.567,614,2.567,615,3.81,616,3.478,617,4.089,618,4.089,619,4.308,620,2.567,621,1.728,622,5.629,623,2.567,624,2.567,625,2.567,626,2.567,627,2.567,628,3.81,629,2.567,630,2.567,631,2.567,632,2.567,633,2.567,634,2.567,635,2.31,636,2.567]],["title/components/ChangepasswordComponent.html",[18,0.194,147,0.942]],["body/components/ChangepasswordComponent.html",[2,0.141,3,0.141,4,0.126,6,0.41,7,0.934,11,0.857,12,0.015,14,0.254,15,3.778,17,1.121,18,0.324,19,1.477,21,0.141,39,0.126,40,2.086,41,1.934,43,1.269,45,0.084,46,0.796,47,1.133,50,1.269,56,0.7,57,1.087,58,3.581,59,0.796,67,1.593,68,1.671,70,1.078,106,0.009,107,0.009,108,0.827,109,0.962,110,0.962,111,0.962,113,0.962,114,1.369,117,0.898,120,1.187,122,0.631,123,0.925,124,0.606,128,0.73,129,0.796,134,2.429,135,0.656,136,1.369,137,1.369,138,1.369,139,1.736,140,0.962,141,0.962,142,0.962,143,0.796,144,0.962,145,0.827,146,0.962,147,1.492,148,0.962,149,0.827,150,0.962,151,0.827,152,0.926,153,0.962,154,0.796,155,0.962,156,0.827,157,0.962,158,0.827,159,0.962,160,0.827,161,0.962,162,0.827,163,0.962,164,0.859,165,0.962,166,0.827,167,0.962,168,0.827,169,0.962,170,0.827,171,0.962,172,0.796,173,0.962,174,0.796,175,0.962,176,0.827,177,0.962,178,0.827,179,0.962,180,0.766,181,0.962,182,0.796,183,0.962,184,0.796,185,0.962,186,0.827,187,0.962,188,0.796,189,0.859,190,0.962,233,2.295,234,2.58,236,2.713,240,1.807,391,1.807,418,2.146,440,3.44,470,5.941,489,4.464,527,2.474,562,2.146,637,2.998,638,4.915,639,4.915,640,6.233,641,4.915,642,3.454,643,3.454,644,3.454,645,5.245,646,3.454,647,3.454,648,2.146,649,3.454,650,3.053,651,2.998,652,3.454,653,3.454,654,3.454,655,4.915,656,2.998,657,2.998,658,5.41,659,5.41,660,4.266,661,4.266]],["title/components/ContactComponent.html",[18,0.194,149,0.942]],["body/components/ContactComponent.html",[2,0.148,3,0.148,4,0.133,6,0.431,7,0.969,11,0.83,12,0.015,13,1.8,14,0.24,15,3.842,16,2.259,17,1.18,18,0.331,19,1.519,20,0.969,21,0.148,23,3.352,24,1.845,27,0.939,39,0.133,40,2.095,41,1.942,43,1.316,45,0.089,46,0.838,47,1.175,50,1.316,51,2.535,56,0.725,57,1.409,58,3.513,59,0.838,60,1.837,61,2.259,68,1.71,73,0.838,106,0.009,107,0.009,108,0.871,109,1.013,110,1.013,111,1.013,113,1.013,114,1.419,117,0.931,120,1.132,122,0.664,123,0.952,124,0.638,128,0.541,129,0.838,132,3.167,134,2.152,135,0.691,136,1.419,137,1.419,138,1.419,139,1.776,140,1.013,141,1.013,142,1.013,143,0.838,144,1.013,145,0.871,146,1.013,147,0.871,148,1.013,149,1.527,150,1.013,151,0.871,152,1.8,153,1.013,154,0.838,155,1.013,156,0.871,157,1.013,158,0.871,159,1.013,160,0.871,161,1.013,162,0.871,163,1.013,164,0.904,165,1.013,166,0.871,167,1.013,168,0.871,169,1.013,170,0.871,171,1.013,172,0.838,173,1.013,174,0.838,175,1.013,176,0.871,177,1.013,178,0.871,179,1.013,180,0.807,181,1.013,182,0.838,183,1.013,184,0.838,185,1.013,186,0.871,187,1.013,188,0.838,189,0.904,190,1.013,194,3.157,203,2.259,210,1.645,211,1.443,493,3.739,635,2.841,662,3.157,663,5.097,664,5.097,665,5.097,666,3.637,667,3.637,668,3.637,669,3.637,670,3.157,671,5.097]],["title/components/ContactPersonComponent.html",[18,0.194,151,0.942]],["body/components/ContactPersonComponent.html",[2,0.165,3,0.165,4,0.148,6,0.479,11,0.526,12,0.015,14,0.223,18,0.344,19,1.606,21,0.165,27,1.044,39,0.148,40,2.112,41,1.959,43,1.416,45,0.099,46,0.932,47,1.264,56,0.886,68,1.789,106,0.01,107,0.01,108,0.968,109,1.126,110,1.126,111,1.126,113,1.126,114,1.527,117,1.002,120,1.048,123,0.887,128,0.601,129,0.932,134,1.85,135,0.768,136,1.527,137,1.527,138,1.527,139,1.858,140,1.126,141,1.126,142,1.126,143,0.932,144,1.126,145,0.968,146,1.126,147,0.968,148,1.126,149,0.968,150,1.126,151,1.597,152,2.056,153,1.126,154,0.932,155,1.126,156,0.968,157,1.126,158,0.968,159,1.126,160,0.968,161,1.126,162,0.968,163,1.126,164,1.005,165,1.126,166,0.968,167,1.126,168,0.968,169,1.126,170,0.968,171,1.126,172,0.932,173,1.126,174,0.932,175,1.126,176,0.968,177,1.126,178,0.968,179,1.126,180,0.897,181,1.126,182,0.932,183,1.126,184,0.932,185,1.126,186,0.968,187,1.126,188,0.932,189,1.005,190,1.126,349,5.791,578,4.134,672,5.791,673,5.211,674,3.51,675,5.483,676,5.483,677,5.211,678,5.483,679,4.043,680,5.483,681,5.483,682,5.483,683,5.483,684,5.483,685,5.483,686,4.283]],["title/components/ContactlistComponent.html",[18,0.194,154,0.907]],["body/components/ContactlistComponent.html",[2,0.179,3,0.179,4,0.161,6,0.522,12,0.015,14,0.179,18,0.354,19,1.677,21,0.179,39,0.161,40,2.125,41,1.971,43,1.499,45,0.108,46,1.015,47,1.338,56,0.924,68,1.852,106,0.01,107,0.01,108,1.055,109,1.227,110,1.227,111,1.227,113,1.227,114,1.617,117,1.061,120,0.978,123,0.939,128,0.655,129,1.015,135,0.837,136,1.617,137,1.617,138,1.617,139,1.923,140,1.227,141,1.227,142,1.227,143,1.015,144,1.227,145,1.055,146,1.227,147,1.055,148,1.227,149,1.055,150,1.227,151,1.055,152,1.181,153,1.227,154,1.592,155,1.227,156,1.055,157,1.227,158,1.055,159,1.227,160,1.055,161,1.227,162,1.055,163,1.227,164,1.095,165,1.227,166,1.055,167,1.227,168,1.055,169,1.227,170,1.055,171,1.227,172,1.015,173,1.227,174,1.015,175,1.227,176,1.055,177,1.227,178,1.055,179,1.227,180,0.977,181,1.227,182,1.015,183,1.227,184,1.015,185,1.227,186,1.055,187,1.227,188,1.015,189,1.095,190,1.227,687,3.824,688,5.04,689,5.807,690,5.807,691,4.405,692,4.405]],["title/modules/ContactlistModule.html",[244,0.56,693,2.819]],["body/modules/ContactlistModule.html",[2,0.207,3,0.207,4,0.186,12,0.015,14,0.32,21,0.207,39,0.233,45,0.124,106,0.011,107,0.011,135,0.968,154,1.765,176,1.833,186,1.833,244,0.907,246,2.304,247,3.147,248,2.413,249,2.304,254,3.629,255,3.17,256,2.533,257,2.533,260,2.151,262,2.811,263,2.976,688,4.421,693,5.82,694,4.421,695,4.421,696,4.421,697,5.088,698,5.093,699,4.421,700,3.164,701,5.093]],["title/modules/ContactlistRoutingModule.html",[244,0.56,697,2.615]],["body/modules/ContactlistRoutingModule.html",[2,0.236,3,0.236,4,0.212,12,0.015,14,0.31,18,0.285,21,0.236,39,0.212,45,0.142,73,1.336,106,0.012,107,0.012,154,1.59,239,2.299,244,0.825,260,2.327,270,3.198,271,3.489,272,3.198,273,3.198,274,3.385,697,4.582,699,5.03,702,5.794]],["title/classes/Credentials.html",[45,0.096,501,2.615]],["body/classes/Credentials.html",[0,1.197,2,0.139,3,0.139,4,0.125,6,0.404,7,0.925,11,0.739,12,0.015,13,2.01,14,0.267,20,1.079,21,0.139,24,1.408,27,0.88,39,0.178,45,0.139,50,1.76,56,0.693,57,1.363,59,1.428,60,1.064,62,1.297,67,1.725,70,1.064,73,1.51,88,1.992,91,1.695,102,1.15,106,0.009,107,0.009,120,0.82,122,0.623,123,0.551,124,0.997,128,1.066,234,1.411,239,1.352,241,1.474,242,1.411,387,2.265,399,2.118,440,2.687,457,2.118,465,4.851,468,2.442,469,4.354,472,2.663,474,2.663,477,2.663,478,2.663,479,2.663,480,2.663,482,4.437,483,4.437,484,2.663,487,2.663,489,2.442,490,3.389,491,2.663,493,1.784,495,2.663,496,3.235,500,2.663,501,4.116,512,4.437,513,2.265,514,3.235,515,3.487,516,2.442,517,3.487,518,2.118,519,2.442,520,5.024,521,2.663,522,1.992,523,3.803,524,2.663,525,2.663,526,2.202,527,1.474,528,5.48,529,2.663,530,2.663,531,2.972,532,4.84,533,2.663,534,2.663,535,3.803,536,3.803,537,2.663,538,2.663,539,4.068,540,3.025,541,2.663,542,2.265,543,2.663,544,2.265,545,2.663,546,2.663,547,2.663,548,2.663,549,2.663,550,3.774,551,3.235,552,3.803,553,1.992,554,2.663,555,2.663,556,2.663,557,1.992,558,2.663,559,2.663,560,3.803,561,2.663,562,3.025,563,2.663,564,2.663,565,2.663,566,2.663,567,2.663,568,2.663,569,2.663,570,2.663,571,2.442,572,2.663,573,2.663,703,3.409,704,3.409,705,3.409]],["title/injectables/CustomOwlDateTimeIntl.html",[20,0.748,359,2.819]],["body/injectables/CustomOwlDateTimeIntl.html",[2,0.225,3,0.225,4,0.202,11,0.719,12,0.015,14,0.294,20,1.371,21,0.225,31,3.228,32,3.228,33,3.228,36,3.554,37,2.192,38,2.192,39,0.202,45,0.135,56,0.786,106,0.012,107,0.012,120,0.931,122,1.009,123,0.893,124,0.969,358,5.817,359,4.8,461,3.432,706,4.796,707,5.525,708,5.525,709,6.702,710,4.796,711,5.525,712,5.525,713,6.702,714,5.525,715,5.525,716,6.702,717,5.525]],["title/components/EditmatchPitchComponent.html",[18,0.194,156,0.942]],["body/components/EditmatchPitchComponent.html",[2,0.086,3,0.086,4,0.077,6,0.251,7,0.644,11,0.923,12,0.015,13,1.518,14,0.266,15,2.677,16,1.315,17,0.687,18,0.261,19,1.095,20,0.644,21,0.086,24,1.403,39,0.077,40,1.978,41,1.834,43,0.876,45,0.052,46,0.488,47,0.782,50,1.596,56,0.483,57,0.806,58,2.219,59,1.305,60,1.324,61,1.315,62,0.806,67,0.59,68,1.301,73,1.118,91,1.686,100,1.516,101,1.406,102,0.714,106,0.006,107,0.011,108,0.507,109,0.59,110,0.59,111,0.59,113,0.59,114,0.944,117,0.619,120,1.238,122,0.886,123,0.916,124,0.851,128,0.972,129,1.305,134,2.527,135,0.402,136,0.944,137,0.944,138,0.944,139,1.351,140,0.59,141,0.59,142,0.59,143,0.488,144,0.59,145,0.507,146,0.59,147,0.507,148,0.59,149,0.507,150,0.59,151,0.507,152,0.568,153,0.59,154,0.488,155,0.59,156,1.161,157,0.59,158,0.507,159,0.59,160,0.507,161,0.59,162,0.507,163,0.59,164,0.526,165,0.59,166,0.507,167,0.59,168,0.507,169,0.59,170,0.507,171,0.59,172,0.488,173,0.59,174,0.488,175,0.59,176,0.507,177,0.59,178,0.507,179,0.59,180,0.47,181,0.59,182,0.488,183,0.59,184,0.488,185,0.59,186,0.507,187,0.59,188,0.488,189,0.526,190,0.59,203,2.107,210,1.534,211,1.924,280,3.475,391,1.108,392,3.112,393,1.654,418,1.315,457,3.013,460,1.108,486,1.315,527,2.449,619,1.406,645,4.684,648,1.315,650,2.107,700,4.625,718,1.838,719,3.391,720,3.391,721,3.391,722,4.851,723,4.851,724,4.851,725,4.851,726,4.851,727,4.851,728,4.851,729,5.308,730,4.851,731,4.851,732,4.851,733,3.391,734,3.391,735,3.391,736,3.789,737,4.851,738,1.654,739,2.683,740,4.242,741,4.851,742,4.646,743,3.391,744,2.117,745,2.117,746,3.391,747,2.117,748,2.635,749,3.391,750,2.117,751,2.117,752,2.117,753,3.391,754,2.117,755,2.117,756,2.117,757,3.391,758,2.117,759,2.117,760,2.117,761,2.117,762,2.117,763,2.117,764,3.789,765,2.117,766,4.242,767,2.117,768,2.117,769,1.237,770,3.682,771,3.682,772,1.654,773,3.391,774,2.117,775,1.838,776,1.654,777,1.654,778,2.117,779,2.117,780,2.117,781,2.117,782,1.654,783,2.117,784,2.117,785,2.117,786,2.117,787,2.117,788,2.117,789,1.516,790,2.117,791,2.117,792,2.117,793,2.117,794,2.117,795,2.117,796,3.682,797,2.117,798,2.117,799,2.117,800,2.117,801,2.117,802,2.117,803,2.117,804,2.117,805,2.117,806,2.117,807,4.242,808,2.117,809,4.242,810,2.117,811,2.117,812,3.391,813,2.117,814,2.117,815,2.117,816,3.391,817,2.117,818,2.117,819,2.117,820,1.838,821,1.838,822,1.838,823,2.117,824,2.117,825,2.117,826,2.117,827,2.117,828,2.117,829,2.429,830,2.429,831,2.944,832,2.944,833,3.391,834,2.944,835,3.789,836,3.391,837,3.391,838,4.851,839,3.391,840,3.391,841,3.391,842,3.391,843,3.391,844,3.391,845,3.391,846,2.649,847,2.429]],["title/components/EditmatchResultComponent.html",[18,0.194,158,0.942]],["body/components/EditmatchResultComponent.html",[2,0.141,3,0.141,4,0.126,6,0.41,7,0.934,10,3.404,11,0.811,12,0.015,14,0.254,15,3.44,16,2.146,17,1.121,18,0.324,19,1.477,20,0.934,21,0.141,39,0.126,40,2.086,41,1.934,43,1.269,45,0.084,46,0.796,47,1.133,56,0.7,57,1.087,58,2.993,59,1.133,61,2.146,68,1.671,101,2.295,102,1.166,106,0.009,107,0.013,108,0.827,109,0.962,110,0.962,111,0.962,113,0.962,114,1.369,117,0.898,120,1.153,122,0.631,123,0.925,124,0.606,128,0.73,129,1.133,134,2.31,135,0.656,136,1.369,137,1.369,138,1.369,139,1.736,140,0.962,141,0.962,142,0.962,143,0.796,144,0.962,145,0.827,146,0.962,147,0.827,148,0.962,149,0.827,150,0.962,151,0.827,152,0.926,153,0.962,154,0.796,155,0.962,156,0.827,157,0.962,158,1.492,159,0.962,160,0.827,161,0.962,162,0.827,163,0.962,164,0.859,165,0.962,166,0.827,167,0.962,168,0.827,169,0.962,170,0.827,171,0.962,172,0.796,173,0.962,174,0.796,175,0.962,176,0.827,177,0.962,178,0.827,179,0.962,180,0.766,181,0.962,182,0.796,183,0.962,184,0.796,185,0.962,186,0.827,187,0.962,188,0.796,189,0.859,190,0.962,203,2.146,286,3.185,309,2.018,677,2.698,736,4.869,738,2.698,739,3.243,769,2.018,829,3.52,830,3.52,846,3.839,847,3.52,848,2.998,849,4.915,850,4.915,851,4.915,852,5.41,853,5.41,854,4.915,855,3.454,856,3.454,857,3.454,858,3.454,859,4.915,860,3.454,861,4.915,862,3.454,863,3.454,864,3.454,865,3.454,866,2.474,867,3.454,868,3.454,869,3.454,870,4.915]],["title/components/EditmatchTimeComponent.html",[18,0.194,160,0.942]],["body/components/EditmatchTimeComponent.html",[2,0.126,3,0.126,4,0.113,6,0.368,7,0.864,11,0.822,12,0.015,14,0.278,15,3.272,16,1.926,17,1.006,18,0.311,19,1.39,20,0.864,21,0.126,24,1.715,27,0.801,30,5.324,31,1.812,32,1.812,33,1.812,34,3.523,35,1.712,36,3.23,37,1.23,38,1.23,39,0.113,40,2.065,41,1.915,43,1.174,45,0.076,46,0.715,47,1.048,54,3.855,56,0.647,57,1.254,58,2.816,59,1.241,60,1.681,61,1.926,63,2.422,64,2.422,65,2.06,66,2.422,68,1.59,88,1.812,101,2.06,104,2.221,106,0.008,107,0.012,108,0.742,109,0.864,110,0.864,111,0.864,113,0.864,114,1.266,117,0.83,120,1.149,122,0.83,123,0.959,124,0.798,128,0.8,129,1.241,134,2.446,135,0.589,136,1.266,137,1.266,138,1.266,139,1.651,140,0.864,141,0.864,142,0.864,143,0.715,144,0.864,145,0.742,146,0.864,147,0.742,148,0.864,149,0.742,150,0.864,151,0.742,152,0.831,153,0.864,154,0.715,155,0.864,156,0.742,157,0.864,158,0.742,159,0.864,160,1.419,161,0.864,162,0.742,163,0.864,164,0.771,165,0.864,166,0.742,167,0.864,168,0.742,169,0.864,170,0.742,171,0.864,172,0.715,173,0.864,174,0.715,175,0.864,176,0.742,177,0.864,178,0.742,179,0.864,180,0.688,181,0.864,182,0.715,183,0.864,184,0.715,185,0.864,186,0.742,187,0.864,188,0.715,189,0.771,190,0.864,201,1.926,203,1.926,219,3.947,540,1.926,736,4.631,738,2.422,739,3.126,829,3.256,830,3.256,846,3.551,847,3.256,871,2.692,872,4.547,873,4.547,874,4.547,875,6.597,876,4.547,877,4.547,878,4.547,879,3.101,880,3.101,881,3.101,882,3.101,883,3.101,884,3.101,885,2.692,886,4.547,887,3.101,888,2.692,889,4.547,890,3.947,891,4.547,892,4.547,893,4.547]],["title/injectables/I18Service.html",[20,0.748,34,1.865]],["body/injectables/I18Service.html",[2,0.193,3,0.193,4,0.173,6,0.562,7,1.158,11,0.876,12,0.015,13,2.05,14,0.289,20,1.279,21,0.193,34,2.886,36,3.563,37,1.881,38,1.881,39,0.173,45,0.116,56,0.675,57,1.35,65,4.047,106,0.011,107,0.011,117,1.113,120,1.238,122,1.113,123,0.985,124,1.069,128,1,129,1.404,210,2.144,211,1.881,241,2.05,242,1.963,461,2.945,476,3.559,894,4.116,895,7.103,896,6.091,897,5.548,898,6.73,899,4.741,900,4.741,901,6.091,902,4.741,903,4.741,904,7.347,905,7.103,906,4.741,907,4.741,908,4.741,909,4.741,910,4.741,911,4.741,912,4.741,913,4.741,914,7.347,915,4.741,916,4.741,917,4.741,918,4.741,919,4.741]],["title/interfaces/ISnackBarData.html",[0,1.382,920,2.819]],["body/interfaces/ISnackBarData.html",[0,2.371,2,0.228,3,0.228,4,0.205,6,0.663,7,1.284,11,0.728,12,0.015,13,1.945,14,0.275,17,1.816,18,0.333,19,1.744,20,1.063,21,0.228,39,0.247,40,1.445,41,1.34,43,1.445,45,0.137,47,1.29,56,0.796,57,1.063,62,2.13,68,1.5,106,0.012,107,0.012,114,1.558,180,1.242,279,3.088,316,3.747,920,5.196,921,4.371,922,4.857,923,4.857,924,4.857,925,4.857]],["title/components/LoginComponent.html",[18,0.194,162,0.942]],["body/components/LoginComponent.html",[2,0.122,3,0.122,4,0.11,6,0.356,7,0.844,11,0.849,12,0.015,13,1.417,14,0.275,15,3.6,17,0.975,18,0.307,19,1.365,21,0.122,24,1.689,27,0.776,36,3.197,37,1.192,38,1.192,39,0.11,40,2.059,41,1.909,43,1.147,45,0.073,46,0.693,47,1.024,50,0.776,56,0.632,57,1.004,58,3.412,59,1.597,60,1.65,62,1.691,67,1.472,68,1.566,70,0.938,73,0.693,91,1.494,102,1.97,106,0.008,107,0.008,108,0.719,109,0.837,110,0.837,111,0.837,113,0.837,114,1.237,117,0.811,120,1.192,122,0.811,123,0.944,124,0.78,128,0.868,129,1.218,134,1.499,135,0.571,136,1.237,137,1.237,138,1.237,139,1.626,140,0.837,141,0.837,142,0.837,143,0.693,144,0.837,145,0.719,146,0.837,147,0.719,148,0.837,149,0.719,150,0.837,151,0.719,152,0.806,153,0.837,154,0.693,155,0.837,156,0.719,157,0.837,158,0.719,159,0.837,160,0.719,161,0.837,162,1.398,163,0.837,164,0.747,165,0.837,166,0.719,167,0.837,168,0.719,169,0.837,170,0.719,171,0.837,172,0.693,173,0.837,174,0.693,175,0.837,176,0.719,177,0.837,178,0.719,179,0.837,180,0.986,181,0.837,182,0.693,183,0.837,184,0.693,185,0.837,186,0.719,187,0.837,188,0.693,189,0.747,190,0.837,234,2.793,240,1.572,279,2.917,287,3.627,315,2.759,316,2.209,322,2.759,323,3.627,346,3.856,391,1.572,418,3.283,440,1.658,517,2.152,518,1.866,527,2.82,562,2.759,601,3.785,648,1.866,650,2.759,657,2.608,659,3.856,660,3.856,742,5.095,764,4.561,782,2.347,926,2.608,927,6.522,928,4.442,929,4.442,930,5.839,931,5.068,932,5.839,933,4.442,934,3.005,935,4.442,936,3.005,937,3.005,938,3.005,939,4.442,940,3.005,941,3.005,942,3.005,943,3.005,944,3.856,945,2.152,946,3.005,947,2.608,948,5.285,949,3.005,950,3.005,951,3.005,952,2.347,953,3.005,954,3.005,955,3.005,956,1.996,957,3.005,958,2.152,959,3.005,960,4.442,961,3.856,962,4.442]],["title/interfaces/LoginContext.html",[0,1.382,496,2.615]],["body/interfaces/LoginContext.html",[0,1.724,2,0.14,3,0.14,4,0.126,6,0.409,7,0.933,11,0.744,12,0.015,13,2.015,14,0.268,20,1.087,21,0.14,24,1.42,27,0.891,39,0.179,45,0.12,50,1.766,56,0.491,57,1.3,59,1.436,60,1.077,62,1.313,67,1.735,70,1.077,73,1.517,88,2.015,91,1.716,102,1.164,106,0.009,107,0.009,124,0.862,128,1.069,234,1.428,239,1.369,241,1.492,242,1.428,387,2.292,399,2.143,440,2.71,457,2.143,465,4.864,468,2.471,469,4.373,472,2.695,474,2.695,477,2.695,478,2.695,479,2.695,480,2.695,482,4.466,483,4.466,484,2.695,487,2.695,489,2.471,490,3.403,491,2.695,493,1.805,495,2.695,496,3.798,500,2.695,501,3.798,512,4.466,513,2.292,514,3.262,515,3.517,516,2.471,517,4.715,518,3.87,519,2.471,520,4.095,521,2.695,522,2.015,523,3.836,524,2.695,525,2.695,526,2.221,527,1.492,528,5.499,529,2.695,530,2.695,531,2.991,532,4.866,533,2.695,534,2.695,535,3.836,536,3.836,537,2.695,538,2.695,539,4.095,540,3.05,541,2.695,542,2.292,543,2.695,544,2.292,545,2.695,546,2.695,547,2.695,548,2.695,549,2.695,550,3.798,551,3.262,552,3.836,553,2.015,554,2.695,555,2.695,556,2.695,557,2.015,558,2.695,559,2.695,560,3.836,561,2.695,562,3.05,563,2.695,564,2.695,565,2.695,566,2.695,567,2.695,568,2.695,569,2.695,570,2.695,571,2.471,572,2.695,573,2.695]],["title/components/ManagetournamentComponent.html",[18,0.194,166,0.942]],["body/components/ManagetournamentComponent.html",[2,0.117,3,0.117,4,0.105,6,0.609,7,0.815,8,4.086,10,3.398,11,0.909,12,0.015,13,1.378,14,0.249,17,0.93,18,0.301,19,1.327,21,0.117,24,1.65,27,0.74,39,0.105,40,2.049,41,1.9,43,1.107,45,0.07,46,0.988,47,0.988,50,0.74,51,1.425,56,0.61,57,0.977,59,1.408,60,1.339,67,1.431,68,1.53,70,0.895,73,0.661,106,0.009,107,0.01,108,0.686,109,0.798,110,0.798,111,0.798,113,0.798,114,1.194,117,0.783,120,1.258,122,0.783,123,1.075,124,0.753,128,0.953,129,1.408,134,2.163,135,0.545,136,1.194,137,1.194,138,1.194,139,1.589,140,0.798,141,0.798,142,0.798,143,0.661,144,0.798,145,0.686,146,0.798,147,0.686,148,0.798,149,0.686,150,0.798,151,0.686,152,0.768,153,0.798,154,0.661,155,0.798,156,0.686,157,0.798,158,0.686,159,0.798,160,0.686,161,0.798,162,0.686,163,0.798,164,0.713,165,0.798,166,1.366,167,0.798,168,0.686,169,0.798,170,0.686,171,0.798,172,0.661,173,0.798,174,0.661,175,0.798,176,0.686,177,0.798,178,0.686,179,0.798,180,0.636,181,0.798,182,0.661,183,0.798,184,0.661,185,0.798,186,0.686,187,0.798,188,0.661,189,1.839,190,0.798,210,1.296,211,1.137,286,3.005,288,5.007,289,5.007,309,1.674,481,1.582,540,1.78,595,1.78,619,3.414,963,2.488,964,6.41,965,4.289,966,4.289,967,5.705,968,5.705,969,5.705,970,4.289,971,5.705,972,5.705,973,5.705,974,5.705,975,4.289,976,4.289,977,2.866,978,2.866,979,2.866,980,2.866,981,2.866,982,2.866,983,2.866,984,2.866,985,2.866,986,3.544,987,2.866,988,4.289,989,2.866,990,2.866,991,2.488,992,2.866,993,4.289,994,2.866,995,2.488,996,2.866,997,2.866,998,2.866,999,4.289,1000,2.866,1001,4.289,1002,2.866,1003,4.461,1004,2.866,1005,6.41,1006,2.866,1007,2.866,1008,2.488,1009,1.674,1010,2.488,1011,2.866,1012,3.723,1013,4.289,1014,4.289,1015,4.289]],["title/components/ManageusersComponent.html",[18,0.194,168,0.942]],["body/components/ManageusersComponent.html",[2,0.115,3,0.115,4,0.104,6,0.336,7,0.808,11,0.907,12,0.015,13,1.369,14,0.27,17,0.92,18,0.299,19,1.318,21,0.115,23,2.566,24,1.641,27,0.732,28,2.52,29,1.483,36,3.137,37,1.125,38,1.125,39,0.104,40,2.047,41,1.898,43,1.098,45,0.069,46,0.653,47,0.98,50,1.709,51,2.116,52,4.432,56,0.605,59,1.308,60,1.328,62,1.619,67,1.422,68,1.521,69,2.214,70,0.885,71,2.03,73,0.653,91,1.41,102,0.957,104,2.03,106,0.008,107,0.008,108,0.679,109,0.789,110,0.789,111,0.789,113,0.789,114,1.185,117,0.777,120,1.23,122,0.777,123,0.917,124,0.746,128,0.759,129,0.98,132,2.642,134,1.914,135,0.539,136,1.185,137,1.185,138,1.185,139,1.58,140,0.789,141,0.789,142,0.789,143,0.653,144,0.789,145,0.679,146,0.789,147,0.679,148,0.789,149,0.679,150,0.789,151,0.679,152,0.76,153,0.789,154,0.653,155,0.789,156,0.679,157,0.789,158,0.679,159,0.789,160,0.679,161,0.789,162,0.679,163,0.789,164,0.705,165,0.789,166,0.679,167,0.789,168,1.358,169,0.789,170,0.679,171,0.789,172,0.653,173,0.789,174,0.653,175,0.789,176,0.679,177,0.789,178,0.679,179,0.789,180,0.944,181,0.789,182,0.653,183,0.789,184,0.653,185,0.789,186,0.679,187,0.789,188,0.653,189,0.705,190,0.789,201,1.761,210,1.924,211,1.688,279,2.818,287,3.525,315,2.642,316,2.116,322,2.642,323,3.525,391,1.483,481,1.565,513,3.769,518,3.525,542,3.769,544,3.769,601,4.064,645,5.456,648,1.761,650,3.525,651,2.461,658,3.692,945,2.03,952,2.214,956,1.883,958,2.03,1016,2.461,1017,4.254,1018,4.254,1019,4.254,1020,6.158,1021,5.674,1022,5.674,1023,4.254,1024,4.254,1025,2.835,1026,2.835,1027,4.254,1028,4.925,1029,2.835,1030,2.835,1031,2.835,1032,2.835,1033,2.835,1034,2.835,1035,2.835,1036,2.835,1037,3.692,1038,2.835,1039,2.461,1040,2.835,1041,2.835,1042,2.835,1043,4.254,1044,2.835,1045,2.835,1046,2.835,1047,2.835,1048,2.461,1049,2.835,1050,2.461,1051,2.835,1052,2.835,1053,5.106,1054,2.835,1055,2.835,1056,2.835,1057,2.835,1058,4.254,1059,4.254,1060,4.254,1061,4.254,1062,4.254,1063,4.254]],["title/components/MatchComponent.html",[18,0.194,170,0.942]],["body/components/MatchComponent.html",[2,0.087,3,0.087,4,0.078,6,0.254,7,0.652,10,1.068,11,0.925,12,0.015,14,0.286,17,0.697,18,0.263,19,1.105,21,0.087,34,3.235,35,1.185,36,3.235,37,0.852,38,0.852,39,0.078,40,1.981,41,1.837,43,0.885,45,0.052,46,0.495,47,0.79,50,0.885,51,1.068,56,0.488,57,1.389,58,2.24,59,0.495,62,2.364,67,1.362,68,1.311,70,1.526,73,1.127,106,0.011,107,0.012,108,0.514,109,0.598,110,0.598,111,0.598,113,0.598,114,0.955,117,0.626,120,1.232,122,0.976,123,0.967,124,0.938,128,0.923,129,1.313,134,2.216,135,0.408,136,0.955,137,0.955,138,0.955,139,1.362,140,0.598,141,0.598,142,0.598,143,0.495,144,0.598,145,0.514,146,0.598,147,0.514,148,0.598,149,0.821,150,0.598,151,0.514,152,1.148,153,0.598,154,0.495,155,0.598,156,0.821,157,0.598,158,0.821,159,0.598,160,0.821,161,0.598,162,0.514,163,0.598,164,0.534,165,0.598,166,0.514,167,0.598,168,0.514,169,0.598,170,1.171,171,0.598,172,0.495,173,0.598,174,0.495,175,0.598,176,0.514,177,0.598,178,0.514,179,0.598,180,0.761,181,0.598,182,0.495,183,0.598,184,0.495,185,0.598,186,0.514,187,0.598,188,0.495,189,1.216,190,0.598,201,1.333,234,2.359,236,3.145,240,1.123,279,3.145,280,3.494,286,3.088,287,3.54,288,5.003,289,4.451,308,1.677,309,1.254,314,1.677,315,2.66,316,2.129,322,3.716,323,3.54,434,4.244,526,0.971,527,2.311,677,4.451,739,3.235,769,1.254,776,1.677,777,1.677,789,1.537,821,1.863,829,2.456,830,2.456,831,2.976,832,2.976,834,2.976,835,2.678,890,4.244,956,2.845,1008,2.976,1064,1.863,1065,3.429,1066,3.429,1067,3.429,1068,4.889,1069,3.429,1070,3.429,1071,3.429,1072,4.889,1073,4.281,1074,4.244,1075,4.281,1076,2.147,1077,3.429,1078,2.147,1079,2.147,1080,2.147,1081,4.244,1082,3.429,1083,2.147,1084,2.147,1085,2.147,1086,3.429,1087,2.147,1088,3.429,1089,2.147,1090,3.429,1091,2.147,1092,2.147,1093,2.147,1094,2.147,1095,2.147,1096,2.147,1097,2.147,1098,2.147,1099,2.147,1100,1.426,1101,2.147,1102,2.147,1103,2.147,1104,2.147,1105,1.863,1106,3.429,1107,2.147,1108,4.175,1109,2.147,1110,2.147,1111,4.889,1112,4.281,1113,4.281,1114,2.147,1115,4.281,1116,2.147,1117,2.147,1118,2.147,1119,2.147,1120,2.147,1121,1.863,1122,1.537,1123,1.677,1124,2.147,1125,1.677,1126,2.147,1127,2.147,1128,2.147,1129,2.147,1130,4.244,1131,2.976,1132,3.429,1133,3.429,1134,2.147,1135,2.147,1136,3.429,1137,3.429,1138,3.429,1139,3.429,1140,3.429,1141,3.429,1142,2.147,1143,2.147]],["title/injectables/MatchService.html",[20,0.748,286,1.78]],["body/injectables/MatchService.html",[0,0.918,2,0.107,3,0.107,4,0.096,6,0.31,7,0.761,9,3.482,10,3.456,11,0.933,12,0.015,13,2.141,14,0.252,20,0.924,21,0.107,24,1.575,27,0.675,28,2.451,39,0.146,45,0.064,50,1.794,56,0.57,57,1.468,59,1.12,60,1.25,67,2.021,73,0.603,102,1.98,106,0.007,107,0.013,117,0.731,120,1.208,122,1.291,123,1.143,124,1.24,128,1.138,210,1.183,211,1.038,241,1.131,242,1.083,286,1.81,392,3.37,453,2.659,460,1.369,481,1.444,486,3.383,490,3.786,493,3.751,527,2.355,531,3.37,553,3.429,557,3.429,576,3.126,616,1.738,739,2.303,748,3.646,769,1.528,789,1.874,986,1.625,1009,1.528,1100,1.738,1122,3.482,1123,2.043,1125,2.043,1144,2.043,1145,4.727,1146,4.002,1147,4.002,1148,4.002,1149,4.002,1150,4.002,1151,4.002,1152,4.002,1153,4.002,1154,4.002,1155,4.002,1156,4.002,1157,3.474,1158,2.616,1159,3.474,1160,5.428,1161,2.616,1162,3.474,1163,2.616,1164,3.474,1165,2.616,1166,3.474,1167,2.616,1168,3.474,1169,2.616,1170,4.22,1171,2.616,1172,2.616,1173,2.616,1174,2.616,1175,3.474,1176,4.727,1177,4.727,1178,2.616,1179,3.474,1180,2.616,1181,3.845,1182,3.126,1183,2.271,1184,2.043,1185,3.126,1186,3.126,1187,2.867,1188,3.126,1189,2.271,1190,3.474,1191,3.474,1192,2.271,1193,3.126,1194,3.474,1195,2.271,1196,2.271,1197,2.271,1198,2.271,1199,2.271,1200,2.271,1201,2.271,1202,2.271,1203,2.271,1204,2.271,1205,2.271,1206,2.271,1207,2.271,1208,2.271,1209,2.271]],["title/interfaces/MatchUpdateMessage.html",[0,1.382,1100,2.615]],["body/interfaces/MatchUpdateMessage.html",[0,1.698,2,0.138,3,0.138,4,0.123,6,0.4,7,0.919,9,2.419,10,3.069,11,0.736,12,0.015,13,2.122,14,0.277,20,0.919,21,0.138,24,1.399,27,0.872,28,2.151,39,0.177,45,0.083,50,1.881,56,0.481,57,1.36,59,1.303,60,1.055,67,1.818,73,0.779,102,2.203,106,0.009,107,0.013,128,1.099,241,1.461,242,1.398,286,1.528,392,2.957,453,3.214,460,1.767,490,3.792,493,3.744,527,2.092,531,3.66,553,3.815,557,3.815,616,2.244,739,1.601,748,4.057,769,1.974,789,2.419,986,2.099,1009,1.974,1100,3.214,1122,4.419,1123,4.82,1125,4.82,1144,2.639,1145,2.932,1157,2.932,1159,2.932,1160,5.307,1162,2.932,1164,2.932,1166,2.932,1168,2.932,1170,4.199,1175,2.932,1176,4.199,1177,4.199,1179,2.932,1181,3.511,1182,3.779,1183,2.932,1184,2.639,1185,3.779,1186,3.779,1187,3.465,1188,3.779,1189,2.932,1190,4.199,1191,4.199,1192,2.932,1193,3.779,1194,4.199,1195,2.932,1196,2.932,1197,2.932,1198,2.932,1199,2.932,1200,2.932,1201,2.932,1202,2.932,1203,2.932,1204,2.932,1205,2.932,1206,2.932,1207,2.932,1208,2.932,1209,2.932]],["title/classes/MatchViewModel.html",[45,0.096,739,1.865]],["body/classes/MatchViewModel.html",[2,0.153,3,0.153,4,0.137,6,0.445,7,0.991,10,3.217,11,1.027,12,0.015,13,2.066,14,0.153,23,3.262,27,0.97,39,0.137,45,0.127,54,4.633,57,1.419,62,2.279,106,0.009,107,0.014,117,0.953,120,1.33,122,1.094,123,0.968,124,1.417,128,0.89,129,0.866,486,3.239,595,3.72,700,4.568,710,4.527,739,2.471,748,4.976,852,5.198,853,5.198,888,5.198,897,4.073,1210,3.262,1211,6.469,1212,6.469,1213,5.989,1214,5.989,1215,5.989,1216,5.989,1217,5.989,1218,5.989,1219,5.215,1220,5.215,1221,5.215,1222,3.758,1223,3.758,1224,3.758,1225,7.761,1226,3.758,1227,3.758,1228,3.758,1229,3.758,1230,3.758,1231,3.758,1232,3.758,1233,3.758,1234,3.758,1235,3.758,1236,3.758,1237,3.758,1238,3.758,1239,3.758,1240,3.758,1241,3.758]],["title/components/MatchplanComponent.html",[18,0.194,172,0.907]],["body/components/MatchplanComponent.html",[2,0.097,3,0.097,4,0.087,6,0.668,7,0.709,10,2.284,11,0.914,12,0.015,13,1.6,14,0.254,18,0.277,19,1.186,21,0.097,23,2.348,24,1.501,27,0.617,28,2.373,29,1.251,34,3.325,35,1.319,39,0.087,40,2.008,41,1.862,43,0.964,45,0.058,46,0.551,47,0.86,50,0.617,56,0.531,57,1.435,59,1.376,60,1.434,67,1.446,68,1.392,70,1.434,73,0.551,81,1.397,102,0.807,106,0.007,107,0.013,108,0.572,109,0.666,110,0.666,111,0.666,113,0.666,114,1.04,117,0.682,120,1.256,122,1.09,123,1.043,124,1.047,128,1.043,129,1.059,132,2.319,134,2.014,135,0.454,136,1.04,137,1.04,138,1.04,139,1.446,140,0.666,141,0.666,142,0.666,143,0.551,144,0.666,145,0.572,146,0.666,147,0.572,148,0.666,149,0.572,150,0.666,151,0.572,152,0.641,153,0.666,154,0.551,155,0.666,156,0.572,157,0.666,158,0.572,159,0.666,160,0.572,161,0.666,162,0.572,163,0.666,164,0.594,165,0.666,166,0.572,167,0.666,168,0.572,169,0.666,170,0.572,171,0.666,172,1.196,173,0.666,174,0.551,175,0.666,176,0.572,177,0.666,178,0.572,179,0.666,180,0.53,181,0.666,182,0.551,183,0.666,184,0.551,185,0.666,186,0.572,187,0.666,188,0.551,189,0.594,190,0.666,211,1.822,278,3.294,285,1.712,286,3.174,303,1.588,309,1.397,432,2.916,476,2.181,522,1.397,526,1.081,527,2.696,588,2.181,595,2.319,621,4.036,739,2.46,748,1.485,769,1.397,866,1.712,986,4.519,1009,2.181,1108,2.916,1193,4.662,1242,2.075,1243,3.733,1244,3.733,1245,5.191,1246,5.191,1247,3.733,1248,5.191,1249,3.733,1250,3.733,1251,4.593,1252,5.631,1253,4.593,1254,3.733,1255,3.733,1256,2.391,1257,2.391,1258,3.733,1259,2.391,1260,3.733,1261,5.191,1262,2.391,1263,3.733,1264,2.391,1265,2.391,1266,2.391,1267,2.391,1268,2.391,1269,2.391,1270,2.391,1271,2.391,1272,2.391,1273,2.391,1274,2.391,1275,2.391,1276,2.391,1277,2.391,1278,2.391,1279,2.391,1280,2.391,1281,2.391,1282,2.391,1283,2.391,1284,2.391,1285,2.391,1286,2.391,1287,2.391,1288,1.867,1289,3.241,1290,2.391,1291,2.391,1292,2.391,1293,2.391,1294,2.391,1295,3.733,1296,1.867,1297,2.391,1298,2.391,1299,2.075,1300,2.391,1301,2.391,1302,2.391,1303,3.733,1304,5.191,1305,3.733,1306,4.506,1307,4.506,1308,3.733,1309,3.733,1310,5.191,1311,3.733,1312,3.733,1313,3.733,1314,3.733,1315,3.733,1316,4.506]],["title/modules/MatchplanModule.html",[244,0.56,1317,2.819]],["body/modules/MatchplanModule.html",[2,0.212,3,0.212,4,0.191,12,0.015,14,0.318,21,0.212,39,0.236,41,1.249,45,0.127,106,0.012,107,0.012,135,0.991,172,1.776,244,0.921,246,2.359,247,3.181,248,2.471,249,2.359,254,3.65,255,3.217,256,2.594,257,2.594,260,2.183,262,2.878,263,3.047,355,4.786,401,4.527,432,4.074,1317,5.794,1318,4.527,1319,4.527,1320,4.527,1321,5.118,1322,5.215,1323,4.527]],["title/modules/MatchplanRoutingModule.html",[244,0.56,1321,2.615]],["body/modules/MatchplanRoutingModule.html",[2,0.236,3,0.236,4,0.212,12,0.015,14,0.31,18,0.285,21,0.236,39,0.212,45,0.142,73,1.336,106,0.012,107,0.012,172,1.59,239,2.299,244,0.825,260,2.327,270,3.198,271,3.489,272,3.198,273,3.198,274,3.385,1321,4.582,1323,5.03,1324,5.794]],["title/modules/MaterialModule.html",[244,0.56,371,2.445]],["body/modules/MaterialModule.html",[2,0.202,3,0.202,4,0.182,12,0.015,14,0.321,17,1.612,21,0.202,39,0.229,45,0.121,106,0.011,107,0.011,244,0.707,260,2.117,371,3.898,453,3.3,1185,3.88,1186,3.88,1187,3.557,1188,3.88,1325,4.967,1326,6.878,1327,4.967,1328,6.878,1329,4.967,1330,6.878,1331,4.967,1332,6.878,1333,4.967,1334,6.878,1335,4.967,1336,6.878,1337,4.967,1338,6.878,1339,6.878,1340,6.878,1341,7.452,1342,6.878,1343,6.878,1344,6.878,1345,6.878,1346,6.878,1347,6.878,1348,6.878,1349,6.878,1350,4.967,1351,6.878,1352,6.878]],["title/components/NewpasswordComponent.html",[18,0.194,174,0.907]],["body/components/NewpasswordComponent.html",[2,0.127,3,0.127,4,0.114,6,0.37,7,0.868,11,0.774,12,0.015,13,1.448,14,0.285,17,1.012,18,0.312,19,1.395,21,0.127,24,1.72,36,3.236,37,1.238,38,1.238,39,0.114,40,2.067,41,1.916,43,1.179,45,0.076,46,0.719,47,1.053,50,0.805,56,0.65,57,1.027,59,1.458,60,1.686,62,1.738,67,0.869,68,1.594,70,0.974,73,1.053,91,1.551,106,0.008,107,0.008,108,0.747,109,0.869,110,0.869,111,0.869,113,0.869,114,1.272,117,0.834,120,1.114,122,0.57,123,0.873,124,0.547,128,0.679,129,1.053,134,1.541,135,0.593,136,1.272,137,1.272,138,1.272,139,1.656,140,0.869,141,0.869,142,0.869,143,0.719,144,0.869,145,0.747,146,0.869,147,0.747,148,0.869,149,0.747,150,0.869,151,0.747,152,0.836,153,0.869,154,0.719,155,0.869,156,0.747,157,0.869,158,0.747,159,0.869,160,0.747,161,0.869,162,0.747,163,0.869,164,0.776,165,0.869,166,0.747,167,0.869,168,0.747,169,0.869,170,0.747,171,0.869,172,0.719,173,0.869,174,1.37,175,0.869,176,0.747,177,0.869,178,0.747,179,0.869,180,1.013,181,0.869,182,0.719,183,0.869,184,0.719,185,0.869,186,0.747,187,0.869,188,0.719,189,0.776,190,0.869,234,2.736,236,3.648,239,1.238,240,1.632,279,2.981,287,3.693,313,2.708,315,2.837,316,2.271,322,2.837,323,3.693,391,1.632,423,3.964,440,2.52,469,3.589,514,3.034,518,1.938,520,4.735,526,1.411,571,2.234,594,2.437,648,1.938,650,1.938,656,2.708,661,3.964,742,5.334,764,4.644,772,2.437,782,2.437,931,5.161,945,2.234,947,2.708,956,2.073,958,2.234,961,3.964,1353,2.708,1354,4.566,1355,4.566,1356,5.945,1357,3.12,1358,6.611,1359,4.566,1360,3.12,1361,3.12,1362,3.12,1363,3.12,1364,3.12,1365,5.402,1366,4.566,1367,3.12,1368,3.12,1369,3.12,1370,3.12,1371,4.566,1372,3.12,1373,4.566,1374,4.566,1375,4.566,1376,4.566]],["title/modules/NewpasswordModule.html",[244,0.56,1377,2.819]],["body/modules/NewpasswordModule.html",[2,0.216,3,0.216,4,0.194,12,0.015,14,0.319,21,0.216,39,0.239,45,0.13,106,0.012,107,0.012,135,1.007,174,1.783,244,0.93,246,2.397,247,3.204,248,2.511,249,2.397,254,3.665,255,3.25,256,2.636,257,2.636,260,2.205,262,2.925,263,3.097,395,2.925,440,2.925,1377,5.751,1378,4.601,1379,4.601,1380,4.601,1381,5.138,1382,5.3,1383,4.059,1384,4.601]],["title/modules/NewpasswordRoutingModule.html",[244,0.56,1381,2.615]],["body/modules/NewpasswordRoutingModule.html",[2,0.236,3,0.236,4,0.212,12,0.015,14,0.31,18,0.285,21,0.236,39,0.212,45,0.142,73,1.336,106,0.012,107,0.012,174,1.59,239,2.299,244,0.825,260,2.327,270,3.198,271,3.489,272,3.198,273,3.198,274,3.385,1381,4.582,1384,5.03,1385,5.794]],["title/injectables/PitchService.html",[20,0.748,392,2.06]],["body/injectables/PitchService.html",[2,0.173,3,0.173,4,0.155,6,0.503,7,1.076,11,0.885,12,0.015,13,1.709,14,0.26,20,1.211,21,0.173,24,1.967,27,1.095,39,0.155,45,0.104,50,1.756,56,0.604,57,1.347,60,1.768,67,2.03,70,1.324,81,2.477,102,1.431,106,0.01,107,0.01,117,1.034,120,1.254,122,1.164,123,1.031,124,1.119,128,1.124,129,0.977,210,1.918,211,2.246,241,1.834,242,1.755,392,2.962,460,2.218,461,2.634,476,3.308,481,2.34,490,3.17,522,2.477,526,1.918,531,2.218,588,2.477,595,3.517,611,5.313,700,4.806,1181,4.529,1386,3.681,1387,6.802,1388,5.662,1389,6.802,1390,5.662,1391,5.662,1392,4.24,1393,4.24,1394,4.24,1395,4.24,1396,4.24,1397,4.24,1398,4.24,1399,4.24,1400,4.24,1401,4.24,1402,4.24,1403,4.24,1404,4.915,1405,4.24,1406,4.24,1407,4.24,1408,4.24,1409,4.24]],["title/components/PitchesComponent.html",[18,0.194,176,0.942]],["body/components/PitchesComponent.html",[2,0.157,3,0.157,4,0.141,6,0.457,7,1.009,11,0.691,12,0.015,14,0.247,18,0.338,19,1.568,21,0.157,27,0.996,39,0.141,40,2.105,41,1.952,43,1.371,45,0.094,46,0.889,47,1.224,56,0.756,57,1.154,59,0.889,67,1.691,68,1.754,70,1.204,106,0.01,107,0.01,108,0.924,109,1.074,110,1.074,111,1.074,113,1.074,114,1.479,117,0.97,120,1.023,122,0.705,123,0.982,124,0.677,128,0.573,134,2.392,135,0.733,136,1.479,137,1.479,138,1.479,139,1.822,140,1.074,141,1.074,142,1.074,143,0.889,144,1.074,145,0.924,146,1.074,147,0.924,148,1.074,149,0.924,150,1.074,151,0.924,152,1.034,153,1.074,154,0.889,155,1.074,156,0.924,157,1.074,158,0.924,159,1.074,160,0.924,161,1.074,162,0.924,163,1.074,164,0.959,165,1.074,166,0.924,167,1.074,168,0.924,169,1.074,170,0.924,171,1.074,172,0.889,173,1.074,174,0.889,175,1.074,176,1.566,177,1.074,178,0.924,179,1.074,180,0.856,181,1.074,182,0.889,183,1.074,184,0.889,185,1.074,186,0.924,187,1.074,188,0.889,189,0.959,190,1.074,392,3.709,393,3.013,686,4.148,700,4.721,796,5.678,835,4.148,1404,3.349,1410,3.349,1411,5.31,1412,5.31,1413,3.858,1414,5.31,1415,3.858,1416,3.858,1417,5.31,1418,5.31]],["title/injectables/SeasonService.html",[20,0.748,278,2.173]],["body/injectables/SeasonService.html",[2,0.156,3,0.156,4,0.14,6,0.453,7,1.003,11,0.92,12,0.015,14,0.246,20,1.149,21,0.156,24,1.885,27,0.987,39,0.14,45,0.093,50,1.766,56,0.544,57,1.344,59,1.217,60,1.648,67,1.969,70,1.194,102,1.29,106,0.01,107,0.01,117,0.964,120,1.263,122,1.19,123,1.054,124,1.144,128,1.077,129,0.881,210,2.387,211,2.094,241,1.653,242,1.583,278,2.913,460,2.001,461,2.375,476,3.084,481,2.11,486,2.375,490,3.006,526,2.948,527,1.653,531,2.001,588,2.234,621,4.658,1181,4.392,1419,3.319,1420,6.517,1421,6.517,1422,6.517,1423,6.517,1424,5.278,1425,5.278,1426,6.044,1427,5.278,1428,3.824,1429,5.278,1430,5.657,1431,3.824,1432,4.581,1433,5.278,1434,5.657,1435,3.824,1436,4.581,1437,6.517,1438,5.278,1439,3.824,1440,3.824,1441,3.824,1442,3.824,1443,3.824,1444,3.824,1445,3.824,1446,2.375,1447,3.824,1448,3.824,1449,3.824,1450,3.824,1451,3.824,1452,3.824,1453,3.824,1454,3.824,1455,3.824,1456,3.824,1457,3.824,1458,3.824,1459,3.824,1460,3.824,1461,3.319,1462,3.319]],["title/components/SeasonchooserComponent.html",[18,0.194,178,0.942]],["body/components/SeasonchooserComponent.html",[2,0.151,3,0.151,4,0.136,6,0.441,7,0.984,11,0.881,12,0.015,14,0.262,17,1.207,18,0.334,19,1.538,21,0.151,27,0.961,39,0.136,40,2.099,41,1.946,43,1.337,45,0.091,46,0.857,47,1.194,50,0.961,56,0.529,57,0.984,68,1.727,106,0.009,107,0.009,108,0.891,109,1.036,110,1.036,111,1.036,113,1.036,114,1.442,117,0.946,120,1.181,122,0.946,123,1.042,124,0.909,128,0.77,129,1.194,135,0.707,136,1.442,137,1.442,138,1.442,139,1.793,140,1.036,141,1.036,142,1.036,143,0.857,144,1.036,145,0.891,146,1.036,147,0.891,148,1.036,149,0.891,150,1.036,151,0.891,152,0.997,153,1.036,154,0.857,155,1.036,156,0.891,157,1.036,158,0.891,159,1.036,160,0.891,161,1.036,162,0.891,163,1.036,164,0.925,165,1.036,166,0.891,167,1.036,168,0.891,169,1.036,170,0.891,171,1.036,172,0.857,173,1.036,174,0.857,175,1.036,176,0.891,177,1.036,178,1.542,179,1.036,180,0.825,181,1.036,182,0.857,183,1.036,184,0.857,185,1.036,186,0.891,187,1.036,188,0.857,189,0.925,190,1.036,201,3.217,278,4.207,285,2.664,303,2.472,519,2.664,621,4.408,1028,5.591,1074,5.591,1081,5.591,1288,2.906,1289,4.495,1463,3.229,1464,5.178,1465,5.178,1466,5.178,1467,5.178,1468,5.957,1469,5.178,1470,5.178,1471,3.72,1472,3.72,1473,3.72,1474,3.72,1475,3.72,1476,3.72,1477,3.72,1478,3.72,1479,5.178]],["title/modules/SharedModule.html",[244,0.56,254,1.865]],["body/modules/SharedModule.html",[2,0.162,3,0.162,4,0.146,12,0.015,14,0.324,20,0.758,21,0.162,31,2.33,32,2.33,33,2.33,37,1.582,38,1.582,39,0.242,45,0.097,106,0.01,107,0.01,135,0.758,149,1.785,151,1.863,156,1.785,158,1.785,160,1.785,170,1.863,178,1.863,180,1.655,244,0.773,246,1.804,247,2.794,248,1.889,249,1.804,254,3.867,255,2.701,256,1.983,257,1.983,259,4.243,260,1.833,310,3.115,361,4.826,371,4.833,384,3.461,389,5.362,390,5.362,391,2.086,395,2.201,673,3.115,1383,3.838,1480,3.461,1481,3.461,1482,3.987,1483,3.461,1484,3.987,1485,3.987,1486,3.987,1487,3.987,1488,3.987,1489,3.987,1490,3.987,1491,6.178,1492,6.178,1493,3.987,1494,3.987]],["title/components/SnackbarComponent.html",[18,0.194,180,0.873]],["body/components/SnackbarComponent.html",[0,1.433,2,0.166,3,0.166,4,0.149,6,0.484,7,1.049,11,0.718,12,0.015,13,1.094,14,0.225,17,1.324,18,0.345,19,1.614,20,1.049,21,0.166,39,0.202,40,2.114,41,1.96,43,1.425,45,0.1,46,0.941,47,1.272,56,0.785,57,1.188,62,2.663,68,1.796,106,0.01,107,0.01,108,0.977,109,1.136,110,1.136,111,1.136,113,1.136,114,1.537,117,1.008,120,1.053,122,0.745,123,1.011,124,0.716,128,0.607,129,0.941,135,0.776,136,1.537,137,1.537,138,1.537,139,1.865,140,1.136,141,1.136,142,1.136,143,0.941,144,1.136,145,0.977,146,1.136,147,0.977,148,1.136,149,0.977,150,1.136,151,0.977,152,1.094,153,1.136,154,0.941,155,1.136,156,0.977,157,1.136,158,0.977,159,1.136,160,0.977,161,1.136,162,0.977,163,1.136,164,1.015,165,1.136,166,0.977,167,1.136,168,0.977,169,1.136,170,0.977,171,1.136,172,0.941,173,1.136,174,0.941,175,1.136,176,0.977,177,1.136,178,0.977,179,1.136,180,1.486,181,1.136,182,0.941,183,1.136,184,0.941,185,1.136,186,0.977,187,1.136,188,0.941,189,1.015,190,1.136,203,2.535,279,3.045,316,2.03,920,5.164,921,3.188,922,3.543,923,4.79,924,4.79,925,3.543,1495,4.081,1496,4.081,1497,4.081,1498,4.081,1499,5.518]],["title/components/TableComponent.html",[18,0.194,182,0.907]],["body/components/TableComponent.html",[2,0.133,3,0.133,4,0.119,6,0.387,7,0.897,11,0.791,12,0.015,14,0.262,18,0.317,19,1.431,21,0.133,24,1.757,27,1.568,28,2.858,29,1.708,39,0.119,40,2.075,41,1.924,43,1.218,45,0.08,46,0.752,47,1.088,56,0.672,57,1.276,59,1.278,68,1.628,84,2.55,102,1.101,106,0.008,107,0.008,108,0.781,109,0.909,110,0.909,111,0.909,113,0.909,114,1.314,117,0.862,120,1.086,122,0.862,123,0.982,124,0.828,128,0.701,129,1.088,135,0.62,136,1.314,137,1.314,138,1.314,139,1.691,140,0.909,141,0.909,142,0.909,143,0.752,144,0.909,145,0.781,146,0.909,147,0.781,148,0.909,149,0.781,150,0.909,151,0.781,152,0.875,153,0.909,154,0.752,155,0.909,156,0.781,157,0.909,158,0.781,159,0.909,160,0.781,161,0.909,162,0.781,163,0.909,164,0.812,165,0.909,166,0.781,167,0.909,168,0.781,169,0.909,170,0.781,171,0.909,172,0.752,173,0.909,174,0.752,175,0.909,176,0.781,177,0.909,178,0.781,179,0.909,180,0.724,181,0.909,182,1.4,183,0.909,184,0.752,185,0.909,186,0.781,187,0.909,188,0.752,189,0.812,190,0.909,278,3.706,285,2.338,286,3.132,303,2.168,309,1.907,314,2.55,435,3.38,526,1.476,621,4.046,1122,2.338,1288,2.55,1500,2.833,1501,4.719,1502,4.719,1503,6.368,1504,4.719,1505,4.719,1506,4.719,1507,3.264,1508,3.264,1509,3.264,1510,3.264,1511,3.264,1512,5.543,1513,3.264,1514,4.719,1515,4.719,1516,4.719,1517,4.719,1518,4.719,1519,4.719,1520,4.719,1521,4.719,1522,4.719,1523,4.719,1524,4.719,1525,4.719,1526,6.073,1527,6.073,1528,4.719]],["title/modules/TableModule.html",[244,0.56,1529,2.819]],["body/modules/TableModule.html",[2,0.216,3,0.216,4,0.194,12,0.015,14,0.319,21,0.216,39,0.239,45,0.13,106,0.012,107,0.012,135,1.007,182,1.783,244,0.93,246,2.397,247,3.204,248,2.511,249,2.397,254,3.665,255,3.25,256,2.636,257,2.636,260,2.205,262,2.925,263,3.097,395,2.925,435,3.796,1383,4.059,1529,5.751,1530,4.601,1531,4.601,1532,4.601,1533,5.138,1534,5.3,1535,4.601]],["title/modules/TableRoutingModule.html",[244,0.56,1533,2.615]],["body/modules/TableRoutingModule.html",[2,0.236,3,0.236,4,0.212,12,0.015,14,0.31,18,0.285,21,0.236,39,0.212,45,0.142,73,1.336,106,0.012,107,0.012,182,1.59,239,2.299,244,0.825,260,2.327,270,3.198,271,3.489,272,3.198,273,3.198,274,3.385,1533,4.582,1535,5.03,1536,5.794]],["title/injectables/TeamService.html",[20,0.748,28,1.498]],["body/injectables/TeamService.html",[0,0.858,2,0.1,3,0.1,4,0.089,6,0.29,11,0.846,12,0.015,13,2.042,14,0.155,20,0.885,21,0.1,23,3.642,24,1.52,27,1.469,28,2.644,39,0.139,45,0.093,50,1.723,51,1.216,56,0.541,57,1.375,59,0.563,60,1.186,67,2.053,70,1.186,73,1.074,81,2.219,86,3.49,102,1.773,106,0.007,107,0.007,117,0.694,118,3.297,120,1.15,122,1.148,123,1.016,124,1.103,125,2.967,127,4.104,128,1.169,129,0.563,211,0.97,241,1.057,242,1.012,377,2.967,476,2.219,481,1.349,490,3.634,493,3.151,522,1.428,526,1.718,531,2.749,550,2.524,551,1.624,553,2.219,557,2.722,574,3.763,575,1.909,576,4.91,577,3.639,578,4.317,579,3.297,580,3.297,581,3.297,582,3.297,583,4.56,584,5.228,585,5.641,586,2.122,587,4.56,588,1.428,589,2.122,590,2.122,591,4.56,592,4.56,593,3.297,594,4.444,595,3.742,596,3.297,597,3.297,598,2.122,599,2.122,600,2.122,601,1.751,602,1.909,603,3.297,604,4.56,605,3.297,606,2.122,607,2.122,608,2.122,609,3.297,610,3.297,611,4.104,612,4.56,613,4.56,614,2.122,615,3.297,616,3.095,617,3.639,618,3.639,619,4.001,620,2.122,621,2.219,622,5.456,623,3.297,624,3.297,625,2.122,626,2.122,627,2.122,628,3.297,629,2.122,630,2.122,631,2.122,632,2.122,633,2.122,634,3.297,635,1.909,636,2.122,1537,2.444,1538,2.444,1539,3.798,1540,3.798,1541,3.798,1542,3.798,1543,2.444,1544,2.444,1545,2.444,1546,2.444,1547,2.444,1548,2.444,1549,2.444,1550,2.444,1551,2.444,1552,2.444,1553,2.444,1554,2.444]],["title/components/TeamadminComponent.html",[18,0.194,184,0.907]],["body/components/TeamadminComponent.html",[2,0.116,3,0.116,4,0.104,6,0.337,7,0.81,11,0.907,12,0.015,13,2.055,14,0.277,17,0.922,18,0.3,19,1.32,21,0.116,23,3.152,24,1.643,27,0.734,28,2.779,29,1.486,36,3.46,37,1.127,38,1.127,39,0.104,40,2.047,41,1.898,43,1.1,45,0.069,46,0.655,47,0.982,50,1.571,51,2.119,56,0.606,57,1.388,59,0.655,60,1.596,62,1.622,67,0.791,68,1.523,70,0.887,73,0.982,91,1.413,100,2.035,102,1.438,106,0.008,107,0.008,108,0.68,109,0.791,110,0.791,111,0.791,113,0.791,114,1.186,117,0.778,120,1.196,122,0.934,123,0.984,124,0.897,128,0.844,129,0.982,134,1.438,135,0.54,136,1.186,137,1.186,138,1.186,139,1.582,140,0.791,141,0.791,142,0.791,143,0.655,144,0.791,145,0.68,146,0.791,147,0.68,148,0.791,149,0.68,150,0.791,151,0.68,152,0.762,153,0.791,154,0.655,155,0.791,156,0.68,157,0.791,158,0.68,159,0.791,160,0.68,161,0.791,162,0.68,163,0.791,164,0.706,165,0.791,166,0.68,167,0.791,168,0.68,169,0.791,170,0.68,171,0.791,172,0.655,173,0.791,174,0.655,175,0.791,176,0.68,177,0.791,178,0.68,179,0.791,180,0.945,181,0.791,182,0.655,183,0.791,184,1.309,185,0.791,186,0.68,187,0.791,188,0.655,189,0.706,190,0.791,210,1.927,211,1.69,233,1.887,234,2.645,236,3.359,240,1.486,279,3.526,287,3.969,315,2.647,316,2.119,322,2.647,323,3.528,391,1.486,418,1.765,444,3.328,493,2.229,542,3.774,544,3.774,578,2.831,602,4.437,645,4.576,648,1.765,650,2.647,670,2.466,847,3.052,866,2.035,945,2.035,952,2.219,956,1.887,958,2.035,1039,3.698,1048,2.466,1050,2.466,1296,2.219,1299,3.698,1555,2.466,1556,4.261,1557,4.261,1558,5.68,1559,4.261,1560,4.261,1561,4.261,1562,4.261,1563,2.841,1564,6.389,1565,2.841,1566,4.261,1567,2.841,1568,2.841,1569,2.841,1570,2.841,1571,2.841,1572,2.841,1573,2.841,1574,2.841,1575,2.841,1576,2.841,1577,2.841,1578,2.841,1579,2.841,1580,2.841,1581,2.841,1582,4.261]],["title/guards/TeamadminGuard.html",[228,2.615,428,3.075]],["body/guards/TeamadminGuard.html",[2,0.206,3,0.206,4,0.185,6,0.6,11,0.827,12,0.015,14,0.296,20,1.207,21,0.206,39,0.185,45,0.124,47,1.167,56,0.721,106,0.011,107,0.011,117,1.16,120,1.169,122,1.16,123,1.027,124,1.115,128,1.081,228,3.364,231,5.854,232,5.974,233,3.364,234,3.012,236,3.505,239,2.009,240,2.649,241,2.189,242,2.096,428,4.961,453,4.219,457,4.311,460,2.649,461,3.145,490,3.159,527,2.746,1432,6.023,1583,5.063,1584,5.063,1585,5.063,1586,7.276,1587,7.276,1588,5.063,1589,5.063,1590,6.351]],["title/modules/TeamadminModule.html",[244,0.56,1591,2.819]],["body/modules/TeamadminModule.html",[2,0.217,3,0.217,4,0.195,12,0.015,14,0.319,21,0.217,39,0.239,45,0.13,106,0.012,107,0.012,135,1.011,184,1.784,244,0.932,246,2.407,247,3.21,248,2.522,249,2.407,254,3.668,255,3.258,256,2.647,257,2.647,260,2.21,262,2.937,263,3.109,395,2.937,444,4.157,1383,4.069,1591,5.754,1592,4.619,1593,4.619,1594,4.619,1595,5.144,1596,5.322,1597,4.619]],["title/modules/TeamadminRoutingModule.html",[244,0.56,1595,2.615]],["body/modules/TeamadminRoutingModule.html",[2,0.232,3,0.232,4,0.209,12,0.015,14,0.316,18,0.281,21,0.232,39,0.209,45,0.139,73,1.315,106,0.012,107,0.012,184,1.575,239,2.264,244,0.812,247,2.581,260,2.306,270,3.149,271,3.466,272,3.149,273,3.149,274,3.334,395,3.149,1383,3.545,1595,4.54,1597,4.953,1598,5.706]],["title/components/TeamsComponent.html",[18,0.194,186,0.942]],["body/components/TeamsComponent.html",[2,0.162,3,0.162,4,0.146,6,0.472,7,1.031,11,0.706,12,0.015,14,0.251,18,0.342,19,1.594,21,0.162,23,3.458,28,2.724,39,0.146,40,2.11,41,1.956,43,1.401,45,0.097,46,0.918,47,1.251,56,0.772,59,0.918,67,1.719,68,1.777,70,1.243,71,2.852,86,2.645,106,0.01,107,0.01,108,0.953,109,1.109,110,1.109,111,1.109,113,1.109,114,1.511,117,0.991,119,3.456,120,1.04,122,0.727,123,0.998,124,0.699,128,0.592,132,3.371,134,2.237,135,0.757,136,1.511,137,1.511,138,1.511,139,1.846,140,1.109,141,1.109,142,1.109,143,0.918,144,1.109,145,0.953,146,1.109,147,0.953,148,1.109,149,0.953,150,1.109,151,0.953,152,1.068,153,1.109,154,0.918,155,1.109,156,0.953,157,1.109,158,0.953,159,1.109,160,0.953,161,1.109,162,0.953,163,1.109,164,0.99,165,1.109,166,0.953,167,1.109,168,0.953,169,1.109,170,0.953,171,1.109,172,0.918,173,1.109,174,0.918,175,1.109,176,0.953,177,1.109,178,0.953,179,1.109,180,0.883,181,1.109,182,0.918,183,1.109,184,0.918,185,1.109,186,1.587,187,1.109,188,0.918,189,0.99,190,1.109,686,4.239,772,3.11,1599,3.456,1600,5.426,1601,5.426,1602,5.426,1603,3.981,1604,3.981,1605,5.426]],["title/components/TournamentComponent.html",[18,0.194,188,0.907]],["body/components/TournamentComponent.html",[2,0.099,3,0.099,4,0.088,6,0.287,7,0.716,8,4.056,11,0.866,12,0.015,13,1.241,14,0.231,18,0.279,19,1.195,21,0.099,23,2.363,24,1.511,27,0.625,34,3.335,35,1.335,39,0.088,40,2.011,41,1.865,43,0.973,45,0.059,46,0.558,47,0.869,50,0.973,51,1.874,56,0.536,57,0.88,59,0.869,60,1.176,67,1.289,68,1.401,70,1.176,73,0.558,81,2.704,88,1.414,106,0.007,107,0.012,108,0.579,109,0.674,110,0.674,111,0.674,113,0.674,114,1.049,117,0.688,120,1.216,122,1.034,123,1.013,124,0.994,128,1.011,129,1.204,134,2.375,135,0.46,136,1.049,137,1.049,138,1.049,139,1.455,140,0.674,141,0.674,142,0.674,143,0.558,144,0.674,145,0.579,146,0.674,147,0.579,148,0.674,149,0.579,150,0.674,151,0.579,152,0.649,153,0.674,154,0.558,155,0.674,156,0.579,157,0.674,158,0.579,159,0.674,160,0.579,161,0.674,162,0.579,163,0.674,164,0.602,165,0.674,166,0.579,167,0.674,168,0.579,169,0.674,170,0.579,171,0.674,172,0.558,173,0.674,174,0.558,175,0.674,176,0.579,177,0.674,178,0.579,179,0.674,180,0.537,181,0.674,182,0.558,183,0.674,184,0.558,185,0.674,186,0.579,187,0.674,188,1.204,189,1.916,190,0.674,286,2.832,309,1.414,476,2.202,481,1.335,526,2.561,527,1.046,588,1.414,616,2.504,617,2.943,618,2.943,619,3.762,739,2.967,769,1.414,986,3.726,995,3.271,1009,3.308,1012,3.271,1108,3.615,1130,5.206,1131,4.915,1160,2.943,1306,3.271,1307,3.271,1316,3.271,1434,4.535,1436,3.271,1461,2.1,1462,2.1,1606,2.1,1607,3.768,1608,3.768,1609,5.225,1610,5.225,1611,3.768,1612,5.225,1613,3.768,1614,5.225,1615,3.768,1616,3.768,1617,3.768,1618,2.419,1619,2.419,1620,3.768,1621,2.419,1622,2.419,1623,2.419,1624,3.768,1625,2.419,1626,2.419,1627,2.419,1628,2.419,1629,2.419,1630,2.419,1631,2.419,1632,2.419,1633,2.419,1634,2.419,1635,2.419,1636,2.419,1637,2.419,1638,2.419,1639,2.419,1640,2.419,1641,2.419,1642,2.419,1643,2.419,1644,2.419,1645,2.419,1646,2.419,1647,5.662,1648,2.419,1649,2.419,1650,2.419,1651,2.419,1652,2.419,1653,3.768,1654,3.768,1655,2.419,1656,2.419,1657,2.419,1658,2.419,1659,3.768,1660,3.768,1661,3.768,1662,3.768,1663,3.768,1664,3.768,1665,3.768,1666,3.768,1667,3.768]],["title/modules/TournamentModule.html",[244,0.56,1668,2.819]],["body/modules/TournamentModule.html",[2,0.217,3,0.217,4,0.195,12,0.015,14,0.319,21,0.217,39,0.239,45,0.13,106,0.012,107,0.012,135,1.011,188,1.784,189,1.323,244,0.932,246,2.407,247,3.21,248,2.522,249,2.407,254,3.668,255,3.258,256,2.647,257,2.647,260,2.21,262,2.937,263,3.109,395,2.937,1383,4.069,1668,5.754,1669,4.619,1670,4.619,1671,4.619,1672,5.144,1673,5.322,1674,4.619]],["title/modules/TournamentRoutingModule.html",[244,0.56,1672,2.615]],["body/modules/TournamentRoutingModule.html",[2,0.235,3,0.235,4,0.211,12,0.015,14,0.31,18,0.284,21,0.235,39,0.211,45,0.141,73,1.33,106,0.012,107,0.012,188,1.585,239,2.289,244,0.821,247,2.609,260,2.321,270,3.184,271,3.483,272,3.184,273,3.184,274,3.37,1672,4.57,1674,5.008,1675,5.769]],["title/injectables/WebsocketService.html",[20,0.748,280,2.3]],["body/injectables/WebsocketService.html",[2,0.165,3,0.165,4,0.148,6,0.481,7,1.044,10,2.733,11,0.909,12,0.015,14,0.305,20,1.184,21,0.165,39,0.148,45,0.099,50,1.419,56,0.782,57,1.368,59,1.609,62,1.544,73,1.266,102,1.854,106,0.01,107,0.01,117,1.004,120,1.213,122,1.004,123,0.889,124,0.964,128,0.817,129,1.266,210,2.485,211,2.18,241,1.754,242,1.679,280,3.21,286,3.255,306,2.694,307,3.521,316,2.733,392,3.851,460,2.122,540,2.519,775,3.521,776,3.168,777,3.168,820,3.521,822,3.521,866,2.905,897,5.218,1009,3.21,1010,4.77,1105,3.521,1121,3.521,1181,2.519,1184,3.168,1296,3.168,1676,3.521,1677,7.487,1678,6.68,1679,7.197,1680,5.495,1681,4.056,1682,5.495,1683,4.056,1684,5.495,1685,6.981,1686,4.056,1687,4.056,1688,7.197,1689,4.056,1690,3.521,1691,4.056,1692,5.495,1693,3.521,1694,4.056,1695,4.056,1696,5.495,1697,4.056,1698,4.056,1699,4.056,1700,5.495,1701,4.056,1702,4.056,1703,4.056,1704,4.056,1705,4.056,1706,4.056,1707,4.056,1708,5.495,1709,4.056,1710,4.056,1711,4.056,1712,4.056,1713,4.056,1714,4.056,1715,4.056]],["title/coverage.html",[1716,4.206]],["body/coverage.html",[0,2.755,1,1.467,4,0.075,5,2.58,11,0.267,12,0.015,18,0.372,20,1.198,22,1.6,23,0.927,24,0.593,25,1.6,26,1.6,28,0.78,34,0.971,45,0.19,46,0.472,50,0.529,106,0.006,107,0.007,108,0.49,112,1.778,143,0.472,145,0.49,147,0.49,149,0.49,151,0.49,154,0.472,156,0.49,158,0.49,160,0.49,162,0.49,164,0.509,166,0.49,168,0.49,170,0.49,172,0.472,174,0.472,176,0.49,178,0.49,180,0.455,182,0.472,184,0.472,186,0.49,188,0.472,189,0.509,201,1.273,222,1.778,234,0.848,275,1.778,278,1.131,280,1.197,286,0.927,306,3.162,359,1.467,373,4.078,392,1.072,399,1.273,403,4.374,415,1.6,419,1.6,420,1.6,421,1.6,426,1.6,435,1.467,468,2.972,469,1.361,496,1.361,498,1.6,501,1.361,514,1.361,574,1.467,575,2.58,577,1.6,578,1.361,621,1.197,637,1.778,662,1.778,672,1.778,673,1.6,674,1.778,687,1.778,700,1.273,706,1.778,718,1.778,739,0.971,770,1.778,771,1.778,848,1.778,871,1.778,885,1.778,894,1.778,920,1.467,921,2.58,926,1.778,944,1.778,963,1.778,986,1.273,991,1.778,1009,4.845,1016,1.778,1037,1.778,1064,1.778,1100,1.361,1144,2.58,1182,1.6,1210,1.778,1242,1.778,1353,1.778,1386,1.778,1410,1.778,1419,1.778,1446,5.059,1463,1.778,1500,1.778,1503,1.778,1555,1.778,1599,1.778,1606,1.778,1676,1.778,1716,1.6,1717,1.778,1718,3.303,1719,2.049,1720,5.833,1721,5.833,1722,2.049,1723,7.036,1724,6.107,1725,2.049,1726,5.221,1727,2.049,1728,2.049,1729,5.221,1730,6.853,1731,3.303,1732,3.303,1733,2.049,1734,2.049,1735,2.049,1736,2.049,1737,2.049,1738,2.049,1739,2.049,1740,2.049,1741,2.049,1742,6.853,1743,2.049,1744,2.049,1745,2.049,1746,2.049,1747,2.049,1748,5.87,1749,2.049,1750,2.049,1751,6.107,1752,2.049,1753,2.049,1754,2.049,1755,2.049,1756,2.049,1757,2.049,1758,6.743,1759,2.049,1760,2.049,1761,2.049,1762,2.049,1763,2.049,1764,2.049,1765,2.049,1766,2.049,1767,2.049,1768,3.303,1769,2.049,1770,2.049,1771,2.049,1772,2.049,1773,2.049,1774,2.049,1775,2.049,1776,2.049,1777,2.049,1778,2.049,1779,2.049,1780,1.778,1781,7.036,1782,1.778,1783,1.778,1784,4.585,1785,2.049,1786,2.049,1787,3.303,1788,4.15,1789,2.049,1790,2.049,1791,2.049,1792,2.049,1793,2.049,1794,1.778,1795,1.778,1796,1.778,1797,1.778,1798,2.867,1799,1.778,1800,2.049]],["title/dependencies.html",[246,2.143,1801,3.282]],["body/dependencies.html",[12,0.015,17,1.585,21,0.199,31,2.853,32,2.853,33,2.853,37,2.463,38,1.937,106,0.011,107,0.011,239,1.937,246,2.209,248,2.314,375,5.388,376,4.849,382,4.239,383,4.239,391,2.555,395,2.695,460,3.248,515,3.497,516,4.446,588,2.853,1181,3.034,1187,3.497,1690,4.239,1693,4.239,1716,3.814,1802,4.883,1803,8.019,1804,4.883,1805,4.883,1806,4.883,1807,4.883,1808,4.883,1809,4.883,1810,4.883,1811,4.883,1812,6.207,1813,4.883,1814,4.883,1815,4.883,1816,4.883,1817,4.883,1818,4.883,1819,4.883,1820,4.883,1821,4.883,1822,4.883,1823,4.883,1824,4.883,1825,4.883,1826,4.883,1827,4.883,1828,4.883,1829,4.883,1830,4.883,1831,4.883,1832,4.883,1833,4.883,1834,4.883,1835,4.883,1836,4.883,1837,4.883,1838,4.883,1839,4.883,1840,4.883,1841,4.883,1842,4.883,1843,4.883,1844,4.883,1845,4.883,1846,4.883,1847,4.883,1848,4.883,1849,4.883,1850,4.883,1851,4.883,1852,4.883,1853,4.883,1854,4.883]],["title/miscellaneous/enumerations.html",[1855,2.039,1856,4.113]],["body/miscellaneous/enumerations.html",[6,0.696,12,0.013,106,0.013,107,0.013,223,4.979,513,4.619,1020,6.034,1430,6.034,1446,4.854,1720,4.206,1721,5.596,1855,3.648,1856,5.098,1857,5.98,1858,6.952,1859,6.952,1860,5.873,1861,5.873,1862,5.873,1863,5.873,1864,5.873,1865,5.873,1866,5.873,1867,5.873,1868,5.873,1869,5.873]],["title/miscellaneous/functions.html",[403,3.393,1855,2.039]],["body/miscellaneous/functions.html",[6,0.606,11,0.832,12,0.014,106,0.013,107,0.012,122,1.436,123,1.271,124,1.38,249,3.399,316,2.543,373,3.994,403,3.662,404,4.438,406,4.438,408,4.438,410,4.438,412,4.438,415,4.991,419,4.991,420,4.991,421,4.991,426,4.991,465,4.245,486,3.176,539,4.576,748,4.96,1446,4.536,1720,3.662,1721,5.229,1780,5.547,1782,5.547,1783,5.547,1855,3.176,1857,5.444,1870,7.516,1871,5.113,1872,5.113,1873,5.113,1874,5.113,1875,5.113,1876,6.39]],["title/index.html",[6,0.389,1877,2.849,1878,2.849]],["body/index.html",[12,0.013,106,0.013,107,0.013,1446,4.517,1717,5.507,1879,6.344,1880,7.272,1881,6.344]],["title/modules.html",[244,0.766]],["body/modules.html",[12,0.012,106,0.012,107,0.012,244,0.757,245,3.811,253,3.536,254,2.522,355,3.306,364,3.811,370,3.536,371,3.306,376,6.237,693,3.811,697,3.536,1317,3.811,1321,3.536,1377,3.811,1381,3.536,1529,3.811,1533,3.536,1591,3.811,1595,3.536,1668,3.811,1672,3.536,1882,7.984,1883,7.984,1884,8.256,1885,8.034,1886,8.034]],["title/overview.html",[1887,4.674]],["body/overview.html",[0,1.213,12,0.015,18,0.17,20,0.656,39,0.126,45,0.084,46,1.319,106,0.009,107,0.009,108,1.37,135,0.656,143,1.319,145,1.686,147,1.37,149,1.37,151,1.686,154,1.319,156,1.37,158,1.37,160,1.37,162,1.37,164,1.423,166,1.37,168,1.37,170,1.686,172,1.319,174,1.319,176,1.37,178,1.686,180,1.269,182,1.319,184,1.319,186,1.37,188,1.319,228,2.295,244,0.7,245,5.64,246,1.562,247,1.562,248,1.637,249,1.562,250,2.998,251,2.998,252,2.998,253,3.801,254,3.853,255,2.444,256,1.718,257,1.718,271,1.637,355,3.554,364,5.557,365,2.998,366,2.998,367,2.998,368,2.998,369,2.998,370,3.801,371,4.472,372,4.098,693,5.436,694,2.998,695,2.998,696,2.998,697,3.801,1003,2.998,1317,5.32,1318,2.998,1319,2.998,1320,2.998,1321,3.801,1377,5.155,1378,2.998,1379,2.998,1380,2.998,1381,3.801,1480,2.998,1481,2.998,1483,2.998,1529,5.155,1530,2.998,1531,2.998,1532,2.998,1533,3.801,1591,5.155,1592,2.998,1593,2.998,1594,2.998,1595,3.801,1668,5.155,1669,2.998,1670,2.998,1671,2.998,1672,3.801,1887,2.998,1888,3.454,1889,3.454,1890,3.454,1891,3.454,1892,3.454,1893,3.454]],["title/routes.html",[271,2.551]],["body/routes.html",[12,0.013,106,0.013,107,0.013,271,3.051]],["title/todo.html",[1877,2.849,1878,2.849,1894,3.282]],["body/todo.html",[12,0.013,47,1.764,106,0.013,107,0.013,1895,6.36,1896,6.36,1897,6.36]],["title/miscellaneous/variables.html",[1784,3.701,1855,2.039]],["body/miscellaneous/variables.html",[6,0.588,11,0.969,12,0.015,27,1.618,50,1.28,106,0.011,107,0.011,210,3.44,211,3.018,306,5.339,399,4.269,418,4.486,498,5.368,562,3.08,1446,3.893,1720,3.551,1721,4.488,1784,3.872,1794,4.303,1795,4.303,1796,4.303,1797,4.303,1798,4.303,1799,5.965,1855,3.08,1857,3.872,1898,6.267,1899,4.958,1900,4.958,1901,4.958,1902,4.958,1903,4.958,1904,4.958,1905,4.958,1906,7.815,1907,7.221,1908,7.221,1909,7.221,1910,7.221,1911,4.958,1912,7.221,1913,6.267,1914,4.958,1915,4.958,1916,4.958]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1009,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["0.12.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["0.4.11",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":619,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["1.1.0",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1888,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1003,"title":{},"body":{"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["2.4.8",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1893,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1889,"title":{},"body":{"overview.html":{}}}],["2500",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["3.0.1",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["3.30.15",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":1371,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["34",{"_index":1891,"title":{},"body":{"overview.html":{}}}],["37",{"_index":1892,"title":{},"body":{"overview.html":{}}}],["4",{"_index":988,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.1.2",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["45/46",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["45/95",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["5.0.2",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["6.0.16",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["9",{"_index":1890,"title":{},"body":{"overview.html":{}}}],["97",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["_currentseason",{"_index":1426,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_currentseason(season",{"_index":1448,"title":{},"body":{"injectables/SeasonService.html":{}}}],["a.name.tolowercas",{"_index":617,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["access_tim",{"_index":1133,"title":{},"body":{"components/MatchComponent.html":{}}}],["accessor",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["accesstoken",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["achtelfinal",{"_index":1661,"title":{},"body":{"components/TournamentComponent.html":{}}}],["activatedrout",{"_index":1358,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1586,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["add",{"_index":839,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["addmatch",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addmatch'},{'nam",{"_index":142,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["addnewteam",{"_index":118,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamnam",{"_index":125,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{}}}],["addteam'},{'nam",{"_index":141,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addteam.component.css",{"_index":115,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":116,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.compon",{"_index":264,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcompon",{"_index":108,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtournamentround.component.html",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addtournamentround/addtournamentround.compon",{"_index":992,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcompon",{"_index":46,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":144,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["admin.compon",{"_index":261,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":143,"title":{"components/AdminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":229,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{}}}],["adminmodul",{"_index":245,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodul",{"_index":253,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplet",{"_index":722,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["all_matchday",{"_index":1303,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_team",{"_index":1309,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["angular/anim",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/d",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1331,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divid",{"_index":1335,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1333,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1337,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1329,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1327,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":239,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["api.t",{"_index":1721,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api/liga",{"_index":1445,"title":{},"body":{"injectables/SeasonService.html":{}}}],["api_base_url",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicli",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["app",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["app.compon",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["app_rout",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodul",{"_index":355,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["application/json",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["appmodul",{"_index":364,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":370,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["array",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1007,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["async",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["auth.interceptor",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationservic",{"_index":234,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":372,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authservic",{"_index":236,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_nam",{"_index":1374,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["avail",{"_index":1886,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":895,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["b",{"_index":616,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.name.tolowercas",{"_index":618,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["base64",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercas",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercas",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["baseurl",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["basic",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":1437,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1438,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.19",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["blob",{"_index":1872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blobtotext",{"_index":1780,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(blob",{"_index":1871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bodi",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["body).subscrib",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.date_period",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.from",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.to",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.email",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.first_nam",{"_index":1048,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.label",{"_index":811,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.last_nam",{"_index":1050,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.location_latitud",{"_index":813,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitud",{"_index":814,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.new_password",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["body.password",{"_index":1045,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.phon",{"_index":1577,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["body.pitch_id",{"_index":798,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.rol",{"_index":1052,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.target_path",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["body.team",{"_index":1047,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.team_pair",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["boolean",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["boolean(this.accesstoken",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":248,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":1010,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["brows",{"_index":1884,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["button.add",{"_index":1063,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["button.back",{"_index":845,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":846,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_result",{"_index":870,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["button.clos",{"_index":671,"title":{},"body":{"components/ContactComponent.html":{}}}],["button.create_pitch",{"_index":838,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_team",{"_index":133,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tourna",{"_index":1013,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1140,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1139,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1014,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_tim",{"_index":1141,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":843,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":661,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.sav",{"_index":847,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.set_tim",{"_index":219,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.start_round",{"_index":221,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["c1",{"_index":1436,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c1.id",{"_index":1461,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2",{"_index":1434,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2.id",{"_index":1462,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["cach",{"_index":622,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.filter(t",{"_index":627,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.find(t",{"_index":632,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.push",{"_index":629,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cacheteamsinseason",{"_index":574,"title":{"interfaces/CacheTeamsInSeason.html":{}},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["call",{"_index":604,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["canactiv",{"_index":231,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":1585,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":716,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["cancellation_reason",{"_index":1213,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["cancelled_at",{"_index":1214,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["cancelmatch(matchid",{"_index":1197,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["cancelmatchbodi",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["canload",{"_index":232,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["case",{"_index":1708,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["catch",{"_index":866,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["cdref",{"_index":740,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":741,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":896,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":901,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'nam",{"_index":148,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["changepassword(oldpassword",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":638,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":639,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordbodi",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["changepasswordcompon",{"_index":147,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charset=utf",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["checknewpitchnam",{"_index":731,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":45,"title":{"classes/Credentials.html":{},"classes/MatchViewModel.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["cluster_adminmodul",{"_index":250,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":251,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":252,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodul",{"_index":694,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declar",{"_index":695,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_import",{"_index":696,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_matchplanmodul",{"_index":1318,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declar",{"_index":1319,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_import",{"_index":1320,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodul",{"_index":1378,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declar",{"_index":1379,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_import",{"_index":1380,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1480,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1481,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1483,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1482,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodul",{"_index":1530,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declar",{"_index":1531,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_import",{"_index":1532,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodul",{"_index":1592,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declar",{"_index":1593,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_import",{"_index":1594,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodul",{"_index":1669,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declar",{"_index":1670,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_import",{"_index":1671,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codaci",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["command",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":1383,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["compon",{"_index":18,"title":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":140,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["components/admin#adminmodul",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.compon",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodul",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.compon",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodul",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodul",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1493,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.compon",{"_index":1486,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.compon",{"_index":1490,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.compon",{"_index":1488,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.compon",{"_index":1489,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.compon",{"_index":1485,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.compon",{"_index":1487,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.compon",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodul",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodul",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodul",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["connect",{"_index":1677,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('error",{"_index":1710,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error(error",{"_index":1299,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{}}}],["console.log(error",{"_index":867,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["const",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["constructor(activatedrout",{"_index":1357,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["constructor(apicli",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["constructor(authservic",{"_index":233,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1495,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1076,"title":{},"body":{"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":194,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{}}}],["constructor(formbuild",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(match",{"_index":738,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(matchservic",{"_index":1681,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["constructor(pitchservic",{"_index":1413,"title":{},"body":{"components/PitchesComponent.html":{}}}],["constructor(priv",{"_index":461,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(publ",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/SeasonchooserComponent.html":{}}}],["constructor(seasonservic",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(teamservic",{"_index":119,"title":{},"body":{"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(token",{"_index":703,"title":{},"body":{"classes/Credentials.html":{}}}],["constructor(translateservic",{"_index":899,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservic",{"_index":707,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":152,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact'},{'nam",{"_index":150,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact.component.css",{"_index":663,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":664,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":685,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_nam",{"_index":680,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.last_nam",{"_index":681,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phon",{"_index":683,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.compon",{"_index":1099,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":684,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_person",{"_index":578,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactPersonComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"coverage.html":{}}}],["contact_phon",{"_index":682,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcompon",{"_index":149,"title":{"components/ContactComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlist",{"_index":688,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'nam",{"_index":155,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contactlist.compon",{"_index":699,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":689,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":690,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcompon",{"_index":154,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodul",{"_index":693,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodul",{"_index":697,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncompon",{"_index":151,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts.push(this.match.guest_team.id",{"_index":1128,"title":{},"body":{"components/MatchComponent.html":{}}}],["contacts.push(this.match.home_team.id",{"_index":1127,"title":{},"body":{"components/MatchComponent.html":{}}}],["context",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["core.modul",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.t",{"_index":357,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverag",{"_index":1716,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["creat",{"_index":605,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createform",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematch",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["creatematchdaysbodi",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["createnewpitch",{"_index":732,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtourna",{"_index":970,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(nam",{"_index":976,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbodi",{"_index":771,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["createrankingpenaltybodi",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["createroundnr",{"_index":967,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseasonbodi",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["createteambodi",{"_index":577,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["createteamparam",{"_index":606,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createteamparams.nam",{"_index":607,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createtournamentbodi",{"_index":991,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["createus",{"_index":1022,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodi",{"_index":1037,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["createuserbodyrol",{"_index":1020,"title":{},"body":{"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createuserbodyrole.admin",{"_index":1062,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodyrole.team_manag",{"_index":1053,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["cred",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cred.token",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["credenti",{"_index":501,"title":{"classes/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["credentials(data.token",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["currentlang",{"_index":898,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1420,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchang",{"_index":1467,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(ev",{"_index":1470,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":359,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":1874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["danger",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"classes/MatchViewModel.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["data.guestteamnam",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["data.hometeamnam",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["data.messag",{"_index":1499,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":215,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["date",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"classes/MatchViewModel.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1134,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":891,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1306,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1135,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1142,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":893,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1316,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1143,"title":{},"body":{"components/MatchComponent.html":{}}}],["date_period",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["datetim",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["datetimeadapt",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["de",{"_index":904,"title":{},"body":{"injectables/I18Service.html":{}}}],["declar",{"_index":247,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":203,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/SnackbarComponent.html":{}}}],["default",{"_index":210,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":914,"title":{},"body":{"injectables/I18Service.html":{}}}],["defin",{"_index":120,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["delay",{"_index":1695,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["delet",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/TableComponent.html":{}}}],["dep",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":246,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":1537,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":1112,"title":{},"body":{"components/MatchComponent.html":{}}}],["direct",{"_index":138,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["displaypitch",{"_index":733,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["displaypitch(pitch",{"_index":746,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["document",{"_index":1717,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.body.appendchild(tag",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":110,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["durat",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{}}}],["dynam",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":1138,"title":{},"body":{"components/MatchComponent.html":{}}}],["edit_round",{"_index":214,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":1582,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":719,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'nam",{"_index":157,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":720,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":721,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":850,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":851,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.tim",{"_index":872,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'nam",{"_index":161,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.time.component.css",{"_index":873,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":874,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.compon",{"_index":1103,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.compon",{"_index":1101,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.compon",{"_index":1102,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcompon",{"_index":156,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":849,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'nam",{"_index":159,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatchresultcompon",{"_index":158,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecompon",{"_index":160,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":971,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":137,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["email",{"_index":601,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"injectables/TeamService.html":{}}}],["emailformcontrol",{"_index":1558,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["empti",{"_index":592,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["en",{"_index":905,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":1897,"title":{},"body":{"todo.html":{}}}],["englisch",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycompon",{"_index":259,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enumer",{"_index":1856,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.serverurl",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.wsserverurl",{"_index":1698,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["environments/environ",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["errors.enter_valid_email",{"_index":1059,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["errors.enter_valid_password",{"_index":658,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["errors.password_token_invalid",{"_index":1376,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pipe(delay(60000",{"_index":1704,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["errors.pitch_exist",{"_index":841,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":660,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":201,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["event.valu",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageusersComponent.html":{}}}],["eventemitt",{"_index":1081,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventtyp",{"_index":1858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["everyth",{"_index":581,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["exampl",{"_index":1538,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["extend",{"_index":710,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"classes/MatchViewModel.html":{}}}],["fals",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["filter_list",{"_index":1310,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteract",{"_index":1253,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitch",{"_index":723,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["filterpitch",{"_index":734,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["filterpitches(searchterm",{"_index":749,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["final",{"_index":1664,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["first_nam",{"_index":599,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["first_name_requir",{"_index":1060,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["firstnam",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["flexlayoutmodul",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["forgot_password",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["formatd",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdate(d",{"_index":1873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formbuild",{"_index":742,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":645,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":764,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodul",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":593,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["fromj",{"_index":1220,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["fromjs(data",{"_index":1236,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["full",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":403,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["game",{"_index":1015,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1005,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["genround",{"_index":972,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["get",{"_index":1877,"title":{"index.html":{},"todo.html":{}},"body":{}}],["get_currentseason",{"_index":1441,"title":{},"body":{"injectables/SeasonService.html":{}}}],["getaccesstoken",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentlang",{"_index":907,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteract",{"_index":1279,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":508,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthent",{"_index":506,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":510,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmatchday",{"_index":1247,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(id",{"_index":1255,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).end_d",{"_index":1315,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).numb",{"_index":1313,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).start_d",{"_index":1314,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchdaysinseason",{"_index":1146,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchdaysinseason(seasonid",{"_index":1157,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesinseason",{"_index":1147,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesinseason(seasonid",{"_index":1159,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesintourna",{"_index":1148,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesintournament(tournamentid",{"_index":1162,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getpitch",{"_index":1395,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid",{"_index":1388,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid(id",{"_index":1391,"title":{},"body":{"injectables/PitchService.html":{}}}],["getround",{"_index":1611,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(matchdayid",{"_index":1617,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).end_d",{"_index":1667,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).numb",{"_index":1665,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_d",{"_index":1666,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getroundsintourna",{"_index":1149,"title":{},"body":{"injectables/MatchService.html":{}}}],["getroundsintournament(tournamentid",{"_index":1164,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getselectedmatchday",{"_index":1271,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getselectedteamid",{"_index":1275,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getsingleteam",{"_index":1539,"title":{},"body":{"injectables/TeamService.html":{}}}],["getsingleteam(teamid",{"_index":634,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteam",{"_index":1551,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid",{"_index":1540,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(id",{"_index":603,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteamcontactbyid",{"_index":1541,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamcontactbyid(id",{"_index":596,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["gettourna",{"_index":1630,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getwinn",{"_index":1612,"title":{},"body":{"components/TournamentComponent.html":{}}}],["given",{"_index":591,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["googelmapsscript",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplet",{"_index":766,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeel",{"_index":804,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsj",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1885,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":228,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_scor",{"_index":852,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["guest_team",{"_index":1211,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guest_team_id",{"_index":1215,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guestscor",{"_index":1177,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["guestteam",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["guestteamid",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["guestteamnam",{"_index":1125,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["halbfinal",{"_index":1663,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerj",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatch",{"_index":1248,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["header",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["headers.append('author",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('cont",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["hi",{"_index":1373,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played_match",{"_index":1311,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplay",{"_index":1073,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplay",{"_index":1245,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home_scor",{"_index":853,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["home_team",{"_index":1212,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["home_team_id",{"_index":1216,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["homescor",{"_index":1176,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hometeam",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["hometeamid",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["hometeamnam",{"_index":1123,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hostlisten",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":136,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["http://192.168.178.23/api",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpclientmodul",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":459,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":454,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheader",{"_index":512,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":458,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":452,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":1881,"title":{},"body":{"index.html":{}}}],["i18n/d",{"_index":909,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":910,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18servic",{"_index":34,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactori",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provid",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icancelmatchbodi",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["ichangepasswordbodi",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["iclient",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["icon",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["icontact_person",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["icreatematchdaysbodi",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["icreatepitchbodi",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["icreaterankingpenaltybodi",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["icreateseasonbodi",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["icreateteambodi",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["icreatetournamentbodi",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["icreateuserbodi",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["id",{"_index":595,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ManagetournamentComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["idate_period",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["identifi",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["iidentifi",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["ilocatematchbodi",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["imatch",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["imatch_day",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"todo.html":{}}}],["import",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["inherit",{"_index":1225,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["init",{"_index":897,"title":{},"body":{"injectables/I18Service.html":{},"classes/MatchViewModel.html":{},"injectables/WebsocketService.html":{}}}],["init(data",{"_index":1238,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["initi",{"_index":610,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["initloadteam",{"_index":612,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["inject",{"_index":20,"title":{"injectables/AuthenticationService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"injectables/WebsocketService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(api_base_url",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["inject(mat_dialog_data",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":925,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectiontoken('api_base_url",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":677,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["inputstream",{"_index":1678,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["intercept",{"_index":449,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":451,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":447,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchUpdateMessage.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{},"overview.html":{}}}],["ipitch",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["irank",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["iranking_penalti",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["iranking_posit",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["irenameteambodi",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["isadmin",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthent",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["ischedulematchbodi",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["ischedulematchdaybodi",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["iseason",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["isemailvalidorempti",{"_index":1559,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1562,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isendpasswordresetmailbodi",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["isetroundbodi",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["isload",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplay",{"_index":1150,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1166,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["isnackbardata",{"_index":920,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnewmatchday",{"_index":1249,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnewmatchday(match",{"_index":1258,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnumb",{"_index":1067,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(v",{"_index":1082,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isubmitmatchresultbodi",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["isvalidresult",{"_index":1151,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(scor",{"_index":1168,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["iteam",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["iteam_pair",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["itourna",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["iuser",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["jqueri",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('access_token",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.parse(localstorage.getitem('cache_teams_in_season",{"_index":625,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(localstorage.getitem('pitch",{"_index":1399,"title":{},"body":{"injectables/PitchService.html":{}}}],["json.parse(localstorage.getitem('selected_matchday",{"_index":1283,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["json.parse(localstorage.getitem('selected_season",{"_index":1447,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.parse(localstorage.getitem('selected_tourna",{"_index":1634,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.parse(localstorage.getitem('team",{"_index":586,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(messag",{"_index":1705,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(bodi",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.stringify(cach",{"_index":631,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.stringify(data",{"_index":1714,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(season",{"_index":1450,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(t",{"_index":1637,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.stringify(valu",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["karma",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["kickoff",{"_index":888,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"classes/MatchViewModel.html":{}}}],["kickoffset",{"_index":876,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(ev",{"_index":878,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["lang",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{}}}],["languag",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["last_nam",{"_index":600,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["last_name_requir",{"_index":1061,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["lastnam",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["launcher",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":135,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["length",{"_index":1188,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["libraries=plac",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":1879,"title":{},"body":{"index.html":{}}}],["line",{"_index":1187,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1186,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["list",{"_index":583,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["load",{"_index":611,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["load/sav",{"_index":580,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadallteam",{"_index":613,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadalltourna",{"_index":973,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpitch",{"_index":1389,"title":{},"body":{"injectables/PitchService.html":{}}}],["loadrank",{"_index":1504,"title":{},"body":{"components/TableComponent.html":{}}}],["loadranking(season",{"_index":1506,"title":{},"body":{"components/TableComponent.html":{}}}],["loadseason",{"_index":1424,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasoninprogress",{"_index":1423,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasons(st",{"_index":1429,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadteamsinseason",{"_index":1542,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadteamsinseason(seasonid",{"_index":624,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadus",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localed",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorag",{"_index":584,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.getitem('lang",{"_index":915,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.getitem('selected_team",{"_index":1284,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('access_token",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.setitem('cache_teams_in_season",{"_index":630,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.setitem('lang",{"_index":918,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.setitem('pitch",{"_index":1401,"title":{},"body":{"injectables/PitchService.html":{}}}],["localstorage.setitem('selected_matchday",{"_index":1282,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_season",{"_index":1449,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage.setitem('selected_team",{"_index":1286,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_tourna",{"_index":1636,"title":{},"body":{"components/TournamentComponent.html":{}}}],["localstorage.setitem('team",{"_index":590,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["locat",{"_index":1417,"title":{},"body":{"components/PitchesComponent.html":{}}}],["locatematchbodi",{"_index":770,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["location_off",{"_index":831,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":835,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":163,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["login.component.css",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincompon",{"_index":162,"title":{"components/LoginComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":496,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["mail",{"_index":1564,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manag",{"_index":1446,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["manageseason'},{'nam",{"_index":165,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageseason/manageseason.compon",{"_index":265,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncompon",{"_index":164,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetourna",{"_index":964,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'nam",{"_index":167,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["managetournament.component.css",{"_index":965,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":966,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.compon",{"_index":268,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.compon",{"_index":267,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcompon",{"_index":166,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentround",{"_index":968,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageus",{"_index":1017,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'nam",{"_index":169,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageusers.component.css",{"_index":1018,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1019,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/manageusers.compon",{"_index":266,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscompon",{"_index":168,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":774,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["map((pitch",{"_index":791,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["map(valu",{"_index":788,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["mat_dialog_data",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["mat_snack_bar_data",{"_index":922,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_opt",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodul",{"_index":1341,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":1330,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["match'},{'nam",{"_index":171,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["match.component.css",{"_index":1065,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1066,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.guest_scor",{"_index":1130,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":1652,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.nam",{"_index":830,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["match.guest_team_id",{"_index":1655,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_scor",{"_index":1131,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":1651,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.nam",{"_index":829,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["match.home_team_id",{"_index":1657,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":890,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch.label",{"_index":834,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.servic",{"_index":1691,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["match:2987",{"_index":1227,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2988",{"_index":1226,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2989",{"_index":1228,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2990",{"_index":1229,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2991",{"_index":1230,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2992",{"_index":1231,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2993",{"_index":1232,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2994",{"_index":1233,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2995",{"_index":1234,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2996",{"_index":1235,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3007",{"_index":1239,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3022",{"_index":1237,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3029",{"_index":1241,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match_day",{"_index":986,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["match_day_id",{"_index":1217,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["matchcancel",{"_index":1863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchcompon",{"_index":170,"title":{"components/MatchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchconvert",{"_index":1152,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverter(match",{"_index":1171,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray",{"_index":1153,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray(match",{"_index":1173,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchday",{"_index":1193,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{}}}],["matchday.end_d",{"_index":1308,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchday.numb",{"_index":1304,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchday.start_d",{"_index":1305,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompar",{"_index":1250,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompare(md1",{"_index":1260,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdayid",{"_index":1160,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TournamentComponent.html":{}}}],["matchdayid).subscrib",{"_index":1190,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matches.foreach((match",{"_index":1198,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchid",{"_index":1122,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TableComponent.html":{}}}],["matchkickoff",{"_index":875,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["matchloc",{"_index":1860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchplan",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{}}}],["matchplan'},{'nam",{"_index":173,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["matchplan.compon",{"_index":1323,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1243,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1244,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplancompon",{"_index":172,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplanmodul",{"_index":1317,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodul",{"_index":1321,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchresult",{"_index":1203,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult).subscrib",{"_index":1207,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.guest_scor",{"_index":1204,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.home_scor",{"_index":1205,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresultsubmit",{"_index":1861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchschedul",{"_index":1862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchservic",{"_index":286,"title":{"injectables/MatchService.html":{}},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["matchupd",{"_index":1145,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchupdatemessag",{"_index":1100,"title":{"interfaces/MatchUpdateMessage.html":{}},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["matchviewmodel",{"_index":739,"title":{"classes/MatchViewModel.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matdatepickermodul",{"_index":1345,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodul",{"_index":1338,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{}}}],["matdividermodul",{"_index":1334,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materi",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["material.modul",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodul",{"_index":371,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1002,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["maticonmodul",{"_index":1332,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1340,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":1344,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":1343,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":1346,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":1349,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1352,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchang",{"_index":1028,"title":{},"body":{"components/ManageusersComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodul",{"_index":1336,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":1328,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":1350,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1351,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodul",{"_index":1348,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":1339,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":1342,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1326,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":1347,"title":{},"body":{"modules/MaterialModule.html":{}}}],["md1",{"_index":1263,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md1.id",{"_index":1300,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2",{"_index":1261,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2.id",{"_index":1301,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["mechan",{"_index":623,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["memberof",{"_index":585,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["menu.admin",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contact",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.t",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tourna",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":113,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["method",{"_index":117,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["miscellan",{"_index":1855,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/match.viewmodel",{"_index":769,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["modul",{"_index":244,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":1105,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["msg.matchid",{"_index":1107,"title":{},"body":{"components/MatchComponent.html":{}}}],["msg.type",{"_index":1707,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["multi",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["mvwa",{"_index":1200,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mvwa.push(this.matchconverter(match",{"_index":1199,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["name",{"_index":123,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["nbsp",{"_index":1307,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1132,"title":{},"body":{"components/MatchComponent.html":{}}}],["new",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_kickoff_tim",{"_index":892,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_pitch",{"_index":836,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":844,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":840,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newmatchpitch",{"_index":724,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newmatchpitch.label",{"_index":837,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpassword",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'nam",{"_index":175,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["newpassword.compon",{"_index":1384,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1354,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1355,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcompon",{"_index":174,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodul",{"_index":1377,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodul",{"_index":1381,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":725,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":726,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":727,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplac",{"_index":783,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":728,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newroundplandateto",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newwinn",{"_index":1613,"title":{},"body":{"components/TournamentComponent.html":{}}}],["newwinner(match",{"_index":1620,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clon",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":260,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngoninit",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["no_contact_set",{"_index":686,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":832,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1136,"title":{},"body":{"components/MatchComponent.html":{}}}],["nswag",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/WebsocketService.html":{}}}],["numberconnect",{"_index":1679,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["object",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":457,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/LoginContext.html":{},"guards/TeamadminGuard.html":{}}}],["old_kickoff_tim",{"_index":889,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":833,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":640,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["oncancelresultclick",{"_index":868,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["onchangeteamselect",{"_index":1023,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["onchangeteamselect(ev",{"_index":1027,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["onlangselect",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["onpitchselect",{"_index":735,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":753,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclick",{"_index":736,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":737,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselect",{"_index":974,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmod",{"_index":1068,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1069,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog(match",{"_index":1086,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1070,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog(match",{"_index":1088,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1071,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog(match",{"_index":1090,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":124,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":257,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1074,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":1887,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":358,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodul",{"_index":1491,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodul",{"_index":1492,"title":{},"body":{"modules/SharedModule.html":{}}}],["p.label",{"_index":824,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["p.label.tolowercase().indexof(searchterm.tolowercas",{"_index":795,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["packag",{"_index":1801,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":594,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/NewpasswordComponent.html":{},"injectables/TeamService.html":{}}}],["paramet",{"_index":122,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params['token",{"_index":1365,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["pars",{"_index":1711,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["passbase64",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["password",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{}}}],["password_forgot_text",{"_index":1375,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_requir",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordforgot",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":273,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perm_contact_calendar",{"_index":1137,"title":{},"body":{"components/MatchComponent.html":{}}}],["person",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'nam",{"_index":153,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["person.compon",{"_index":1494,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":675,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":676,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.t",{"_index":674,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":678,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":679,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":673,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":602,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["pick",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":787,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitch",{"_index":700,"title":{},"body":{"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"classes/MatchViewModel.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["pitch.label",{"_index":796,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch.servic",{"_index":1184,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/WebsocketService.html":{}}}],["pitch_contact",{"_index":1418,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":1218,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["pitch_requir",{"_index":842,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchad",{"_index":1387,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches'},{'nam",{"_index":177,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["pitches(valu",{"_index":1400,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches.component.css",{"_index":1411,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1412,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescompon",{"_index":176,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchexist",{"_index":826,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid",{"_index":816,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid.id",{"_index":818,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservic",{"_index":392,"title":{"injectables/PitchService.html":{}},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["pitchservicefactori",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pitchservicefactory(provid",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["place",{"_index":729,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":808,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":810,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":218,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":220,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["popper.j",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_go",{"_index":1527,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draw",{"_index":1524,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.loss",{"_index":1525,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.match",{"_index":1522,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.numb",{"_index":1520,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.point",{"_index":1528,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_go",{"_index":1526,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.win",{"_index":1523,"title":{},"body":{"components/TableComponent.html":{}}}],["prepar",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["privat",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["product",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promis",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["provid",{"_index":249,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["providedin",{"_index":241,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["provider.init",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.initloadteam",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.load",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.loadseasoninprogress",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["queue",{"_index":1690,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["queueingsubject",{"_index":1688,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rank",{"_index":1503,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["ranking_penalti",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["ranking_posit",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["rankingpenalti",{"_index":1896,"title":{},"body":{"todo.html":{}}}],["rankingpenaltyad",{"_index":1864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rankingpenaltyremov",{"_index":1865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["re",{"_index":1055,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["reactiveformsmodul",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["redirectto",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registerlocaledata",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localed",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["relat",{"_index":582,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["remove_red_ey",{"_index":659,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removeteam",{"_index":191,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["renameteambodi",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["req",{"_index":456,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('author",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":1799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reschedulematchday",{"_index":1895,"title":{},"body":{"todo.html":{}}}],["reset",{"_index":256,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resolv",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(fals",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(matchday",{"_index":1194,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(nul",{"_index":1460,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(pitch",{"_index":1408,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(seasons.filter(",{"_index":1458,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(team",{"_index":636,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.sort((a",{"_index":615,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.teams.sort((a",{"_index":633,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(this.matchconverter(match",{"_index":1209,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.matchconverterarray(match",{"_index":1191,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.pitch",{"_index":1409,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(this.team",{"_index":620,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(tru",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(us",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["respons",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["response.body['email",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['first_nam",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['last_nam",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.headers.get('x",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resultupd",{"_index":1075,"title":{},"body":{"components/MatchComponent.html":{}}}],["retrywhen",{"_index":1694,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["retrywhen(error",{"_index":1703,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["return",{"_index":128,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["root",{"_index":242,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'nam",{"_index":146,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["round",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["rout",{"_index":271,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["routermodul",{"_index":272,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":274,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1587,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routing.modul",{"_index":262,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.t",{"_index":270,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxj",{"_index":460,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":775,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["s.state",{"_index":1459,"title":{},"body":{"injectables/SeasonService.html":{}}}],["save",{"_index":713,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["savecontact",{"_index":1560,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":1566,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["schedulematchbodi",{"_index":885,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["schedulematchdaybodi",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["score",{"_index":1170,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["screen",{"_index":1111,"title":{},"body":{"components/MatchComponent.html":{}}}],["searchterm",{"_index":751,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["season",{"_index":621,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["season.nam",{"_index":1479,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchang",{"_index":1468,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoos",{"_index":1464,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'nam",{"_index":179,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["seasonchooser.component.css",{"_index":1465,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1466,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercompon",{"_index":178,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompar",{"_index":1425,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1433,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncr",{"_index":1421,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonid",{"_index":576,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["seasoninprogress",{"_index":1422,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonservic",{"_index":278,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonservicefactori",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["seasonservicefactory(provid",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["seasonst",{"_index":1430,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/enumerations.html":{}}}],["selectedmatchday",{"_index":1251,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedmatchday(valu",{"_index":1281,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1252,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid(valu",{"_index":1285,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["send",{"_index":1680,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["send(data",{"_index":1684,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmatchupdatedmsg",{"_index":1072,"title":{},"body":{"components/MatchComponent.html":{}}}],["sendpasswordresetmailbodi",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["serverurl",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servic",{"_index":579,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["services/authentication.servic",{"_index":240,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.servic",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.servic",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/pitch.servic",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.servic",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.servic",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/ManageusersComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["services/websocket.servic",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchComponent.html":{}}}],["set",{"_index":588,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["set_currentseason(season",{"_index":1443,"title":{},"body":{"injectables/SeasonService.html":{}}}],["setaccesstoken",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setaccesstoken(valu",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setpitches(valu",{"_index":1397,"title":{},"body":{"injectables/PitchService.html":{}}}],["setplandatefrom",{"_index":192,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(ev",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setplandateto",{"_index":193,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(ev",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setroundbodi",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["setselectedmatchday(valu",{"_index":1273,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setselectedteamid(valu",{"_index":1277,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setteams(valu",{"_index":1553,"title":{},"body":{"injectables/TeamService.html":{}}}],["settournament(t",{"_index":1632,"title":{},"body":{"components/TournamentComponent.html":{}}}],["share",{"_index":1696,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["shared.modul",{"_index":263,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/models/websocket.model",{"_index":777,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["shared/snackbar/snackbar.compon",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodul",{"_index":254,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":730,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["snackbar",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'nam",{"_index":181,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["snackbar.component.css",{"_index":924,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":923,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.compon",{"_index":1104,"title":{},"body":{"components/MatchComponent.html":{}}}],["snackbarcompon",{"_index":180,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["spec\\.t",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":1870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.app.local.t",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.t",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../liga",{"_index":1857,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api",{"_index":772,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamsComponent.html":{}}}],["src/api/liga",{"_index":1720,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":356,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.t",{"_index":448,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":455,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":450,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.t",{"_index":112,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":130,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":126,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:9",{"_index":121,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/admin",{"_index":269,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":222,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.t",{"_index":230,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":237,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":238,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":235,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.t",{"_index":258,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.t",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.t",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21",{"_index":207,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22",{"_index":206,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24",{"_index":212,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":209,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":208,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":195,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":205,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":213,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":204,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45",{"_index":198,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49",{"_index":196,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60",{"_index":199,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64",{"_index":197,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78",{"_index":200,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82",{"_index":202,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.t",{"_index":963,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:14",{"_index":990,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:15",{"_index":985,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":989,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":983,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":987,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":975,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":984,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":981,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":980,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:37",{"_index":977,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:45",{"_index":982,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:50",{"_index":979,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:61",{"_index":978,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.t",{"_index":1016,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:16",{"_index":1034,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:17",{"_index":1036,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:19",{"_index":1035,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:21",{"_index":1030,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:23",{"_index":1031,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:24",{"_index":1032,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:25",{"_index":1033,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:26",{"_index":1024,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:43",{"_index":1026,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:47",{"_index":1029,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:51",{"_index":1025,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.t",{"_index":637,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":646,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":647,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":641,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":644,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":643,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":642,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":702,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.t",{"_index":687,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":692,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":691,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.t",{"_index":698,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.t",{"_index":1410,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1414,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:18",{"_index":1415,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.t",{"_index":1599,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":1602,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:18",{"_index":1603,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:41",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1324,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.t",{"_index":1242,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:16",{"_index":1268,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:17",{"_index":1267,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:18",{"_index":1265,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1274,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1272,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":1270,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":1276,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:33",{"_index":1278,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:37",{"_index":1280,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1254,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1269,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:48",{"_index":1266,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:51",{"_index":1264,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:64",{"_index":1257,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:76",{"_index":1262,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:80",{"_index":1256,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:84",{"_index":1259,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.t",{"_index":1322,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1385,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.t",{"_index":1353,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1363,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:18",{"_index":1359,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:23",{"_index":1362,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:33",{"_index":1360,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:49",{"_index":1361,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.t",{"_index":1382,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":672,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.t",{"_index":662,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":665,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":667,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":668,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":666,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.t",{"_index":718,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:113",{"_index":744,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":760,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:20",{"_index":758,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":768,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":761,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":762,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:25",{"_index":765,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":763,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:28",{"_index":767,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:29",{"_index":743,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:32",{"_index":759,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":752,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:57",{"_index":750,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:61",{"_index":747,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:65",{"_index":754,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:69",{"_index":755,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":756,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:92",{"_index":745,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.t",{"_index":848,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:13",{"_index":857,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:14",{"_index":854,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:17",{"_index":858,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:24",{"_index":855,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:28",{"_index":856,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.t",{"_index":871,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":877,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":883,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":882,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":880,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":879,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":881,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.t",{"_index":1064,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:111",{"_index":1092,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:124",{"_index":1085,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:134",{"_index":1083,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1079,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1080,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1078,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:26",{"_index":1077,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1094,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1096,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1093,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1095,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1097,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1098,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:46",{"_index":1084,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:49",{"_index":1089,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:71",{"_index":1087,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:91",{"_index":1091,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.t",{"_index":1463,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:13",{"_index":1473,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1469,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1474,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:18",{"_index":1472,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:29",{"_index":1471,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.t",{"_index":921,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1496,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1498,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1497,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/t",{"_index":1536,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.t",{"_index":1500,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:14",{"_index":1505,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1509,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":1508,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:35",{"_index":1507,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.t",{"_index":1534,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":1598,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.t",{"_index":1555,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":1569,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":1561,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:21",{"_index":1568,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":1571,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":1570,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":1572,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:27",{"_index":1565,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:42",{"_index":1567,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:69",{"_index":1563,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.t",{"_index":1583,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":1589,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":1588,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":1584,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.t",{"_index":1596,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tourna",{"_index":1675,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.t",{"_index":1606,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/tournament/tournament.component.ts:14",{"_index":1628,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:15",{"_index":1629,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:16",{"_index":1627,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":1631,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":1633,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:25",{"_index":1616,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":1626,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:33",{"_index":1622,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:44",{"_index":1625,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:48",{"_index":1623,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:60",{"_index":1618,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:64",{"_index":1619,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:77",{"_index":1621,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.t",{"_index":1673,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/material.module.t",{"_index":1325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/match.viewmodel",{"_index":884,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/models/match.viewmodel.t",{"_index":1210,"title":{},"body":{"classes/MatchViewModel.html":{},"coverage.html":{}}}],["src/app/models/match.viewmodel.ts:4",{"_index":1223,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:5",{"_index":1222,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:6",{"_index":1224,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/services/authentication.service.t",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:103",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:107",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:13",{"_index":704,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:14",{"_index":705,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:29",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":507,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:36",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:46",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:72",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:89",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:95",{"_index":509,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:99",{"_index":511,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/i18.service.t",{"_index":894,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{}}}],["src/app/services/i18.service.ts:11",{"_index":906,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:13",{"_index":908,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:15",{"_index":900,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":903,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:33",{"_index":902,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":360,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.t",{"_index":706,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":708,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service.t",{"_index":1144,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:104",{"_index":1172,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:112",{"_index":1174,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:120",{"_index":1167,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:124",{"_index":1169,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:128",{"_index":1178,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:146",{"_index":1180,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1156,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1161,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:48",{"_index":1158,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:64",{"_index":1163,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:85",{"_index":1165,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.t",{"_index":1386,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:10",{"_index":1396,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1398,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:17",{"_index":1390,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:27",{"_index":1392,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:35",{"_index":1393,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:39",{"_index":1394,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service.t",{"_index":1419,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{}}}],["src/app/services/season.service.ts:10",{"_index":1440,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:11",{"_index":1442,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:15",{"_index":1444,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:21",{"_index":1439,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:22",{"_index":1427,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:37",{"_index":1428,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:41",{"_index":1431,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:58",{"_index":1435,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.servic",{"_index":1604,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/services/team.service.t",{"_index":575,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:101",{"_index":1548,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:105",{"_index":1549,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:127",{"_index":1550,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:168",{"_index":1545,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:23",{"_index":1552,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:31",{"_index":1554,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:33",{"_index":1543,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:45",{"_index":1547,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":1546,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:75",{"_index":1544,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/websocket.servic",{"_index":778,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/services/websocket.service.t",{"_index":1676,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts:16",{"_index":1689,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:17",{"_index":1687,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:18",{"_index":1682,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:26",{"_index":1683,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:62",{"_index":1686,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/shared.module.t",{"_index":1484,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environ",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"injectables/WebsocketService.html":{}}}],["src/environments/environment.app.local.t",{"_index":1794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.t",{"_index":1795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1878,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1001,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startteamcount",{"_index":969,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":773,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["state",{"_index":1432,"title":{},"body":{"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["statement",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1219,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["statu",{"_index":1876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":587,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["str",{"_index":1713,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["styleurl",{"_index":114,"title":{},"body":{"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["subject",{"_index":1181,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["submit",{"_index":1356,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":1154,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitmatchresult(matchid",{"_index":1175,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["submitmatchresultbodi",{"_index":1182,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["subscrib",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["success",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":711,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":1882,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1883,"title":{},"body":{"modules.html":{}}}],["swaggerexcept",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["switch",{"_index":1706,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["t",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.id",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["t.seasonid",{"_index":628,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["tab.add_us",{"_index":1058,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["tabl",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":183,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["table.compon",{"_index":1535,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1502,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1501,"title":{},"body":{"components/TableComponent.html":{}}}],["table.gam",{"_index":1516,"title":{},"body":{"components/TableComponent.html":{}}}],["table.plac",{"_index":1514,"title":{},"body":{"components/TableComponent.html":{}}}],["table.point",{"_index":1519,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":1515,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tor",{"_index":1518,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":1517,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecompon",{"_index":182,"title":{"components/TableComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodul",{"_index":1529,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodul",{"_index":1533,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.id",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.typ",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["team",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ManageusersComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["team.contact",{"_index":598,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["team.nam",{"_index":132,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamsComponent.html":{}}}],["team.servic",{"_index":1183,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["team_contact",{"_index":1605,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_manag",{"_index":1859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["team_pair",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["teamadmin",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'nam",{"_index":185,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teamadmin.compon",{"_index":1597,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":1556,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":1557,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincompon",{"_index":184,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":428,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["teamadminmodul",{"_index":1591,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodul",{"_index":1595,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamid",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamlist",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["teamnam",{"_index":127,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teampair",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.guest_team_id",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.home_team_id",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teamrenam",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teams'},{'nam",{"_index":187,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teams(valu",{"_index":589,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teams.component.css",{"_index":1600,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":1601,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.compon",{"_index":701,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscompon",{"_index":186,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservic",{"_index":28,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamservice.getteambyid(pos.team_id).nam",{"_index":1521,"title":{},"body":{"components/TableComponent.html":{}}}],["teamservice.getteambyid(tupel.guest_team_id).nam",{"_index":217,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservice.getteambyid(tupel.home_team_id).nam",{"_index":216,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservicefactori",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["teamservicefactory(provid",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["teamsinseason",{"_index":1246,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["templat",{"_index":109,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["templateurl",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["text/javascript",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1452,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.activatedroute.queryparams.subscrib",{"_index":1364,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.api.getranking(season.id).subscrib",{"_index":1513,"title":{},"body":{"components/TableComponent.html":{}}}],["this.apiclient.changepassword(body).subscrib",{"_index":1369,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.apiclient.createpitch(body).subscrib",{"_index":815,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.createteam(createteamparams).subscrib",{"_index":608,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.createtourna",{"_index":996,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.createuser(body).subscrib",{"_index":1054,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.apiclient.getallpitches().subscrib",{"_index":1407,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.apiclient.getallseasons().subscrib",{"_index":1457,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.apiclient.getallteams().subscrib",{"_index":614,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getalltournaments().subscrib",{"_index":1638,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.apiclient.getalltournaments().subscribe((tourna",{"_index":994,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.getauthenticateduser().subscrib",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.apiclient.getmatch(matchid).subscrib",{"_index":1208,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatchdaysinseason(season.id).topromis",{"_index":1291,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.apiclient.getmatchdaysinseason(seasonid).subscrib",{"_index":1192,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(seasonid",{"_index":1189,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(undefin",{"_index":1195,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getroundsintournament(tournamentid).subscrib",{"_index":1196,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getteam(teamid).subscrib",{"_index":635,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getteamsinseason(seasonid).subscrib",{"_index":626,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.locatematch(this.match.id",{"_index":800,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.schedulematch(this.match.id",{"_index":887,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.apiclient.sendpasswordresetmail(body).subscrib",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiclient.setround(this.data.tournamentid",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.apiclient.submitmatchresult(matchid",{"_index":1206,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.updateteamcontact(teamid",{"_index":1578,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.valu",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.changepassword(this.oldpassword.valu",{"_index":653,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":243,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":1590,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loadus",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":656,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.setaccesstoken",{"_index":1366,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.us",{"_index":1573,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.team",{"_index":1574,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.teams.foreach",{"_index":1575,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":717,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchang",{"_index":802,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(defaultlang",{"_index":917,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.connect",{"_index":1697,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.connectionstatus.subscrib",{"_index":1701,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.messages.pip",{"_index":1700,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.createform",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundnr",{"_index":999,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.currentseason.subscrib",{"_index":1451,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.dialog.open(changepasswordcompon",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcompon",{"_index":1129,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcompon",{"_index":1117,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcompon",{"_index":1110,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecompon",{"_index":1119,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincompon",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialogref.clos",{"_index":657,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.dialogref.close(fals",{"_index":801,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.dialogref.close(tru",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.email",{"_index":1038,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.email.value.tolowercas",{"_index":1044,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1581,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredpitch",{"_index":785,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.filterpitches(pitch",{"_index":792,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.firstnam",{"_index":1040,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.firstname.valu",{"_index":1049,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.formbuilder.group",{"_index":782,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getround(m.match_day_id).numb",{"_index":1643,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinn",{"_index":1645,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.guest_scor",{"_index":861,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteamid",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.guestteamid.tostr",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.handlegetmatch",{"_index":1292,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplay",{"_index":1287,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_scor",{"_index":859,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeamid",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.hometeamid.tostr",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.httpclient.put('/api/users/me/password",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.i18service.changelang(lang",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["this.inputstream",{"_index":1699,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.inputstream.next(str",{"_index":1715,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.isload",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_scor",{"_index":1202,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.isvalidresult(match.home_scor",{"_index":1201,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.lastnam",{"_index":1041,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.lastname.valu",{"_index":1051,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.load",{"_index":1403,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadallteam",{"_index":609,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.loadalltourna",{"_index":993,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1011,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpitch",{"_index":1406,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadranking(season",{"_index":1510,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadranking(this.seasonservice.currentseason.getvalu",{"_index":1511,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadseasoninprogress",{"_index":1454,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadseasons(seasonstate.progress",{"_index":1456,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadus",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.loginform",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors({requir",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristin",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1368,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.logout",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.managetournamentround",{"_index":997,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.length",{"_index":1000,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1108,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["this.match.guest_scor",{"_index":862,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team.nam",{"_index":1126,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_scor",{"_index":860,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team.nam",{"_index":1124,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":1106,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":797,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchday",{"_index":1290,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchdays.find(t",{"_index":1302,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matches.revers",{"_index":1644,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":1648,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":1649,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchkickoff",{"_index":886,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservic",{"_index":869,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.getmatchesinseason(this.season.id",{"_index":1297,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchservice.getmatchesintournament(this.tournament.id",{"_index":1640,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.managetournament.id",{"_index":998,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.tournament.id",{"_index":1642,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.isvalidresult(this.guest_scor",{"_index":864,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_scor",{"_index":863,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.matchupdated.next(msg.data",{"_index":1709,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.matchservice.matchupdated.subscrib",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":865,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.updatesinglematch(match.id",{"_index":1113,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.updatesinglematch(msg.matchid",{"_index":1109,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":819,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.value.id",{"_index":799,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valuechang",{"_index":786,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpassword",{"_index":649,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpassword.valu",{"_index":654,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":817,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":812,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitud",{"_index":807,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitud",{"_index":809,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":780,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterror",{"_index":825,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(nul",{"_index":827,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalid",{"_index":828,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":781,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.newroundplandateto",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.numberconnect",{"_index":1702,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.oldpassword",{"_index":652,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":655,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":1042,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.password.valu",{"_index":1046,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.pitch",{"_index":1404,"title":{},"body":{"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["this.pitchadded.subscrib",{"_index":1402,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitches.find(t",{"_index":1405,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.loadpitch",{"_index":1416,"title":{},"body":{"components/PitchesComponent.html":{}}}],["this.pitchservice.pitch",{"_index":784,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitchadded.next(nul",{"_index":820,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["this.pitchservice.pitches.filter(p",{"_index":794,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":823,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.slic",{"_index":793,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.plac",{"_index":803,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_chang",{"_index":805,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplac",{"_index":806,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.rank",{"_index":1512,"title":{},"body":{"components/TableComponent.html":{}}}],["this.resultupdated.emit(this.match",{"_index":1114,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.round",{"_index":1004,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1006,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.router.navigatebyurl",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.season",{"_index":1289,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.valu",{"_index":1478,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasoncreated.subscrib",{"_index":1453,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasoninprogress",{"_index":1455,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasonservice.currentseason.next(event.valu",{"_index":1477,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.next(this.seasonservice.seasoninprogress[0",{"_index":1476,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscrib",{"_index":1288,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.seasoninprogress",{"_index":1475,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchday.id",{"_index":1298,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1295,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.sendmatchupdatedmsg",{"_index":1115,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.setaccesstoken(new",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setaccesstoken(nul",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setbtnlabel",{"_index":714,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.snackbar.openfromcomponent(snackbarcompon",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.team",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["this.teamid",{"_index":669,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.teamlist",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["this.teamlist.filter(t",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.filter(t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.find(t",{"_index":597,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.teams.push(team",{"_index":670,"title":{},"body":{"components/ContactComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.teams.push(teampair",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teamservice.addnewteam(teamnam",{"_index":131,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamservice.getsingleteam(teamid",{"_index":1576,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.teamservice.loadallteam",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamsComponent.html":{}}}],["this.teamservice.loadteamsinseason(season.id",{"_index":1294,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.teamsinseason",{"_index":1293,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.token",{"_index":1367,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tourna",{"_index":995,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentchang",{"_index":1639,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentround",{"_index":1641,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentrounds.find(t",{"_index":1646,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":911,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":916,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":1057,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":1056,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1372,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1370,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1118,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1116,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_upd",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":1580,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":1579,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1120,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscrib",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.translateservice.settranslation('d",{"_index":912,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":913,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":919,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscrib",{"_index":715,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscrib",{"_index":712,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.us",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.rol",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userteamlist",{"_index":1043,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.websocketservice.send",{"_index":821,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.winnerlastround",{"_index":1647,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":1654,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":1658,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_scor",{"_index":1650,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":1656,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":1653,"title":{},"body":{"components/TournamentComponent.html":{}}}],["throwexcept",{"_index":1783,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwexception(messag",{"_index":1875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["todo",{"_index":1894,"title":{"todo.html":{}},"body":{}}],["tojson",{"_index":1221,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["tojson(data",{"_index":1240,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["token",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["tournament",{"_index":189,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{}}}],["tournament(t",{"_index":1635,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.compon",{"_index":1674,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":1608,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":1607,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.nam",{"_index":1012,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournamentchang",{"_index":1614,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompar",{"_index":1615,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompare(c1",{"_index":1624,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompon",{"_index":188,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentid",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["tournamentmodul",{"_index":1668,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentround",{"_index":1609,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentroutingmodul",{"_index":1672,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["translat",{"_index":134,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/cor",{"_index":38,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1312,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodul",{"_index":361,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":362,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["translationservic",{"_index":709,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["tree",{"_index":111,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["tri",{"_index":1296,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["true",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":1185,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["tupel",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":789,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["types/googlemap",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1880,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":748,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"miscellaneous/functions.html":{}}}],["updatesinglematch",{"_index":1155,"title":{},"body":{"injectables/MatchService.html":{}}}],["updatesinglematch(matchid",{"_index":1179,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["useclass",{"_index":363,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["usefactori",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["usernam",{"_index":517,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["username_requir",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["userrol",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userrole.team_manag",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["users/m",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":1021,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["usevalu",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["val",{"_index":1008,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["valid",{"_index":648,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":1039,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":651,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["validators.requir",{"_index":650,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["valu",{"_index":211,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":790,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["var",{"_index":139,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["variabl",{"_index":1784,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["viertelfinal",{"_index":1662,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":757,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplet",{"_index":779,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":129,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocket",{"_index":1693,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["websocketconnect",{"_index":1692,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessag",{"_index":1685,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessagetyp",{"_index":776,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.match_upd",{"_index":1121,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.pitch_ad",{"_index":822,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketservic",{"_index":280,"title":{"injectables/WebsocketService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["websocketservicefactori",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["websocketservicefactory(provid",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["winner.nam",{"_index":1660,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":1659,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winnerlastround",{"_index":1610,"title":{},"body":{"components/TournamentComponent.html":{}}}],["ws",{"_index":1712,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws://192.168.178.23:3001/w",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://${window.location.hostname}/w",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://manager.wildeligabremen.de/w",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsserverurl",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"injectables/SeasonService.html":{},"miscellaneous/functions.html":{}}}],["zip",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":255,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  addNewTeam(teamName: string) {\n    this.teamService.addNewTeam(teamName);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeamId\n                            \n                            \n                                homeTeamId\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                teamList\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                createMatch\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, apiClient: Client, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTeam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMatch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTeam(tupel: Team_pairs)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tupel\n                                                        \n                                                                    Team_pairs\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateFrom(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateTo(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     AddMatchData\n\n                    \n                \n                    \n                        \n                            Type :     AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guestTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        homeTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateFrom:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateTo:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team_pairs[]\n\n                    \n                \n                    \n                        \n                            Type :     Team_pairs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{teamService.getTeamById(tupel.home_team_id).name}}\n      \n      \n        -\n      \n      \n        {{teamService.getTeamById(tupel.guest_team_id).name}}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n          \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n          {{ 'PLAN_DATE_TO'| translate}}:\n          \n          {{ 'BUTTON.SET_TIME' | translate}}\n          \n        \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{teamService.getTeamById(tupel.home_team_id).name}}                    -                    {{teamService.getTeamById(tupel.guest_team_id).name}}                              -                                                                        {{team.name}}                                                                          {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                  {{ \\'BUTTON.SET_TIME\\' | translate}}                              {{ \\'PLAN_DATE_TO\\'| translate}}:                    {{ \\'BUTTON.SET_TIME\\' | translate}}                                    {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddteamComponent\n                            \n                            \n                                AddtournamentroundComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                ManageseasonComponent\n                            \n                            \n                                ManagetournamentComponent\n                            \n                            \n                                ManageusersComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddtournamentroundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                websocketService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, authService: AuthenticationService, i18Service: I18Service, websocketService: WebsocketService, matchService: MatchService, snackBar: MatSnackBar, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadGoogleMapsScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadGoogleMapsScript()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLangSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLangSelect(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePasswordDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePasswordDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openLoginDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenLoginDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { SeasonService } from './services/season.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { MatchService } from './services/match.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public seasonService: SeasonService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public websocketService: WebsocketService,\n    private matchService: MatchService,\n    public snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private dialog: MatDialog) {\n  }\n\n  async ngOnInit() {\n    this.loadGoogleMapsScript();\n    if (this.authService.accessToken) {\n      await this.authService.loadUser();\n    }\n    this.matchService.matchUpdated.subscribe(\n      (data) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('RESULT_UPDATED', { homeTeam: data.homeTeamName, guestTeam: data.guestTeamName })\n          },\n          panelClass: ['alert', 'alert-info']\n        });\n      });\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n        \n      \n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                                        {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                          Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  AppCoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TeamService } from './services/team.service';\nimport { SeasonService } from './services/season.service';\nimport { PitchService } from './services/pitch.service';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { API_BASE_URL } from '../api';\nimport { environment } from '../environments/environment';\nimport { WebsocketService } from './services/websocket.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { AppCoreModule } from './app-core.module';\nregisterLocaleData(localeDe);\n\nexport function teamServiceFactory(provider: TeamService) {\n  return () => provider.initLoadTeams();\n}\n\nexport function seasonServiceFactory(provider: SeasonService) {\n  return () => provider.loadSeasonInProgress();\n}\n\nexport function pitchServiceFactory(provider: PitchService) {\n  return () => provider.load();\n}\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function websocketServiceFactory(provider: WebsocketService) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: teamServiceFactory,\n      deps: [TeamService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: seasonServiceFactory,\n      deps: [SeasonService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pitchServiceFactory,\n      deps: [PitchService], multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    },\n    {\n      provide: API_BASE_URL,\n      useValue: environment.serverUrl\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: websocketServiceFactory,\n      deps: [WebsocketService], multi: true\n    },\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  { path: '', redirectTo: 'matchplan', pathMatch: 'full' },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth.interceptor.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, httpClient: HttpClient, router: Router, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword(oldPassword: string, newPassword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oldPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTeamAdminForTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTeamAdminForTeam(teamId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loginAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginAsync(context: LoginContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                        \n                                                                    LoginContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(value: Credentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Credentials\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:99\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheTeamsInSeason.html":{"url":"interfaces/CacheTeamsInSeason.html","title":"interface - CacheTeamsInSeason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheTeamsInSeason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seasonId\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seasonId\n                                    \n                                \n                                \n                                    \n                                        seasonId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPasswordWrong:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      if (await this.authService.changePassword(this.oldPassword.value, this.newPassword.value)) {\n          this.oldPasswordWrong = false;\n          this.authService.logout();\n          this.dialogRef.close();\n      } else {\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teamIds\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, apiClient: Client, teamIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Client } from '../../../../api';\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public teams: Team[] = new Array();\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    @Inject(MAT_DIALOG_DATA) public teamIds: string[]) { }\n\n  ngOnInit() {\n    for (const teamId of this.teamIds) {\n      this.apiClient.getTeam(teamId).subscribe(\n        (team) => {\n          this.teams.push(team);\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                    \n                            \n                            Type :    Contact_person\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact_person } from '../../../../api';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact_person;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactlistComponent\n                            \n                            \n                                PitchesComponent\n                            \n                            \n                                TeamsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ContactlistRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Credentials.html":{"url":"classes/Credentials.html","title":"class - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                filterPitches\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, pitchService: PitchService, apiClient: Client, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkNewPitchName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckNewPitchName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPitch(pitch?: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterPitches(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPitchSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPitchSelect(pitch: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onShowCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nonShowCreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adressAutoComplete:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredPitches:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newMatchPitch:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                    \n                        \n                            Default value : new Pitch()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchLabelExist:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchPlaceFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        places:     google.maps.places.Autocomplete\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showCreateNewPitch:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Pitch, LocateMatchBody, Client, CreatePitchBody } from 'src/api';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\nimport { WebsocketService } from 'src/app/services/websocket.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch = new Pitch();\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private pitchService: PitchService,\n    private apiClient: Client,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private websocketService: WebsocketService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch) {\n    this.match.pitch = pitch;\n  }\n\n  onSaveClicked() {\n    const body: LocateMatchBody = new LocateMatchBody();\n    body.pitch_id = this.newMatchPitch.value.id;\n    this.apiClient.locateMatch(this.match.id, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.dialogRef.close(false);\n      }\n    );\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n      const body: CreatePitchBody = new CreatePitchBody();\n      body.label = this.newPitch.label;\n      body.location_latitude = this.newPitch.location_latitude;\n      body.location_longitude = this.newPitch.location_longitude;\n      this.apiClient.createPitch(body).subscribe(\n        async (pitchId) => {\n          this.newPitch.id = pitchId.id;\n          this.newMatchPitch.setValue(this.newPitch);\n          this.pitchService.pitchAdded.next(null);\n          this.websocketService.send(\n            {\n              type: WebSocketMessageTypes.PITCH_ADDED,\n              data: pitchId\n            }\n          );\n        }\n      );\n    }\n  }\n  checkNewPitchName() {\n    const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    if (pitch) {\n      this.newPitchFormControl.setErrors({ pitchexist: true });\n    } else {\n      this.newPitchFormControl.setErrors(null);\n      this.newPitchFormControl.updateValueAndValidity();\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                                        {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, matchService: MatchService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  // onCancelResultClicked() {\n  //   this.matchService.\n  // }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, apiCLient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiCLient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kickoffSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nkickoffSet(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchKickoff:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { Client, ScheduleMatchBody } from '../../../../api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private apiCLient: Client\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.apiCLient.scheduleMatch(this.match.id, { kickoff: this.matchKickoff }).subscribe(\n      (t) => {\n        this.dialogRef.close(true);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLang\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLang:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    let defaultLang = localStorage.getItem('LANG');\n    if (!defaultLang) {\n      defaultLang = this.translateService.getBrowserLang();\n    }\n    if (!defaultLang) {\n      defaultLang = 'de';\n    }\n    this.changeLang(defaultLang);\n  }\n\n  changeLang(lang: string) {\n    localStorage.setItem('LANG', lang);\n    this.translateService.use(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForgot\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordForgot(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { Client, SendPasswordResetMailBody } from '../../../api';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  passwordForgot(email: string) {\n    if (email) {\n      const body = new SendPasswordResetMailBody();\n      body.email = email;\n      body.target_path = 'newpassword';\n      this.apiClient.sendPasswordResetMail(body).subscribe(\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        },\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger']\n          });\n        }\n      );\n    } else {\n      this.loginForm.controls['username'].setErrors({required: true});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournament\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewTournament(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editRound\n                            \n                            \n                        \n                    \n                \n                \n                    \neditRound()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenRounds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadAllTournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTournaments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            onTournamentSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTournamentSelected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createRoundNr:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournament:     Tournament\n\n                    \n                \n                    \n                        \n                            Type :     Tournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rounds:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTeamCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tournament, Client, CreateTournamentBody, Match_day } from '../../../../api';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  manageTournament: Tournament;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRounds: Match_day[];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.apiClient.getAllTournaments().subscribe((tournaments) => {\n      this.tournaments = tournaments;\n    });\n  }\n\n  createNewTournament(name: string) {\n    this.apiClient.createTournament({ name: name }).subscribe(\n      (id) => {\n        this.loadAllTournaments();\n      }\n    );\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = await this.matchService.getRoundsInTournament(this.manageTournament.id);\n    this.createRoundNr = this.manageTournamentRounds.length;\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT' | translate}}\n    \n  \n  \n    \n      \n        \n      \n    \n    \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\' | translate}}                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                                        {{ \\'MATCH\\' | translate }} {{ game }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUserBodyRole\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                teamList\n                            \n                            \n                                userRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeTeamSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeTeamSelect(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserBodyRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CreateUserBodyRole:     \n\n                    \n                \n                    \n                        \n                            Default value : CreateUserBodyRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     CreateUserBodyRole\n\n                    \n                \n                    \n                        \n                            Type :     CreateUserBodyRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userTeamList:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team, CreateUserBodyRole, CreateUserBody, Client } from '../../../../api';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSelectChange, MatSnackBar } from '@angular/material';\nimport { TeamService } from '../../../services/team.service';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  teamList: Team[];\n  userTeamList: string[] = new Array();\n\n  userRole: CreateUserBodyRole;\n\n  CreateUserBodyRole = CreateUserBodyRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar) {\n\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  createUser() {\n    const body = new CreateUserBody();\n\n    body.email = this.email.value.toLowerCase();\n    body.password = this.password.value;\n    body.teams = this.userTeamList;\n    body.first_name = this.firstName.value;\n    body.last_name = this.lastName.value;\n    body.role = CreateUserBodyRole.Team_manager;\n    this.apiClient.createUser(body).subscribe(\n      (res) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'TAB.ADD_USER' | translate }}\n      \n      \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_EMAIL\n            \n          \n        \n        \n          \n            \n              \n              FIRST_NAME_REQUIRED\n            \n            \n              \n              LAST_NAME_REQUIRED\n            \n          \n        \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_PASSWORD\n            \n          \n        \n        \n          \n            \n              \n                \n                  {{ CreateUserBodyRole.Admin }}\n                \n                \n                  {{ CreateUserBodyRole.Team_manager }}\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n                  {{team.name}}\n                \n              \n            \n          \n        \n        \n          \n            \n              {{ 'BUTTON.ADD' | translate}}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'TAB.ADD_USER\\' | translate }}                                                                      ERRORS.ENTER_VALID_EMAIL                                                                                        FIRST_NAME_REQUIRED                                                    LAST_NAME_REQUIRED                                                                                        ERRORS.ENTER_VALID_PASSWORD                                                                                                            {{ CreateUserBodyRole.Admin }}                                                  {{ CreateUserBodyRole.Team_manager }}                                                                                                                                          {{team.name}}                                                                                                        {{ \\'BUTTON.ADD\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                            \n                                sendMatchUpdatedMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, matchService: MatchService, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                    \n                            \n                            Type :    MatchViewModel\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultUpdated\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openContactModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenContactModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditPitchDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditPitchDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditResultDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditResultDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditTimeDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditTimeDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMatchUpdatedMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMatchUpdatedMsg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { MatchService, MatchUpdateMessage } from '../../../services/match.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WebsocketService } from '../../../services/websocket.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: MatchViewModel;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n  @Output() resultUpdated: EventEmitter = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public matchService: MatchService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private websocketService: WebsocketService) {\n\n    this.matchService.matchUpdated.subscribe(\n      async (msg) => {\n        if (this.match.id === msg.matchId) {\n          this.match = null;\n          this.match = await this.matchService.updateSingleMatch(msg.matchId);\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.resultUpdated.emit(this.match);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditPitchDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditTimeDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  sendMatchUpdatedMsg() {\n    this.websocketService.send(\n      {\n        type: WebSocketMessageTypes.MATCH_UPDATED,\n        data: {\n          matchId: this.match.id,\n          homeTeamName: this.match.home_team.name,\n          guestTeamName: this.match.guest_team.name,\n        }\n      }\n    );\n  }\n\n  openContactModal() {\n    const contacts = new Array();\n    contacts.push(this.match.home_team.id);\n    contacts.push(this.match.guest_team.id);\n    this.dialog.open(ContactComponent, {\n      data: contacts,\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                matchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getMatchDaysInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInTournament\n                            \n                            \n                                    Public\n                                    Async\n                                getRoundsInTournament\n                            \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                matchConverter\n                            \n                            \n                                matchConverterArray\n                            \n                            \n                                submitMatchResult\n                            \n                            \n                                updateSingleMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchDaysInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchDaysInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getRoundsInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoundsInTournament(tournamentId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMatchPlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isMatchPlayed(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValidResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidResult(score: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        score\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverter(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverterArray\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverterArray(matches: Match[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matches\n                                                        \n                                                                    Match[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitMatchResult\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        homeScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        guestScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSingleMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSingleMatch(matchId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchUpdated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // public async cancelMatch(matchId: string) {\n  //   return new Promise();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchUpdateMessage.html":{"url":"interfaces/MatchUpdateMessage.html","title":"interface - MatchUpdateMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchUpdateMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeamName\n                                \n                                \n                                        homeTeamName\n                                \n                                \n                                        matchId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeamName\n                                    \n                                \n                                \n                                    \n                                        guestTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamName\n                                    \n                                \n                                \n                                    \n                                        homeTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // public async cancelMatch(matchId: string) {\n  //   return new Promise();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchViewModel.html":{"url":"classes/MatchViewModel.html","title":"class - MatchViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/match.viewmodel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Match\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                guest_team\n                            \n                            \n                                    Public\n                                home_team\n                            \n                            \n                                    Public\n                                pitch\n                            \n                            \n                                    Optional\n                                cancellation_reason\n                            \n                            \n                                    Optional\n                                cancelled_at\n                            \n                            \n                                    Optional\n                                guest_score\n                            \n                            \n                                    Optional\n                                guest_team_id\n                            \n                            \n                                    Optional\n                                home_score\n                            \n                            \n                                    Optional\n                                home_team_id\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                kickoff\n                            \n                            \n                                    Optional\n                                match_day_id\n                            \n                            \n                                    Optional\n                                pitch_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromJS\n                            \n                            \n                                init\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            guest_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            home_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancellation_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancellation_reason:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2988\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancelled_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelled_at:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2987\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2989\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2990\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2991\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2992\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2993\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            kickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kickoff:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2994\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            match_day_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match_day_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2995\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pitch_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2996\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            fromJS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fromJS(data: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3022\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3007\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoJSON(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3029\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Match, Team, Pitch } from '../../api';\n\nexport class MatchViewModel extends Match {\n    public home_team: Team;\n    public guest_team: Team;\n    public pitch: Pitch;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchDays\n                            \n                            \n                                    Public\n                                matches\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Private\n                                season\n                            \n                            \n                                teamsInSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMatchDay\n                            \n                            \n                                    Async\n                                handleGetMatches\n                            \n                            \n                                isNewMatchDay\n                            \n                            \n                                matchDayCompare\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedMatchDay\n                                \n                                \n                                    selectedTeamId\n                                \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, matchService: MatchService, teamService: TeamService, apiClient: Client, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchDay(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleGetMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleGetMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNewMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNewMatchDay(match: Match, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchDayCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchDayCompare(md1: Match_day, md2: Match_day)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        md1\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        md2\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidePlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePlayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchDays:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamsInSeason:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedMatchDay\n                    \n                \n\n                \n                    \n                        getselectedMatchDay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                                \n                            \n\n                \n                    \n                        setselectedMatchDay(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeamId\n                    \n                \n\n                \n                    \n                        getselectedTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n                \n                    \n                        setselectedTeamId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { MatchService } from '../../services/match.service';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { Season, Team, Match_day, Client, Match } from '../../../api';\nimport { TeamService } from '../../services/team.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matches: MatchViewModel[];\n  public matchDays: Match_day[];\n  public hidePlayed: boolean;\n\n  public set selectedMatchDay(value: Match_day) {\n    localStorage.setItem('SELECTED_MATCHDAY', JSON.stringify(value));\n  }\n\n  public get selectedMatchDay(): Match_day {\n    return JSON.parse(localStorage.getItem('SELECTED_MATCHDAY')) || new Match_day();\n  }\n  private season: Season;\n\n  public get selectedTeamId() {\n    return localStorage.getItem('SELECTED_TEAM') || '0';\n  }\n\n  public set selectedTeamId(value: string) {\n    localStorage.setItem('SELECTED_TEAM', value);\n  }\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  teamsInSeason: Team[];\n\n  constructor(\n    private seasonService: SeasonService,\n    public matchService: MatchService,\n    private teamService: TeamService,\n    private apiClient: Client,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      async (season) => {\n        if (season) {\n          this.season = season;\n          this.matchDays = await this.apiClient.getMatchDaysInSeason(season.id).toPromise();\n          this.handleGetMatches();\n          this.teamsInSeason = await this.teamService.loadTeamsInSeason(season.id);\n        }\n      }\n    );\n  }\n\n  async handleGetMatches() {\n    this.matches = null;\n    if (this.season) {\n      const selectedTeamId = this.selectedTeamId === '0' ? undefined : this.selectedTeamId;\n      try {\n        this.matches = await this.matchService.getMatchesInSeason(this.season.id, selectedTeamId, this.selectedMatchDay.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  matchDayCompare(md1: Match_day, md2: Match_day) {\n    return md1 && md2 && md1.id === md2.id;\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDays.find(t => t.id === id);\n  }\n\n  isNewMatchDay(match: Match, index: number): boolean {\n    if (!match || index \n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_MATCHDAYS' | translate }}\n          \n          \n            {{ matchDay.number }}\n            {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang\n              }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n          \n        \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_TEAMS' | translate }}\n          \n          \n            {{ team.name }}\n          \n        \n      \n    \n    \n      \n        filter_list\n        filter_list\n      \n      \n        \n          {{ 'HIDE_PLAYED_MATCHES' | translate }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'MATCHDAY' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|\n      date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ getMatchDay(match.match_day_id).end_date| date:'shortDate':'':i18Service.currentLang\n      }})\n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ALL_MATCHDAYS\\' | translate }}                                {{ matchDay.number }}            {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang              }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                {{ team.name }}                                              filter_list        filter_list                              {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                  {{ \\'MATCHDAY\\' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|      date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ getMatchDay(match.match_day_id).end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang      }})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MatchplanComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppCoreModule\n                            \n                            \n                                    MatchplanRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, formBuilder: FormBuilder, authService: AuthenticationService, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User, Client, ChangePasswordBody } from 'src/api';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.setAccessToken({ token: params['token'] });\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.setAccessToken({ token: null });\n          }\n        }\n      }\n    );\n  }\n\n  submit() {\n    const body = new ChangePasswordBody();\n    body.new_password = this.loginForm.value.password;\n    this.apiClient.changePassword(body).subscribe(\n      () => {\n        this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n      },\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger'],\n          duration: 30000\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NewpasswordComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NewpasswordRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pitchAdded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPitchById\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pitches\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPitchById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPitchById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPitches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitchAdded:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pitches\n                    \n                \n\n                \n                    \n                        getpitches()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:10\n                                \n                            \n\n                \n                    \n                        setpitches(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Pitch } from '../../api';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  public get pitches(): Pitch[] {\n    return JSON.parse(localStorage.getItem('PITCHES')) || null;\n  }\n  public set pitches(value: Pitch[]) {\n    localStorage.setItem('PITCHES', JSON.stringify(value));\n  }\n\n  pitchAdded: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.pitchAdded.subscribe(\n      () => {\n        this.load();\n      }\n    );\n  }\n\n  getPitchById(id: string): Pitch {\n    if (this.pitches) {\n      return this.pitches.find(t => t.id === id);\n    } else {\n      return new Pitch();\n    }\n  }\n\n  public async load() {\n    this.pitches = await this.loadPitches();\n  }\n\n  async loadPitches(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllPitches().subscribe(\n          (pitches) => {\n            resolve(pitches);\n          },\n          (error) => {\n            resolve(this.pitches);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitches:     Pitch[]\n\n                    \n                \n                    \n                        \n                            Type :     Pitch[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Pitch } from '../../../../api';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  public pitches: Pitch[];\n\n  constructor(\n    private pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n    this.pitches = await this.pitchService.loadPitches();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeason\n                            \n                            \n                                seasonCreated\n                            \n                            \n                                seasonInProgress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadSeasonInProgress\n                            \n                            \n                                    Public\n                                    Async\n                                loadSeasons\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _currentSeason\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasonInProgress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasons(state?: SeasonState | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    SeasonState | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonCompare(c1: Season, c2: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSeason:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonCreated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonInProgress:     Season[]\n\n                    \n                \n                    \n                        \n                            Type :     Season[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _currentSeason\n                    \n                \n\n                \n                    \n                        get_currentSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:11\n                                \n                            \n\n                \n                    \n                        set_currentSeason(season: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            season\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, SeasonState, Season } from '../../api/liga-manager-api';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  seasonInProgress: Season[];\n  private get _currentSeason(): Season {\n    return JSON.parse(localStorage.getItem('SELECTED_SEASON')) || null;\n  }\n\n  private set _currentSeason(season: Season) {\n    if (season) {\n      localStorage.setItem('SELECTED_SEASON', JSON.stringify(season));\n    }\n  }\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n  seasonCreated: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.currentSeason.subscribe(\n      (season) => {\n        this._currentSeason = season;\n      }\n    );\n    this.seasonCreated.subscribe(\n      () => {\n        this.loadSeasonInProgress();\n      }\n    );\n  }\n\n  public async loadSeasonInProgress() {\n    this.seasonInProgress = await this.loadSeasons(SeasonState.Progress);\n  }\n\n  public async loadSeasons(state?: SeasonState | null): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllSeasons().subscribe(\n          (seasons: Season[]) => {\n            resolve(seasons.filter(s => s.state === state));\n          },\n          (error: any) => {\n            resolve(null);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: Season, c2: Season) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeasonChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \ncurrentSeasonChanged(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Season } from '../../../../api';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  season: Season;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(public seasonService: SeasonService) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    if (this.seasonService.seasonInProgress && !this.season) {\n      this.seasonService.currentSeason.next(this.seasonService.seasonInProgress[0]);\n    }\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                ContactPersonComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                MatchComponent\n                            \n                            \n                                SeasonchooserComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContactPersonComponent\n                            \n                            \n                                    MatchComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    SeasonchooserComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     ISnackBarData\n\n                    \n                \n                    \n                        \n                            Type :     ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ranking\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadRanking\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, api: Client, teamService: TeamService, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadRanking\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadRanking(season: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        season\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ranking\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ranking:     Ranking\n\n                    \n                \n                    \n                        \n                            Type :     Ranking\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Ranking, Client, Season } from '../../../api';\nimport { SeasonService } from '../../services/season.service';\nimport { TeamService } from '../../services/team.service';\nimport { MatchService } from '../../services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  public ranking: Ranking;\n\n  constructor(\n    private seasonService: SeasonService,\n    private api: Client,\n    public teamService: TeamService,\n    private matchService: MatchService) {\n  }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.loadRanking(season);\n      }\n    );\n    this.matchService.matchUpdated.subscribe(\n      (matchId) => {\n        this.loadRanking(this.seasonService.currentSeason.getValue());\n      });\n  }\n\n  loadRanking(season: Season) {\n    this.ranking = null;\n    if (season) {\n      this.api.getRanking(season.id).subscribe(\n        (ranking) => {\n          this.ranking = ranking;\n        },\n        (error) => {\n          delete this.ranking;\n        },\n        () => {\n\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n  \n    \n      \n        \n          TABLE.PLACE\n          TABLE.TEAM\n          TABLE.GAMES\n          TABLE.WIN_DRAW_LOST\n          TABLE.TORE:TORE\n          TABLE.POINTS\n        \n      \n      \n        \n          \n            {{ pos.number }}\n            {{ teamService.getTeamById(pos.team_id).name }}\n            {{ pos.matches }}\n            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n            {{ pos.points }}\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  TABLE.PLACE          TABLE.TEAM          TABLE.GAMES          TABLE.WIN_DRAW_LOST          TABLE.TORE:TORE          TABLE.POINTS                                                  {{ pos.number }}            {{ teamService.getTeamById(pos.team_id).name }}            {{ pos.matches }}            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})            {{ pos.points }}                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n  Modules\n  TableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TableRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TableRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Public\n                                    Async\n                                getSingleTeam\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamContactByID\n                            \n                            \n                                    Public\n                                    Async\n                                initLoadTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadAllTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadTeamsInSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    teams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Calls the API to create a new Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getSingleTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSingleTeam(teamId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:168\n                            \n                        \n\n\n                \n                    \n                            Loads an Team from API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Returns a Team for given teamId or an empty Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Team\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamContactByID\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamContactByID(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Contact_person\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            initLoadTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLoadTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Initial load of all Teams (should only be called in APP_INITIALIZER)\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadAllTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadTeamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTeamsInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns an Team[] for an Season.\nWith a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        teams\n                    \n                \n\n                \n                    \n                        getteams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:23\n                                \n                            \n                    \n                        \n                                Returns a List of Teams from localStorage\n\n\n                                \n                                \n                                \n                                    Returns :     Team[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setteams(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:31\n                                \n                            \n                    \n                        \n                                Stores a List of Teams to localStorage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmailValidOrEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmailValidOrEmpty(mail: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveContact\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        phone\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Contact_person, Client, Team } from '../../../api';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  teams: Team[] = new Array();\n\n  constructor(\n    public authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private apiClient: Client) { }\n\n  ngOnInit() {\n    if (this.authService.user && this.authService.user.teams) {\n      this.authService.user.teams.forEach(\n        async (teamId) => {\n          try {\n            const team = await this.teamService.getSingleTeam(teamId);\n            this.teams.push(team);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n    }\n  }\n\n  saveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string) {\n    const body = new Contact_person();\n    body.email = mail;\n    body.first_name = firstname;\n    body.last_name = lastname;\n    body.phone = phone;\n    this.apiClient.updateTeamContact(teamId, body).subscribe(\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TeamadminComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TeamadminRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team } from 'src/api';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  teams: Team[];\n\n  constructor(\n    private teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n    this.teams = await this.teamService.loadAllTeams();\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                matches\n                            \n                            \n                                tournamentRounds\n                            \n                            \n                                tournaments\n                            \n                            \n                                winnerLastRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRound\n                            \n                            \n                                getWinner\n                            \n                            \n                                newWinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                tournamentChanged\n                            \n                            \n                                tournamentCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tournament\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRound\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRound(matchDayId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewWinner(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            tournamentChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        tournamentChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \ntournamentCompare(c1: Tournament, c2: Tournament)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[][]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winnerLastRound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        winnerLastRound:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n\n                \n                    \n                        gettournament()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                                \n                            \n\n                \n                    \n                        settournament(t: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client, Tournament, Team, Match_day } from '../../../api';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { MatchService } from '../../services/match.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  winnerLastRound: Team[];\n  tournamentRounds: Match_day[];\n\n  get tournament(): Tournament {\n    return JSON.parse(localStorage.getItem('SELECTED_TOURNAMENT'));\n  }\n  set tournament(t: Tournament) {\n    localStorage.setItem('SELECTED_TOURNAMENT', JSON.stringify(t));\n  }\n\n  matches: MatchViewModel[][];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.apiClient.getAllTournaments().subscribe(\n      (tournaments) => {\n        this.tournaments = tournaments;\n        if (this.tournament) {\n          this.tournamentChanged();\n        }\n      }\n    );\n  }\n\n  tournamentCompare(c1: Tournament, c2: Tournament) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n\n  async tournamentChanged() {\n    this.matches = null;\n    const matches = await this.matchService.getMatchesInTournament(this.tournament.id);\n    this.tournamentRounds = await this.matchService.getRoundsInTournament(this.tournament.id);\n    this.matches = new Array();\n    for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    }\n    this.matches = this.matches.reverse();\n    this.getWinner();\n  }\n\n  getRound(matchDayId: string): Match_day {\n    return this.tournamentRounds.find(t => t.id === matchDayId);\n  }\n\n  getWinner() {\n    this.winnerLastRound = new Array();\n    if (this.matches[0]) {\n      this.matches[0].forEach(\n        (match) => {\n          if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n            this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n          }\n        });\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n\n  newWinner(match: MatchViewModel) {\n    if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n      if (match.home_score > match.guest_score) {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n        this.winnerLastRound.push(match.home_team);\n      } else {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n        this.winnerLastRound.push(match.guest_team);\n      }\n\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'WINNER_LAST_ROUND' | translate }}\n    \n    \n      \n        {{ winner.name }}\n      \n    \n  \n  \n    \n      \n        \n          {{ 'ACHTELFINALE' | translate }} -->\n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                  {{ \\'WINNER_LAST_ROUND\\' | translate }}                      {{ winner.name }}                                          {{ \\'ACHTELFINALE\\' | translate }} -->          {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TournamentComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TournamentRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connection\n                            \n                            \n                                    Private\n                                inputStream\n                            \n                            \n                                    Public\n                                numberConnected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            send\n                            \n                            \n                        \n                    \n                \n                \n                    \nsend(data: WebSocketMessage)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    WebSocketMessage\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connection:     Connection\n\n                    \n                \n                    \n                        \n                            Type :     Connection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputStream:     QueueingSubject\n\n                    \n                \n                    \n                        \n                            Type :     QueueingSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new QueueingSubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberConnected:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueueingSubject } from 'queueing-subject';\nimport { environment } from 'src/environments/environment';\nimport { MatchService } from './match.service';\nimport websocketConnect, { Connection } from 'rxjs-websockets';\nimport { retryWhen, delay, share } from 'rxjs/operators';\nimport { WebSocketMessage, WebSocketMessageTypes } from '../../../shared/models/websocket.model';\nimport { PitchService } from './pitch.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  private inputStream: QueueingSubject = new QueueingSubject();\n  public connection: Connection;\n  public numberConnected = 0;\n\n  constructor(\n    private matchService: MatchService,\n    private pitchService: PitchService\n  ) {\n  }\n\n  init() {\n    this.connection = websocketConnect(\n      environment.wsServerUrl,\n      this.inputStream\n    );\n\n    this.connection.messages.pipe(\n      share()\n    );\n\n    this.connection.connectionStatus.subscribe(\n      (numberConnected) => {\n        this.numberConnected = numberConnected;\n      });\n\n    this.connection.messages.pipe(\n      retryWhen(errors => errors.pipe(delay(60000)))\n    ).subscribe(\n      (message) => {\n        try {\n          const msg: WebSocketMessage = JSON.parse(message);\n          switch (msg.type) {\n            case WebSocketMessageTypes.MATCH_UPDATED:\n              this.matchService.matchUpdated.next(msg.data);\n              break;\n            case WebSocketMessageTypes.PITCH_ADDED:\n              this.pitchService.pitchAdded.next(null);\n              break;\n          }\n        } catch (error) {\n          console.error('Error parsing WS Message', error);\n        }\n      }\n    );\n  }\n\n  send(data: WebSocketMessage) {\n    const str = JSON.stringify(data);\n    this.inputStream.next(str);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CancelMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ChangePasswordBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Contact_person\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateMatchDaysBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreatePitchBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateRankingPenaltyBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateSeasonBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTournamentBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateUserBody\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Date_period\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Event\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Identifier\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                LocateMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match_day\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Pitch\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_penalty\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_position\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                RenameTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchDayBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Season\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SendPasswordResetMailBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SetRoundBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SubmitMatchResultBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SwaggerException\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team_pairs\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Tournament\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                injectable\n            \n            \n                Client\n            \n            \n                47 %\n                (45/95)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICancelMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IChangePasswordBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IClient\n            \n            \n                97 %\n                (45/46)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IContact_person\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateMatchDaysBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreatePitchBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateRankingPenaltyBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateSeasonBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTournamentBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateUserBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IDate_period\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IEvent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IIdentifier\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ILocateMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch_day\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IPitch\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_penalty\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_position\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRenameTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchDayBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISeason\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISendPasswordResetMailBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISetRoundBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISubmitMatchResultBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam_pairs\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITournament\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                blobToText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                formatDate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                throwException\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                variable\n            \n            \n                API_BASE_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                i18ServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                pitchServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                seasonServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                teamServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                websocketServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            \n                component\n            \n            \n                AddteamComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            \n                component\n            \n            \n                ManageseasonComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                component\n            \n            \n                AddtournamentroundComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                interface\n            \n            \n                AddMatchData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            \n                component\n            \n            \n                ManagetournamentComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            \n                component\n            \n            \n                ManageusersComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            \n                component\n            \n            \n                ChangepasswordComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            \n                component\n            \n            \n                ContactlistComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            \n                component\n            \n            \n                PitchesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            \n                component\n            \n            \n                TeamsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            \n                component\n            \n            \n                MatchplanComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            \n                component\n            \n            \n                NewpasswordComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            \n                component\n            \n            \n                ContactPersonComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            \n                component\n            \n            \n                ContactComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            \n                component\n            \n            \n                EditmatchPitchComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            \n                component\n            \n            \n                EditmatchResultComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            \n                component\n            \n            \n                EditmatchTimeComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            \n                component\n            \n            \n                MatchComponent\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            \n                component\n            \n            \n                SeasonchooserComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                component\n            \n            \n                SnackbarComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                interface\n            \n            \n                ISnackBarData\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            \n                component\n            \n            \n                TeamadminComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            \n                component\n            \n            \n                TournamentComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/match.viewmodel.ts\n            \n            \n                class\n            \n            \n                MatchViewModel\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                class\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                interface\n            \n            \n                LoginContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            \n                injectable\n            \n            \n                I18Service\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            \n                injectable\n            \n            \n                CustomOwlDateTimeIntl\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                injectable\n            \n            \n                MatchService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                interface\n            \n            \n                MatchUpdateMessage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            \n                injectable\n            \n            \n                PitchService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            \n                injectable\n            \n            \n                SeasonService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                injectable\n            \n            \n                TeamService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                interface\n            \n            \n                CacheTeamsInSeason\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            \n                injectable\n            \n            \n                WebsocketService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/googlemaps : ^3.30.15\n        \n            bootstrap : ^4.1.2\n        \n            codacy-coverage : ^3.2.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.3\n        \n            core-js : ^2.5.4\n        \n            exec : ^0.2.1\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.4.8\n        \n            jslint : ^0.12.0\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            ng-pick-datetime : ^6.0.16\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.4\n        \n            queueing-subject : ^0.3.0\n        \n            rxjs : ^6.3.3\n        \n            rxjs-websockets : ^6.0.2\n        \n            zone.js : ^0.8.26\n        \n            adm-zip : >=0.4.11\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateUserBodyRole   (src/.../liga-manager-api.ts)\n                        \n                        \n                            EventType   (src/.../liga-manager-api.ts)\n                        \n                        \n                            SeasonState   (src/.../liga-manager-api.ts)\n                        \n                        \n                            UserRole   (src/.../liga-manager-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n        \n            \n                \n                    \n                        \n                        CreateUserBodyRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventType\n                    \n                \n                        \n                            \n                                 MatchLocated\n                            \n                        \n                        \n                            \n                                 MatchResultSubmitted\n                            \n                        \n                        \n                            \n                                 MatchScheduled\n                            \n                        \n                        \n                            \n                                 MatchCancelled\n                            \n                        \n                        \n                            \n                                 RankingPenaltyAdded\n                            \n                        \n                        \n                            \n                                 RankingPenaltyRemoved\n                            \n                        \n                        \n                            \n                                 TeamRenamed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            blobToText   (src/.../liga-manager-api.ts)\n                        \n                        \n                            formatDate   (src/.../liga-manager-api.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            pitchServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            seasonServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            teamServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            throwException   (src/.../liga-manager-api.ts)\n                        \n                        \n                            websocketServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            blobToText\n                            \n                            \n                        \n                    \n                \n                \n                    \nblobToText(blob: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blob\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatDate(d: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            throwException\n                            \n                            \n                        \n                    \n                \n                \n                    \nthrowException(message: undefined, status: undefined, response: undefined, headers: undefined, result?: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        status\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        response\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            i18ServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ni18ServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \npitchServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nteamServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            websocketServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nwebsocketServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nImplement rescheduleMatchDay()\nImplement RankingPenalty\nImplement endSeason()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../liga-manager-api.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_BASE_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_BASE_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('API_BASE_URL')\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    wsServerUrl: 'wss://manager.wildeligabremen.de/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: `wss://${window.location.hostname}/ws`,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
