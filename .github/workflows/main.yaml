name: Build
on:
  push:
    branches:
      - 'next'


env:
  DOCKER_REPO_UI: robertkitzing/liga-manager-ui

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          push: false
          tags: ${{ env.DOCKER_REPO_UI }}:test
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Start Services
        run: docker compose -f docker-compose.e2e.yml up -d --force-recreate
      - name: Load Demo Data
        run: docker exec lima-api lima app:db:demo-data
      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_baseUrl: http://localhost
        with:
          record: true
          browser: chrome
          working-directory: e2e
  push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ env.DOCKER_REPO_UI }}:next

  # Main-Job:
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_REPO_UI: robertkitzing/liga-manager-ui
  #   steps:
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: '20'
  #   - uses: actions/cache@v2
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
  #   - name: Cache Docker layers
  #     uses: actions/cache@v2
  #     with:
  #       path: /tmp/.buildx-cache
  #       key: ${{ runner.os }}-buildx-${{ github.sha }}
  #       restore-keys: |
  #         ${{ runner.os }}-buildx-
  #   - run: yarn install
  #   - run: yarn --cwd ./server/express install
  #   - run: yarn run build:server:express
  #   - name: Archive production artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: server-express-dist
  #       path: |
  #         server/express/dist
  #   - name: get-npm-version
  #     id: package-version
  #     uses: martinbeentjes/npm-get-version-action@master
  #   - name: Generate build number
  #     id: buildnumber
  #     uses: einaregilsson/build-number@v3 
  #     with:
  #       token: ${{secrets.github_token}}
  #   - name: Build and push latest
  #     id: docker_build_latest
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: server/express
  #       push: true
  #       tags: ${{ env.DOCKER_REPO_UI }}:latest
  #   - name: Build and push tagged
  #     id: docker_build_tag
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: server/express
  #       push: true
  #       tags: ${{ env.DOCKER_REPO_UI }}:${{ steps.package-version.outputs.current-version}}-${{ steps.buildnumber.outputs.build_number }}
    # Android
    # - run: yarn run build:angular:app
    # - name: Build Android app
    #   uses: RobertKitzing/setup-cordova@0.0.5
    #   with:
    #     exec: |
    #       apk add nodejs yarn && \
    #       yarn global add cordova-set-version && \
    #       cd app && \
    #       cordova platform add android && \
    #       cordova-set-version -v ${{ steps.package-version.outputs.current-version}}-${{ steps.buildnumber.outputs.build_number }} -b ${{ steps.buildnumber.outputs.build_number }} ./config.xml && \
    #       cordova build --no-telemetry android --release -- --keystore="./limahb.keystore" --storePassword=${{ secrets.ANDROID_KEYSTORE_STOREPASS }} --password=${{ secrets.ANDROID_KEYSTORE_PASS }} --alias=limahb
    # - uses: r0adkll/upload-google-play@v1
    #   with:
    #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON_PLAIN_TEXT }}
    #     packageName: de.wildeligamanager.bremen
    #     releaseFiles: app/platforms/android/app/build/outputs/apk/release/*.apk
    #     track: beta
    #     inAppUpdatePriority: 5
    #     status: completed
        # userFraction: 0.33
        # whatsNewDirectory: distribution/whatsnew
        # mappingFile: app/build/outputs/mapping/release/mapping.txt
    # - uses: ruby/setup-ruby@v1
    #   with:
    #     ruby-version: '2.7.2'
    # - uses: maierj/fastlane-action@v2.0.1
    #   with:
    #     lane: 'beta'
    #     skip-tracking: true
    #     subdirectory: app/platforms/android/app/build/outputs/apk/release/