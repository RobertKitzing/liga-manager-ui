name: Build
on:
  push:
    branches:
      - 'next'
      - 'next_nx'

env:
  DOCKER_REPO_UI: robertkitzing/liga-manager-ui
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  npm-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - uses: actions/cache/restore@v4
        id: cache_restore
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - run: npm ci
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['liga-manager-ui-web', 'api-graphql']
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx-cloud record -- nx run ${{ matrix.project }}:lint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ 'utils' ]
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx-cloud record -- nx run ${{ matrix.project }}:test
  build:
    runs-on: ubuntu-latest
    needs: 
      - test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:production
  container:
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:production
      - name: Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          load: true
          tags: ${{ env.DOCKER_REPO_UI }}:e2e
      - name: Start Services
        uses: hoverkraft-tech/compose-action@v2.2.0
        env:
          UI_IMAGE: ${{ env.DOCKER_REPO_UI }}
          UI_TAG: 'e2e'
          API_TAG: 'latest'
        with:
          compose-file: "./docker-compose.e2e.yml"
      - name: Add Admin user
        run: docker exec lima-api lima app:user:create --email admin@example.com --password 123456 --role admin --first-name admin --last-name admin --locale en
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          command: npx nx-cloud record -- nx e2e liga-manager-ui-web --config="baseUrl=http://localhost" --browser="chrome" --record --env.CYPRESS_RECORD_KEY="${{ secrets.CYPRESS_RECORD_KEY }}"
      - name: Save docker image
        run: docker save ${{ env.DOCKER_REPO_UI }}:e2e | gzip > /tmp/lima.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-img
          path: /tmp/lima.tar
      - name: Create Release
        run:
          npx nx release --skip-publish

  # e2e:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - uses: actions/checkout@v4

  #     - name: Build
  #       uses: docker/build-push-action@v5
  #       with:
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         context: .
  #         load: true
  #         tags: ${{ env.DOCKER_REPO_UI }}:test

  #     - name: Start Services
  #       uses: hoverkraft-tech/compose-action@v2.2.0
  #       env:
  #         UI_IMAGE: 'liga-manager-ui'
  #         UI_TAG: 'test'
  #         API_TAG: 'latest'
  #       with:
  #         compose-file: "./apps/e2e/docker-compose.yml"

  #     - name: Add Admin user
  #       run: docker exec lima-api lima app:user:create --email admin@example.com --password 123456 --role admin --first-name admin --last-name admin --locale en

  #     - name: Cypress run
  #       uses: cypress-io/github-action@v6
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         CYPRESS_baseUrl: http://localhost
  #       with:
  #         record: true
  #         browser: chrome
  #         working-directory: e2e

  #     - name: Save docker image
  #       run: docker save ${{ env.DOCKER_REPO_UI }}:test | gzip > /tmp/lima.tar

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: lima-img
  #         path: /tmp/lima.tar

  #     - name:  Automated Version Bump
  #       uses:  'phips28/gh-action-bump-version@master'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # publish-web:
  #   needs: e2e
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4.3.0
  #       with:
  #         name: lima-img
  #         path: /tmp

  #     - name: get-npm-version
  #       id: package-version
  #       uses: martinbeentjes/npm-get-version-action@v1.3.1

  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/lima.tar
  #         docker tag ${{ env.DOCKER_REPO_UI }}:test ${{ env.DOCKER_REPO_UI }}:next
  #         docker tag ${{ env.DOCKER_REPO_UI }}:test ${{ env.DOCKER_REPO_UI }}:${{ steps.package-version.outputs.current-version }}
  #         docker image ls -a

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Push image
  #       run: |
  #         docker push ${{ env.DOCKER_REPO_UI }}:next
  #         docker push ${{ env.DOCKER_REPO_UI }}:${{ steps.package-version.outputs.current-version}}

  # build-app:
  #   needs: e2e
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: capacitor
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: lima-img
  #         path: /tmp

  #     - name: get-npm-version
  #       id: package-version
  #       uses: martinbeentjes/npm-get-version-action@v1.3.1

  #     - name: Load image
  #       run: |
  #           docker load --input /tmp/lima.tar

  #     - name: Copy UI
  #       working-directory: capacitor
  #       run: |
  #         docker run -v $PWD/dist/liga-manager-ui:/capacitor --rm -u $(id -u ${USER}):$(id -g ${USER}) ${{ env.DOCKER_REPO_UI }}:test cp -r /ui/. /capacitor

  #     - name: Setup java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: "zulu"
  #         java-version: "17"

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'

  #     - run: npm ci
  #     - run: npm run sync:prod
  #     - run: npm run gen:assets
  #     - run: npm run set:version:android -- -v ${{ steps.package-version.outputs.current-version }} -b ${{ github.run_number  }}

  #     - uses: actions/cache@v3
  #       with:
  #         path: 'capacitor/android/.gradle'
  #         key: next

  #     - run: npm run build -- --keystorealias limahb --keystorepath ../limahb.keystore --keystorepass ${{ secrets.ANDROID_KEYSTORE_STOREPASS }} --androidreleasetype AAB --keystorealiaspass ${{ secrets.ANDROID_KEYSTORE_PASS }}

  #     - uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON_PLAIN_TEXT }}
  #         packageName: de.wildeligamanager.bremen
  #         releaseFiles: capacitor/android/app/build/outputs/bundle/release/app-release-signed.aab
  #         track: beta
  #         status: completed
  #         inAppUpdatePriority: 5
      # - run: npm run build -- --keystorealias limahb --keystorepath ../limahb.keystore --keystorepass ${{ secrets.ANDROID_KEYSTORE_STOREPASS }} --androidreleasetype APK --keystorealiaspass ${{ secrets.ANDROID_KEYSTORE_PASS }}

      # - name: Create Release
      #   id: android_app_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ steps.package-version.outputs.current-version }}
      #     release_name: Release ${{ steps.package-version.outputs.current-version }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload-release-asset-apk 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.android_app_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: capacitor/android/app/build/outputs/apk/release/app-release-signed.apk
      #     asset_name: app-release-signed.apk
      #     asset_content_type: application/x-authorware-bin

      # - name: Upload Release Asset
      #   id: upload-release-asset-aab
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.android_app_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: capacitor/android/app/build/outputs/bundle/release/app-release-signed.aab
      #     asset_name: app-release-signed.aab
      #     asset_content_type: application/x-authorware-bin

  # Main-Job:
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_REPO_UI: robertkitzing/liga-manager-ui
  #   steps:
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: '20'
  #   - uses: actions/cache@v2
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
  #   - name: Cache Docker layers
  #     uses: actions/cache@v2
  #     with:
  #       path: /tmp/.buildx-cache
  #       key: ${{ runner.os }}-buildx-${{ github.sha }}
  #       restore-keys: |
  #         ${{ runner.os }}-buildx-
  #   - run: yarn install
  #   - run: yarn --cwd ./server/express install
  #   - run: yarn run build:server:express
  #   - name: Archive production artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: server-express-dist
  #       path: |
  #         server/express/dist
  #   - name: get-npm-version
  #     id: package-version
  #     uses: martinbeentjes/npm-get-version-action@master
  #   - name: Generate build number
  #     id: buildnumber
  #     uses: einaregilsson/build-number@v3 
  #     with:
  #       token: ${{secrets.github_token}}
  #   - name: Build and push latest
  #     id: docker_build_latest
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: server/express
  #       push: true
  #       tags: ${{ env.DOCKER_REPO_UI }}:latest
  #   - name: Build and push tagged
  #     id: docker_build_tag
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: server/express
  #       push: true
  #       tags: ${{ env.DOCKER_REPO_UI }}:${{ steps.package-version.outputs.current-version}}-${{ steps.buildnumber.outputs.build_number }}
    # Android
    # - run: yarn run build:angular:app
    # - name: Build Android app
    #   uses: RobertKitzing/setup-cordova@0.0.5
    #   with:
    #     exec: |
    #       apk add nodejs yarn && \
    #       yarn global add cordova-set-version && \
    #       cd app && \
    #       cordova platform add android && \
    #       cordova-set-version -v ${{ steps.package-version.outputs.current-version}}-${{ steps.buildnumber.outputs.build_number }} -b ${{ steps.buildnumber.outputs.build_number }} ./config.xml && \
    #       cordova build --no-telemetry android --release -- --keystore="./limahb.keystore" --storePassword=${{ secrets.ANDROID_KEYSTORE_STOREPASS }} --password=${{ secrets.ANDROID_KEYSTORE_PASS }} --alias=limahb
    # - uses: r0adkll/upload-google-play@v1
    #   with:
    #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON_PLAIN_TEXT }}
    #     packageName: de.wildeligamanager.bremen
    #     releaseFiles: app/platforms/android/app/build/outputs/apk/release/*.apk
    #     track: beta
    #     inAppUpdatePriority: 5
    #     status: completed
        # userFraction: 0.33
        # whatsNewDirectory: distribution/whatsnew
        # mappingFile: app/build/outputs/mapping/release/mapping.txt
    # - uses: ruby/setup-ruby@v1
    #   with:
    #     ruby-version: '2.7.2'
    # - uses: maierj/fastlane-action@v2.0.1
    #   with:
    #     lane: 'beta'
    #     skip-tracking: true
    #     subdirectory: app/platforms/android/app/build/outputs/apk/release/
