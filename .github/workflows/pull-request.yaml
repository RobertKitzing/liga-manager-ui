name: Pull Requests

env:
  HUSKY: 0
  DOCKER_REPO_UI: robertkitzing/liga-manager-ui
  DOCKER_REPO_IMGPROXY: robertkitzing/liga-manager-imgproxy
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_NO_CLOUD: false

on:
  pull_request:
    branches: 
      - main

jobs:
  npm-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: ./.github/actions/audit-composite-action
  npm-install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - uses: ./.github/actions/npm-install-composite-action
  lint:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx affected -t lint
  test:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx affected -t test
      - name: Download Artifact (base code coverage results)
        uses: dawidd6/action-download-artifact@v2
        id: restoreCodeCoverage
        with:
          workflow: main.yaml
          workflow_conclusion: success
          branch: main
          name: code-coverage-report
          path: ./coverage-base
        continue-on-error: true
      - name: "Check file existence"
        uses: andstor/file-existence-action@v3
        with:
          files: ./coverage
      - name: Code Coverage on PR
        uses: dkhunt27/nx-code-coverage@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          no-coverage-ran: "${{ !steps.check_files.outputs.files_exists }}"
          coverage-folder: ./coverage
          coverage-base-folder: ./coverage-base
          gist-processing: false
          named-logo: jest
          color: green
          hide-coverage-reports: false
          hide-unchanged: false
  build:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-composite-action
        with:
          docker-repo-ui: ${{ env.DOCKER_REPO_UI }}
          docker-repo-imgproxy: ${{ env.DOCKER_REPO_IMGPROXY }}
  e2e:
    runs-on: ubuntu-latest
    needs: 
      - test
      - lint
      - build
    strategy:
      fail-fast: false
      matrix:
        container: [0, 1, 2, 3, 4 ,5]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/e2e-composite-action
        with:
          docker-repo-ui: ${{ env.DOCKER_REPO_UI }}
          docker-repo-imgproxy: ${{ env.DOCKER_REPO_IMGPROXY }}
          cypress-record-key: ${{ secrets.CYPRESS_RECORD_KEY }}
  publish-docker-images:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Download artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: lima-img
          path: /tmp
      - name: Download artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: imgproxy-img
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/lima.tar
      - name: Load image
        run: |
          docker load --input /tmp/imgproxy.tar
      - name: Tag/push image with Version
        run: |
          docker tag ${{ env.DOCKER_REPO_UI }}:e2e ${{ env.DOCKER_REPO_UI }}:${{ steps.package-version.outputs.current-version}}-pre
          docker push ${{ env.DOCKER_REPO_UI }}:${{ steps.package-version.outputs.current-version}}-pre
      - name: Tag/push image with Version
        run: |
          docker tag ${{ env.DOCKER_REPO_IMGPROXY }}:e2e ${{ env.DOCKER_REPO_IMGPROXY }}:${{ steps.package-version.outputs.current-version}}-pre
          docker push ${{ env.DOCKER_REPO_IMGPROXY }}:${{ steps.package-version.outputs.current-version}}-pre
  build-app-staging:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:production
      - run: npx nx-cloud record -- nx run liga-manager-ui:copy:app-settings:staging
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:sync:android
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: npm install Capacitor
        working-directory: apps/liga-manager-ui-web
        run: npm ci
      - name: Set Capacitor Version
        run: npx capacitor-set-version set:android -v ${{ steps.package-version.outputs.current-version }} -b ${{ github.run_number  }}
        working-directory: apps/liga-manager-ui-web
      - name: Extract Android signing key from env
        working-directory: apps/liga-manager-ui-web
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > ./release.jks
      - uses: actions/cache@v4
        with:
          path: apps/liga-manager-ui-web/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: sudo apt install apksigner
      - name: Build App
        working-directory: apps/liga-manager-ui-web
        run: npx cap build android --keystorepass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --keystorealiaspass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --androidreleasetype APK
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-release-signed-staging
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/release/app-release-signed.apk
      - name: Build Debug App
        working-directory: apps/liga-manager-ui-web/android
        run: ./gradlew assembleDebug
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-debug-signed-staging
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/debug/app-debug.apk
  build-app:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:production
      - run: npx nx-cloud record -- nx run liga-manager-ui:copy:app-settings:prod
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:sync:android
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: npm install Capacitor
        working-directory: apps/liga-manager-ui-web
        run: npm ci
      - name: Set Capacitor Version
        run: npx capacitor-set-version set:android -v ${{ steps.package-version.outputs.current-version }} -b ${{ github.run_number  }}
        working-directory: apps/liga-manager-ui-web
      - name: Extract Android signing key from env
        working-directory: apps/liga-manager-ui-web
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > ./release.jks
      - uses: actions/cache@v4
        with:
          path: apps/liga-manager-ui-web/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: sudo apt install apksigner
      - name: Build App
        working-directory: apps/liga-manager-ui-web
        run: npx cap build android --keystorepass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --keystorealiaspass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --androidreleasetype APK
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-release-signed-prod
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/release/app-release-signed.apk
      - name: Build Debug App
        working-directory: apps/liga-manager-ui-web/android
        run: ./gradlew assembleDebug
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-debug-signed-prod
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/debug/app-debug.apk
