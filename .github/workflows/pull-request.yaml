name: Pull Requests

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

on:
  pull_request:
    branches: 
      - next_nx

jobs:
  npm-install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - uses: actions/cache/restore@v4
      id: cache_restore
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - run: npm ci
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}

  lint:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx affected -t lint

  test:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx affected -t test

      - name: Download Artifact (base code coverage results)
        uses: dawidd6/action-download-artifact@v2
        id: restoreCodeCoverage
        with:
          workflow: main.yaml
          workflow_conclusion: success
          branch: next_nx
          name: code-coverage-report
          path: ./coverage-base
        continue-on-error: true

      - name: Code Coverage on PR
        uses: dkhunt27/nx-code-coverage@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          no-coverage-ran: false
          coverage-folder: ./coverage
          coverage-base-folder: ./coverage-base
          gist-processing: false
          named-logo: jest
          color: green
          hide-coverage-reports: false
          hide-unchanged: false
  
  build:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx run-many --target=build

  e2e:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:production
      - name: Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          load: true
          tags: liga-manager-ui:e2e
      - name: Start Services
        uses: hoverkraft-tech/compose-action@v2.2.0
        env:
          UI_IMAGE: liga-manager-ui
          UI_TAG: 'e2e'
          API_TAG: 'latest'
        with:
          compose-file: "./docker-compose.e2e.yml"
      - name: Add Admin user
        run: docker exec lima-api lima app:user:create --email admin@example.com --password 123456 --role admin --first-name admin --last-name admin --locale en
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          command: npx nx-cloud record -- nx e2e liga-manager-ui-web --config="baseUrl=http://localhost" --browser="chrome" --record --env.CYPRESS_RECORD_KEY="${{ secrets.CYPRESS_RECORD_KEY }}"