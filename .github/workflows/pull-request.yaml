name: Pull Requests

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

on:
  pull_request:
    branches: 
      - next_nx

jobs:
  npm-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm audit --audit-level "high"

  npm-install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - uses: actions/cache/restore@v4
      id: cache_restore
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - run: npm ci
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}

  lint:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx affected -t lint

  test:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx affected -t test

      - name: Download Artifact (base code coverage results)
        uses: dawidd6/action-download-artifact@v2
        id: restoreCodeCoverage
        with:
          workflow: main.yaml
          workflow_conclusion: success
          branch: next_nx
          name: code-coverage-report
          path: ./coverage-base
        continue-on-error: true

      - name: Code Coverage on PR
        uses: dkhunt27/nx-code-coverage@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          no-coverage-ran: false
          coverage-folder: ./coverage
          coverage-base-folder: ./coverage-base
          gist-processing: false
          named-logo: jest
          color: green
          hide-coverage-reports: false
          hide-unchanged: false
  
  build:
    runs-on: ubuntu-latest
    needs: 
      - npm-install
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      - run: npx nx-cloud record -- nx run-many --target=build

  e2e:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - build

    strategy:
      fail-fast: false
      matrix:
        containers: [0, 1, 2, 3, 4 ,5]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:production
      - name: Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          load: true
          tags: liga-manager-ui:e2e
      - name: Start Services
        uses: hoverkraft-tech/compose-action@v2.2.0
        env:
          UI_IMAGE: liga-manager-ui
          UI_TAG: 'e2e'
          API_TAG: 'latest'
        with:
          compose-file: "./docker-compose.e2e.yml"
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          command: npx nx-cloud record -- nx e2e liga-manager-ui-web --config="baseUrl=http://localhost" --browser="chrome" --record --env.CYPRESS_RECORD_KEY="${{ secrets.CYPRESS_RECORD_KEY }}" --args="--parallel" --group 4x-chrome

  build-app-staging:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
      
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:development
      - run: npx nx-cloud record -- nx run liga-manager-ui:copy:app-settings:staging
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:sync:android

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      
      - name: npm install Capacitor
        working-directory: apps/liga-manager-ui-web
        run: npm ci

      - name: Set Capacitor Version
        run: npx capacitor-set-version set:android -v ${{ steps.package-version.outputs.current-version }} -b ${{ github.run_number  }}
        working-directory: apps/liga-manager-ui-web

      - name: Extract Android signing key from env
        working-directory: apps/liga-manager-ui-web
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > ./release.jks

      - uses: actions/cache@v4
        with:
          path: apps/liga-manager-ui-web/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - run: sudo apt install apksigner
  
      - name: Build App
        working-directory: apps/liga-manager-ui-web
        run: npx cap build android --keystorepass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --keystorealiaspass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --androidreleasetype APK

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-release-signed-staging
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/release/app-release-signed.apk

      - name: Build Debug App
        working-directory: apps/liga-manager-ui-web/android
        run: ./gradlew assembleDebug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-debug-signed-staging
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/debug/app-debug.apk

  build-app:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: next_nx
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
      
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:build:development
      - run: npx nx-cloud record -- nx run liga-manager-ui:copy:app-settings:prod
      - run: npx nx-cloud record -- nx run liga-manager-ui-web:sync:android

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      
      - name: npm install Capacitor
        working-directory: apps/liga-manager-ui-web
        run: npm ci

      - name: Set Capacitor Version
        run: npx capacitor-set-version set:android -v ${{ steps.package-version.outputs.current-version }} -b ${{ github.run_number  }}
        working-directory: apps/liga-manager-ui-web

      - name: Extract Android signing key from env
        working-directory: apps/liga-manager-ui-web
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > ./release.jks

      - uses: actions/cache@v4
        with:
          path: apps/liga-manager-ui-web/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - run: sudo apt install apksigner
  
      - name: Build App
        working-directory: apps/liga-manager-ui-web
        run: npx cap build android --keystorepass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --keystorealiaspass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} --androidreleasetype APK

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-release-signed-prod
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/release/app-release-signed.apk

      - name: Build Debug App
        working-directory: apps/liga-manager-ui-web/android
        run: ./gradlew assembleDebug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lima-app-debug-signed-prod
          path: apps/liga-manager-ui-web/android/app/build/outputs/apk/debug/app-debug.apk