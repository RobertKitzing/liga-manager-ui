{
  "version": 3,
  "sources": ["../../../../../../node_modules/@apollo/client/link/error/index.js"],
  "sourcesContent": ["import { __extends } from \"tslib\";\nimport { graphQLResultHasProtocolErrors, PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nexport function onError(errorHandler) {\n  return new ApolloLink(function (operation, forward) {\n    return new Observable(function (observer) {\n      var sub;\n      var retriedSub;\n      var retriedResult;\n      try {\n        sub = forward(operation).subscribe({\n          next: function (result) {\n            if (result.errors) {\n              retriedResult = errorHandler({\n                graphQLErrors: result.errors,\n                response: result,\n                operation: operation,\n                forward: forward\n              });\n            } else if (graphQLResultHasProtocolErrors(result)) {\n              retriedResult = errorHandler({\n                protocolErrors: result.extensions[PROTOCOL_ERRORS_SYMBOL],\n                response: result,\n                operation: operation,\n                forward: forward\n              });\n            }\n            if (retriedResult) {\n              retriedSub = retriedResult.subscribe({\n                next: observer.next.bind(observer),\n                error: observer.error.bind(observer),\n                complete: observer.complete.bind(observer)\n              });\n              return;\n            }\n            observer.next(result);\n          },\n          error: function (networkError) {\n            retriedResult = errorHandler({\n              operation: operation,\n              networkError: networkError,\n              //Network errors can return GraphQL errors on for example a 403\n              graphQLErrors: networkError && networkError.result && networkError.result.errors || void 0,\n              forward: forward\n            });\n            if (retriedResult) {\n              retriedSub = retriedResult.subscribe({\n                next: observer.next.bind(observer),\n                error: observer.error.bind(observer),\n                complete: observer.complete.bind(observer)\n              });\n              return;\n            }\n            observer.error(networkError);\n          },\n          complete: function () {\n            // disable the previous sub from calling complete on observable\n            // if retry is in flight.\n            if (!retriedResult) {\n              observer.complete.bind(observer)();\n            }\n          }\n        });\n      } catch (e) {\n        errorHandler({\n          networkError: e,\n          operation: operation,\n          forward: forward\n        });\n        observer.error(e);\n      }\n      return function () {\n        if (sub) sub.unsubscribe();\n        if (retriedSub) sub.unsubscribe();\n      };\n    });\n  });\n}\nvar ErrorLink = /** @class */function (_super) {\n  __extends(ErrorLink, _super);\n  function ErrorLink(errorHandler) {\n    var _this = _super.call(this) || this;\n    _this.link = onError(errorHandler);\n    return _this;\n  }\n  ErrorLink.prototype.request = function (operation, forward) {\n    return this.link.request(operation, forward);\n  };\n  return ErrorLink;\n}(ApolloLink);\nexport { ErrorLink };\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAIO,SAAS,QAAQ,cAAc;AACpC,SAAO,IAAI,WAAW,SAAU,WAAW,SAAS;AAClD,WAAO,IAAI,WAAW,SAAU,UAAU;AACxC,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACF,cAAM,QAAQ,SAAS,EAAE,UAAU;AAAA,UACjC,MAAM,SAAU,QAAQ;AACtB,gBAAI,OAAO,QAAQ;AACjB,8BAAgB,aAAa;AAAA,gBAC3B,eAAe,OAAO;AAAA,gBACtB,UAAU;AAAA,gBACV;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH,WAAW,+BAA+B,MAAM,GAAG;AACjD,8BAAgB,aAAa;AAAA,gBAC3B,gBAAgB,OAAO,WAAW,sBAAsB;AAAA,gBACxD,UAAU;AAAA,gBACV;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH;AACA,gBAAI,eAAe;AACjB,2BAAa,cAAc,UAAU;AAAA,gBACnC,MAAM,SAAS,KAAK,KAAK,QAAQ;AAAA,gBACjC,OAAO,SAAS,MAAM,KAAK,QAAQ;AAAA,gBACnC,UAAU,SAAS,SAAS,KAAK,QAAQ;AAAA,cAC3C,CAAC;AACD;AAAA,YACF;AACA,qBAAS,KAAK,MAAM;AAAA,UACtB;AAAA,UACA,OAAO,SAAU,cAAc;AAC7B,4BAAgB,aAAa;AAAA,cAC3B;AAAA,cACA;AAAA;AAAA,cAEA,eAAe,gBAAgB,aAAa,UAAU,aAAa,OAAO,UAAU;AAAA,cACpF;AAAA,YACF,CAAC;AACD,gBAAI,eAAe;AACjB,2BAAa,cAAc,UAAU;AAAA,gBACnC,MAAM,SAAS,KAAK,KAAK,QAAQ;AAAA,gBACjC,OAAO,SAAS,MAAM,KAAK,QAAQ;AAAA,gBACnC,UAAU,SAAS,SAAS,KAAK,QAAQ;AAAA,cAC3C,CAAC;AACD;AAAA,YACF;AACA,qBAAS,MAAM,YAAY;AAAA,UAC7B;AAAA,UACA,UAAU,WAAY;AAGpB,gBAAI,CAAC,eAAe;AAClB,uBAAS,SAAS,KAAK,QAAQ,EAAE;AAAA,YACnC;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,SAAS,GAAG;AACV,qBAAa;AAAA,UACX,cAAc;AAAA,UACd;AAAA,UACA;AAAA,QACF,CAAC;AACD,iBAAS,MAAM,CAAC;AAAA,MAClB;AACA,aAAO,WAAY;AACjB,YAAI,IAAK,KAAI,YAAY;AACzB,YAAI,WAAY,KAAI,YAAY;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AACA,IAAI;AAAA;AAAA,EAAyB,SAAU,QAAQ;AAC7C,cAAUA,YAAW,MAAM;AAC3B,aAASA,WAAU,cAAc;AAC/B,UAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,YAAM,OAAO,QAAQ,YAAY;AACjC,aAAO;AAAA,IACT;AACA,IAAAA,WAAU,UAAU,UAAU,SAAU,WAAW,SAAS;AAC1D,aAAO,KAAK,KAAK,QAAQ,WAAW,OAAO;AAAA,IAC7C;AACA,WAAOA;AAAA,EACT,EAAE,UAAU;AAAA;",
  "names": ["ErrorLink"]
}
