{
  "version": 3,
  "sources": ["../../../../../../node_modules/@apollo/client/link/utils/fromError.js", "../../../../../../node_modules/@apollo/client/link/utils/toPromise.js", "../../../../../../node_modules/@apollo/client/link/utils/fromPromise.js", "../../../../../../node_modules/@apollo/client/link/utils/throwServerError.js", "../../../../../../node_modules/@apollo/client/link/utils/validateOperation.js", "../../../../../../node_modules/@apollo/client/link/utils/createOperation.js", "../../../../../../node_modules/@apollo/client/link/utils/transformOperation.js", "../../../../../../node_modules/@apollo/client/link/utils/filterOperationVariables.js", "../../../../../../node_modules/@apollo/client/link/core/ApolloLink.js", "../../../../../../node_modules/@apollo/client/link/core/empty.js", "../../../../../../node_modules/@apollo/client/link/core/from.js", "../../../../../../node_modules/@apollo/client/link/core/split.js", "../../../../../../node_modules/@apollo/client/link/core/concat.js", "../../../../../../node_modules/@apollo/client/link/core/execute.js"],
  "sourcesContent": ["import { Observable } from \"../../utilities/index.js\";\nexport function fromError(errorValue) {\n  return new Observable(function (observer) {\n    observer.error(errorValue);\n  });\n}\n", "import { invariant } from \"../../utilities/globals/index.js\";\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          globalThis.__DEV__ !== false && invariant.warn(45);\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}\n", "import { Observable } from \"../../utilities/index.js\";\nexport function fromPromise(promise) {\n  return new Observable(function (observer) {\n    promise.then(function (value) {\n      observer.next(value);\n      observer.complete();\n    }).catch(observer.error.bind(observer));\n  });\n}\n", "export var throwServerError = function (response, result, message) {\n  var error = new Error(message);\n  error.name = \"ServerError\";\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n", "import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport function validateOperation(operation) {\n  var OPERATION_FIELDS = [\"query\", \"operationName\", \"variables\", \"extensions\", \"context\"];\n  for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw newInvariantError(46, key);\n    }\n  }\n  return operation;\n}\n", "import { __assign } from \"tslib\";\nexport function createOperation(starting, operation) {\n  var context = __assign({}, starting);\n  var setContext = function (next) {\n    if (typeof next === \"function\") {\n      context = __assign(__assign({}, context), next(context));\n    } else {\n      context = __assign(__assign({}, context), next);\n    }\n  };\n  var getContext = function () {\n    return __assign({}, context);\n  };\n  Object.defineProperty(operation, \"setContext\", {\n    enumerable: false,\n    value: setContext\n  });\n  Object.defineProperty(operation, \"getContext\", {\n    enumerable: false,\n    value: getContext\n  });\n  return operation;\n}\n", "import { getOperationName } from \"../../utilities/index.js\";\nexport function transformOperation(operation) {\n  var transformedOperation = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query\n  };\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName = typeof transformedOperation.query !== \"string\" ? getOperationName(transformedOperation.query) || undefined : \"\";\n  }\n  return transformedOperation;\n}\n", "import { __assign } from \"tslib\";\nimport { visit } from \"graphql\";\nexport function filterOperationVariables(variables, query) {\n  var result = __assign({}, variables);\n  var unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable: function (node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (parent && parent.kind !== \"VariableDefinition\") {\n        unusedNames.delete(node.name.value);\n      }\n    }\n  });\n  unusedNames.forEach(function (name) {\n    delete result[name];\n  });\n  return result;\n}\n", "import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n  return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n  return link.request.length <= 1;\n}\nvar ApolloLink = /** @class */function () {\n  function ApolloLink(request) {\n    if (request) this.request = request;\n  }\n  ApolloLink.empty = function () {\n    return new ApolloLink(function () {\n      return Observable.of();\n    });\n  };\n  ApolloLink.from = function (links) {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce(function (x, y) {\n      return x.concat(y);\n    });\n  };\n  ApolloLink.split = function (test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    var ret;\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      ret = new ApolloLink(function (operation) {\n        return test(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      ret = new ApolloLink(function (operation, forward) {\n        return test(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n    return Object.assign(ret, {\n      left: leftLink,\n      right: rightLink\n    });\n  };\n  ApolloLink.execute = function (link, operation) {\n    return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();\n  };\n  ApolloLink.concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      globalThis.__DEV__ !== false && invariant.warn(38, firstLink);\n      return firstLink;\n    }\n    var nextLink = toLink(second);\n    var ret;\n    if (isTerminating(nextLink)) {\n      ret = new ApolloLink(function (operation) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op) || Observable.of();\n        }) || Observable.of();\n      });\n    } else {\n      ret = new ApolloLink(function (operation, forward) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of();\n      });\n    }\n    return Object.assign(ret, {\n      left: firstLink,\n      right: nextLink\n    });\n  };\n  ApolloLink.prototype.split = function (test, left, right) {\n    return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n  };\n  ApolloLink.prototype.concat = function (next) {\n    return ApolloLink.concat(this, next);\n  };\n  ApolloLink.prototype.request = function (operation, forward) {\n    throw newInvariantError(39);\n  };\n  ApolloLink.prototype.onError = function (error, observer) {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  };\n  ApolloLink.prototype.setOnError = function (fn) {\n    this.onError = fn;\n    return this;\n  };\n  return ApolloLink;\n}();\nexport { ApolloLink };\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var empty = ApolloLink.empty;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var from = ApolloLink.from;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var split = ApolloLink.split;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var concat = ApolloLink.concat;\n", "import { ApolloLink } from \"./ApolloLink.js\";\nexport var execute = ApolloLink.execute;\n"],
  "mappings": "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",
  "names": ["ApolloLink"]
}
