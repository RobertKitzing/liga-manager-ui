{
  "version": 3,
  "sources": ["../../../../../../node_modules/@aparajita/capacitor-dark-mode/dist/esm/web.js"],
  "sourcesContent": ["import { DarkModeBase } from './base';\n// eslint-disable-next-line import/prefer-default-export\nexport class DarkModeWeb extends DarkModeBase {\n  async registerDarkModeListener() {\n    // On the web, we can use a MediaQueryList listener.\n    const onChange = ev => {\n      this.update({\n        dark: ev.matches\n      }).catch(console.error);\n    };\n    const query = this.getDarkModeQuery();\n    // Some browsers do no support addEventListener\n    if (query.addEventListener) {\n      query.addEventListener('change', onChange);\n    } else {\n      query.addListener(onChange);\n    }\n    this.registeredListener = true;\n    return Promise.resolve();\n  }\n  async isDarkMode() {\n    const query = this.getDarkModeQuery();\n    return Promise.resolve({\n      dark: query ? query.matches : false\n    });\n  }\n  getDarkModeQuery() {\n    if (!this.mediaQuery) {\n      this.mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    }\n    return this.mediaQuery;\n  }\n}"],
  "mappings": ";;;;;;;;;AAEO,IAAM,cAAN,cAA0B,aAAa;AAAA,EACtC,2BAA2B;AAAA;AAE/B,YAAM,WAAW,QAAM;AACrB,aAAK,OAAO;AAAA,UACV,MAAM,GAAG;AAAA,QACX,CAAC,EAAE,MAAM,QAAQ,KAAK;AAAA,MACxB;AACA,YAAM,QAAQ,KAAK,iBAAiB;AAEpC,UAAI,MAAM,kBAAkB;AAC1B,cAAM,iBAAiB,UAAU,QAAQ;AAAA,MAC3C,OAAO;AACL,cAAM,YAAY,QAAQ;AAAA,MAC5B;AACA,WAAK,qBAAqB;AAC1B,aAAO,QAAQ,QAAQ;AAAA,IACzB;AAAA;AAAA,EACM,aAAa;AAAA;AACjB,YAAM,QAAQ,KAAK,iBAAiB;AACpC,aAAO,QAAQ,QAAQ;AAAA,QACrB,MAAM,QAAQ,MAAM,UAAU;AAAA,MAChC,CAAC;AAAA,IACH;AAAA;AAAA,EACA,mBAAmB;AACjB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,OAAO,WAAW,8BAA8B;AAAA,IACpE;AACA,WAAO,KAAK;AAAA,EACd;AACF;",
  "names": []
}
